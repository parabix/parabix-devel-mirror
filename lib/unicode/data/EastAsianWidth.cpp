
/*
 *  Copyright (c) 2021 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by UCD_properties.py - manual edits may be lost.
 *  EastAsianWidth
 */

#include <unicode/core/unicode_set.h>
#include <unicode/data/PropertyAliases.h>
#include <unicode/data/PropertyObjects.h>
#include <unicode/data/PropertyValueAliases.h>

namespace UCD {
  namespace EA_ns {
    const unsigned independent_prop_values = 6;
    /** Code Point Ranges for N
    [0000, 001f], [007f, 00a0], [00a9, 00a9], [00ab, 00ab], [00b5, 00b5],
    [00bb, 00bb], [00c0, 00c5], [00c7, 00cf], [00d1, 00d6], [00d9, 00dd],
    [00e2, 00e5], [00e7, 00e7], [00eb, 00eb], [00ee, 00ef], [00f1, 00f1],
    [00f4, 00f6], [00fb, 00fb], [00fd, 00fd], [00ff, 0100], [0102, 0110],
    [0112, 0112], [0114, 011a], [011c, 0125], [0128, 012a], [012c, 0130],
    [0134, 0137], [0139, 013e], [0143, 0143], [0145, 0147], [014c, 014c],
    [014e, 0151], [0154, 0165], [0168, 016a], [016c, 01cd], [01cf, 01cf],
    [01d1, 01d1], [01d3, 01d3], [01d5, 01d5], [01d7, 01d7], [01d9, 01d9],
    [01db, 01db], [01dd, 0250], [0252, 0260], [0262, 02c3], [02c5, 02c6],
    [02c8, 02c8], [02cc, 02cc], [02ce, 02cf], [02d1, 02d7], [02dc, 02dc],
    [02de, 02de], [02e0, 02ff], [0370, 0390], [03a2, 03a2], [03aa, 03b0],
    [03c2, 03c2], [03ca, 0400], [0402, 040f], [0450, 0450], [0452, 10ff],
    [1160, 200f], [2011, 2012], [2017, 2017], [201a, 201b], [201e, 201f],
    [2023, 2023], [2028, 202f], [2031, 2031], [2034, 2034], [2036, 203a],
    [203c, 203d], [203f, 2073], [2075, 207e], [2080, 2080], [2085, 20a8],
    [20aa, 20ab], [20ad, 2102], [2104, 2104], [2106, 2108], [210a, 2112],
    [2114, 2115], [2117, 2120], [2123, 2125], [2127, 212a], [212c, 2152],
    [2155, 215a], [215f, 215f], [216c, 216f], [217a, 2188], [218a, 218f],
    [219a, 21b7], [21ba, 21d1], [21d3, 21d3], [21d5, 21e6], [21e8, 21ff],
    [2201, 2201], [2204, 2206], [2209, 220a], [220c, 220e], [2210, 2210],
    [2212, 2214], [2216, 2219], [221b, 221c], [2221, 2222], [2224, 2224],
    [2226, 2226], [222d, 222d], [222f, 2233], [2238, 223b], [223e, 2247],
    [2249, 224b], [224d, 2251], [2253, 225f], [2262, 2263], [2268, 2269],
    [226c, 226d], [2270, 2281], [2284, 2285], [2288, 2294], [2296, 2298],
    [229a, 22a4], [22a6, 22be], [22c0, 2311], [2313, 2319], [231c, 2328],
    [232b, 23e8], [23ed, 23ef], [23f1, 23f2], [23f4, 245f], [24ea, 24ea],
    [254c, 254f], [2574, 257f], [2590, 2591], [2596, 259f], [25a2, 25a2],
    [25aa, 25b1], [25b4, 25b5], [25b8, 25bb], [25be, 25bf], [25c2, 25c5],
    [25c9, 25ca], [25cc, 25cd], [25d2, 25e1], [25e6, 25ee], [25f0, 25fc],
    [25ff, 2604], [2607, 2608], [260a, 260d], [2610, 2613], [2616, 261b],
    [261d, 261d], [261f, 263f], [2641, 2641], [2643, 2647], [2654, 265f],
    [2662, 2662], [2666, 2666], [266b, 266b], [266e, 266e], [2670, 267e],
    [2680, 2692], [2694, 269d], [26a0, 26a0], [26a2, 26a9], [26ac, 26bc],
    [26c0, 26c3], [26e2, 26e2], [26e4, 26e7], [2700, 2704], [2706, 2709],
    [270c, 2727], [2729, 273c], [273e, 274b], [274d, 274d], [274f, 2752],
    [2756, 2756], [2758, 2775], [2780, 2794], [2798, 27af], [27b1, 27be],
    [27c0, 27e5], [27ee, 2984], [2987, 2b1a], [2b1d, 2b4f], [2b51, 2b54],
    [2b5a, 2e7f], [2e9a, 2e9a], [2ef4, 2eff], [2fd6, 2fef], [2ffc, 2fff],
    [303f, 3040], [3097, 3098], [3100, 3104], [3130, 3130], [318f, 318f],
    [31e4, 31ef], [321f, 321f], [4dc0, 4dff], [a48d, a48f], [a4c7, a95f],
    [a97d, abff], [d7a4, dfff], [fb00, fdff], [fe1a, fe2f], [fe53, fe53],
    [fe67, fe67], [fe6c, ff00], [ffbf, ffc1], [ffc8, ffc9], [ffd0, ffd1],
    [ffd8, ffd9], [ffdd, ffdf], [ffe7, ffe7], [ffef, fffc], [fffe, 16fdf],
    [16fe5, 16fef], [16ff2, 16fff], [187f8, 187ff], [18cd6, 18cff],
    [18d09, 1afff], [1b11f, 1b14f], [1b153, 1b163], [1b168, 1b16f],
    [1b2fc, 1f003], [1f005, 1f0ce], [1f0d0, 1f0ff], [1f10b, 1f10f],
    [1f12e, 1f12f], [1f16a, 1f16f], [1f1ad, 1f1ff], [1f203, 1f20f],
    [1f23c, 1f23f], [1f249, 1f24f], [1f252, 1f25f], [1f266, 1f2ff],
    [1f321, 1f32c], [1f336, 1f336], [1f37d, 1f37d], [1f394, 1f39f],
    [1f3cb, 1f3ce], [1f3d4, 1f3df], [1f3f1, 1f3f3], [1f3f5, 1f3f7],
    [1f43f, 1f43f], [1f441, 1f441], [1f4fd, 1f4fe], [1f53e, 1f54a],
    [1f54f, 1f54f], [1f568, 1f579], [1f57b, 1f594], [1f597, 1f5a3],
    [1f5a5, 1f5fa], [1f650, 1f67f], [1f6c6, 1f6cb], [1f6cd, 1f6cf],
    [1f6d3, 1f6d4], [1f6d8, 1f6ea], [1f6ed, 1f6f3], [1f6fd, 1f7df],
    [1f7ec, 1f90b], [1f93b, 1f93b], [1f946, 1f946], [1f979, 1f979],
    [1f9cc, 1f9cc], [1fa00, 1fa6f], [1fa75, 1fa77], [1fa7b, 1fa7f],
    [1fa87, 1fa8f], [1faa9, 1faaf], [1fab7, 1fabf], [1fac3, 1facf],
    [1fad7, 1ffff], [2fffe, 2ffff], [3fffe, e00ff], [e01f0, effff],
    [ffffe, fffff], [10fffe, 10ffff]**/


    namespace {
    const static UnicodeSet::run_t __n_Set_runs[] = {
    {Full, 1}, {Empty, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 7}, {Full, 2},
    {Mixed, 1}, {Full, 3}, {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Full, 1},
    {Empty, 3}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Full, 101}, {Empty, 3}, {Full, 117}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
    {Full, 2}, {Mixed, 14}, {Full, 2}, {Mixed, 2}, {Full, 5}, {Mixed, 1},
    {Full, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 2}, {Mixed, 7}, {Full, 1},
    {Mixed, 12}, {Full, 1}, {Mixed, 1}, {Full, 12}, {Mixed, 1}, {Full, 11},
    {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 25}, {Mixed, 1}, {Empty, 2},
    {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
    {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2},
    {Mixed, 2}, {Empty, 221}, {Full, 2}, {Empty, 692}, {Mixed, 1},
    {Empty, 1}, {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Full, 20},
    {Empty, 349}, {Mixed, 1}, {Full, 66}, {Empty, 216}, {Full, 24},
    {Mixed, 4}, {Full, 4}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Full, 895},
    {Mixed, 1}, {Empty, 191}, {Mixed, 1}, {Empty, 38}, {Mixed, 1},
    {Full, 1}, {Mixed, 1}, {Full, 279}, {Empty, 8}, {Mixed, 1}, {Full, 1},
    {Mixed, 2}, {Empty, 11}, {Mixed, 1}, {Full, 488}, {Mixed, 1}, {Full, 5},
    {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
    {Mixed, 1}, {Full, 2}, {Mixed, 4}, {Full, 4}, {Empty, 1}, {Mixed, 1},
    {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
    {Empty, 4}, {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Full, 1}, {Mixed, 1},
    {Empty, 2}, {Mixed, 1}, {Full, 1}, {Empty, 2}, {Mixed, 2}, {Full, 7},
    {Mixed, 1}, {Full, 8}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 1},
    {Full, 3}, {Mixed, 4}, {Full, 41}, {Empty, 2047}, {Mixed, 1},
    {Empty, 2047}, {Mixed, 1}, {Full, 20488}, {Empty, 7}, {Mixed, 1},
    {Full, 2032}, {Empty, 2047}, {Mixed, 1}, {Empty, 2047}, {Mixed, 1}};
    const static UnicodeSet::bitquad_t  __n_Set_quads[] = {
    0x80000000, 0x08200a01, 0x3e7effbf, 0xa872c8bc, 0xf7f5fffd, 0x7ef1f73f,
    0xfff3d0e8, 0xfffff73f, 0xeaaabfff, 0xfffdffff, 0xfffffffd, 0x50fed16f,
    0xffff0000, 0x0001ffff, 0x0001fc04, 0xfffffc04, 0x0000fffd, 0xfffd0000,
    0xcc86ffff, 0xb7d2ff08, 0x7fefffff, 0xffffffe1, 0xffffedff, 0xffb7fdd7,
    0xfffff7b9, 0x87e7ffff, 0xfc00f000, 0xfc00fdff, 0xfcffffff, 0xffebffff,
    0xffffff7f, 0x1bdd7672, 0xcf0fa056, 0xfffbeeff, 0xffff330c, 0xfddfff33,
    0x7fffffdf, 0xf3fbffff, 0xfffff9ff, 0xfff6e1ff, 0x00000400, 0x0000f000,
    0xfff00000, 0xffc30000, 0xcf33fc04, 0xfffc363c, 0x9fff7fc3, 0xafcf3d9f,
    0xfff000fa, 0x7fff4844, 0x3ff7ffff, 0x1ffff3fd, 0x0000000f, 0x000000f4,
    0xfffff3df, 0xdffffeff, 0xff47afff, 0x003fffff, 0xff1fffff, 0x7ffeffff,
    0xffffc03f, 0xffffff9f, 0xe7ffffff, 0xfc1effff, 0x04000000, 0xfff00000,
    0xffc00000, 0xf000ffff, 0x80000000, 0x00000001, 0x01800000, 0x0000001f,
    0x00010000, 0x00008000, 0x0000fff0, 0x80000000, 0x0000e000, 0xffffff80,
    0xe0000000, 0xfffffff0, 0xfc000000, 0x0000ffff, 0x00080000, 0xfffff080,
    0x00000001, 0x80000000, 0xe3030303, 0xdfff8080, 0xfffcffe0, 0xff000000,
    0xffc00000, 0xfffffe00, 0x80000000, 0xfff8ffff, 0x0000ff0f, 0xf0000000,
    0xffffffef, 0xffff7fff, 0x0000f800, 0x0000c000, 0x0000fc00, 0xffffe000,
    0x0000fff8, 0xf0000000, 0xfffcfe00, 0xffffffc0, 0x00401ffe, 0x20000000,
    0xfff00000, 0xfff07800, 0x00ee0000, 0x80000000, 0x00000002, 0x60000000,
    0xc0000000, 0x000087ff, 0xfbffff00, 0xff9fffff, 0xffffffef, 0x07ffffff,
    0xffff0000, 0xff18efc0, 0xe00fe7ff, 0xfffff000, 0x00000fff, 0x08000000,
    0x00000040, 0x02000000, 0x00001000, 0xf8e0ffff, 0x0000ff80, 0xff80fe00,
    0xff80fff8, 0xc0000000, 0xc0000000, 0xffff0000, 0xc0000000, 0xc0000000};
    }

    const static UnicodeSet n_Set{const_cast<UnicodeSet::run_t *>(__n_Set_runs), 149, 0, const_cast<UnicodeSet::bitquad_t *>(__n_Set_quads), 138, 0};

    /** Code Point Ranges for Na
    [0020, 007e], [00a2, 00a3], [00a5, 00a6], [00ac, 00ac], [00af, 00af],
    [27e6, 27ed], [2985, 2986]**/


    namespace {
    const static UnicodeSet::run_t __na_Set_runs[] = {
    {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 313},
    {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 34483}};
    const static UnicodeSet::bitquad_t  __na_Set_quads[] = {
    0x7fffffff, 0x0000906c, 0x00003fc0, 0x00000060};
    }

    const static UnicodeSet na_Set{const_cast<UnicodeSet::run_t *>(__na_Set_runs), 10, 0, const_cast<UnicodeSet::bitquad_t *>(__na_Set_quads), 4, 0};

    /** Code Point Ranges for A
    [00a1, 00a1], [00a4, 00a4], [00a7, 00a8], [00aa, 00aa], [00ad, 00ae],
    [00b0, 00b4], [00b6, 00ba], [00bc, 00bf], [00c6, 00c6], [00d0, 00d0],
    [00d7, 00d8], [00de, 00e1], [00e6, 00e6], [00e8, 00ea], [00ec, 00ed],
    [00f0, 00f0], [00f2, 00f3], [00f7, 00fa], [00fc, 00fc], [00fe, 00fe],
    [0101, 0101], [0111, 0111], [0113, 0113], [011b, 011b], [0126, 0127],
    [012b, 012b], [0131, 0133], [0138, 0138], [013f, 0142], [0144, 0144],
    [0148, 014b], [014d, 014d], [0152, 0153], [0166, 0167], [016b, 016b],
    [01ce, 01ce], [01d0, 01d0], [01d2, 01d2], [01d4, 01d4], [01d6, 01d6],
    [01d8, 01d8], [01da, 01da], [01dc, 01dc], [0251, 0251], [0261, 0261],
    [02c4, 02c4], [02c7, 02c7], [02c9, 02cb], [02cd, 02cd], [02d0, 02d0],
    [02d8, 02db], [02dd, 02dd], [02df, 02df], [0300, 036f], [0391, 03a1],
    [03a3, 03a9], [03b1, 03c1], [03c3, 03c9], [0401, 0401], [0410, 044f],
    [0451, 0451], [2010, 2010], [2013, 2016], [2018, 2019], [201c, 201d],
    [2020, 2022], [2024, 2027], [2030, 2030], [2032, 2033], [2035, 2035],
    [203b, 203b], [203e, 203e], [2074, 2074], [207f, 207f], [2081, 2084],
    [20ac, 20ac], [2103, 2103], [2105, 2105], [2109, 2109], [2113, 2113],
    [2116, 2116], [2121, 2122], [2126, 2126], [212b, 212b], [2153, 2154],
    [215b, 215e], [2160, 216b], [2170, 2179], [2189, 2189], [2190, 2199],
    [21b8, 21b9], [21d2, 21d2], [21d4, 21d4], [21e7, 21e7], [2200, 2200],
    [2202, 2203], [2207, 2208], [220b, 220b], [220f, 220f], [2211, 2211],
    [2215, 2215], [221a, 221a], [221d, 2220], [2223, 2223], [2225, 2225],
    [2227, 222c], [222e, 222e], [2234, 2237], [223c, 223d], [2248, 2248],
    [224c, 224c], [2252, 2252], [2260, 2261], [2264, 2267], [226a, 226b],
    [226e, 226f], [2282, 2283], [2286, 2287], [2295, 2295], [2299, 2299],
    [22a5, 22a5], [22bf, 22bf], [2312, 2312], [2460, 24e9], [24eb, 254b],
    [2550, 2573], [2580, 258f], [2592, 2595], [25a0, 25a1], [25a3, 25a9],
    [25b2, 25b3], [25b6, 25b7], [25bc, 25bd], [25c0, 25c1], [25c6, 25c8],
    [25cb, 25cb], [25ce, 25d1], [25e2, 25e5], [25ef, 25ef], [2605, 2606],
    [2609, 2609], [260e, 260f], [261c, 261c], [261e, 261e], [2640, 2640],
    [2642, 2642], [2660, 2661], [2663, 2665], [2667, 266a], [266c, 266d],
    [266f, 266f], [269e, 269f], [26bf, 26bf], [26c6, 26cd], [26cf, 26d3],
    [26d5, 26e1], [26e3, 26e3], [26e8, 26e9], [26eb, 26f1], [26f4, 26f4],
    [26f6, 26f9], [26fb, 26fc], [26fe, 26ff], [273d, 273d], [2776, 277f],
    [2b56, 2b59], [3248, 324f], [e000, f8ff], [fe00, fe0f], [fffd, fffd],
    [1f100, 1f10a], [1f110, 1f12d], [1f130, 1f169], [1f170, 1f18d],
    [1f18f, 1f190], [1f19b, 1f1ac], [e0100, e01ef], [f0000, ffffd],
    [100000, 10fffd]**/


    namespace {
    const static UnicodeSet::run_t __a_Set_runs[] = {
    {Empty, 5}, {Mixed, 7}, {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 2},
    {Empty, 2}, {Mixed, 1}, {Empty, 1}, {Full, 3}, {Mixed, 4}, {Empty, 1},
    {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 221}, {Mixed, 2}, {Empty, 1},
    {Mixed, 3}, {Empty, 2}, {Mixed, 14}, {Empty, 2}, {Mixed, 1},
    {Empty, 10}, {Full, 4}, {Mixed, 1}, {Full, 2}, {Mixed, 7}, {Empty, 1},
    {Mixed, 6}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 30},
    {Mixed, 1}, {Empty, 55}, {Mixed, 1}, {Empty, 1389}, {Full, 200},
    {Empty, 40}, {Mixed, 1}, {Empty, 14}, {Mixed, 1}, {Empty, 1928},
    {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Empty, 24698}, {Full, 7},
    {Mixed, 1}, {Empty, 2032}, {Full, 2047}, {Mixed, 1}, {Full, 2047},
    {Mixed, 1}};
    const static UnicodeSet::bitquad_t  __a_Set_quads[] = {
    0xf7df6592, 0xc1810040, 0x578d3743, 0x080a0002, 0x810e08c0, 0x000c2f17,
    0x000008c0, 0x15554000, 0x00020000, 0x00000002, 0xaf012e90, 0x0000ffff,
    0xfffe0000, 0xfffe03fb, 0x000003fb, 0xffff0002, 0x0002ffff, 0x33790000,
    0x482d00f7, 0x80100000, 0x0000001e, 0x00001000, 0x00480228, 0x00000846,
    0x78180000, 0x03ff0fff, 0x03ff0200, 0x03000000, 0x00140000, 0x00000080,
    0xe422898d, 0x30f05fa9, 0x00041100, 0x0000ccf3, 0x022000cc, 0x80000020,
    0x00040000, 0xfffffbff, 0xffff0fff, 0x000fffff, 0x003cffff, 0x30cc03fb,
    0x0003c9c3, 0x0000803c, 0x5000c260, 0x00000005, 0x0000b7bb, 0xc0000000,
    0x80000000, 0xffefbfc0, 0xdbd3fb0b, 0x20000000, 0xffc00000, 0x03c00000,
    0x0000ff00, 0x0000ffff, 0x20000000, 0xffff07ff, 0xffff3fff, 0xffff03ff,
    0xf801bfff, 0x00001fff, 0x0000ffff, 0x3fffffff, 0x3fffffff};
    }

    const static UnicodeSet a_Set{const_cast<UnicodeSet::run_t *>(__a_Set_runs), 56, 0, const_cast<UnicodeSet::bitquad_t *>(__a_Set_quads), 65, 0};

    /** Code Point Ranges for W
    [1100, 115f], [231a, 231b], [2329, 232a], [23e9, 23ec], [23f0, 23f0],
    [23f3, 23f3], [25fd, 25fe], [2614, 2615], [2648, 2653], [267f, 267f],
    [2693, 2693], [26a1, 26a1], [26aa, 26ab], [26bd, 26be], [26c4, 26c5],
    [26ce, 26ce], [26d4, 26d4], [26ea, 26ea], [26f2, 26f3], [26f5, 26f5],
    [26fa, 26fa], [26fd, 26fd], [2705, 2705], [270a, 270b], [2728, 2728],
    [274c, 274c], [274e, 274e], [2753, 2755], [2757, 2757], [2795, 2797],
    [27b0, 27b0], [27bf, 27bf], [2b1b, 2b1c], [2b50, 2b50], [2b55, 2b55],
    [2e80, 2e99], [2e9b, 2ef3], [2f00, 2fd5], [2ff0, 2ffb], [3001, 303e],
    [3041, 3096], [3099, 30ff], [3105, 312f], [3131, 318e], [3190, 31e3],
    [31f0, 321e], [3220, 3247], [3250, 4dbf], [4e00, a48c], [a490, a4c6],
    [a960, a97c], [ac00, d7a3], [f900, faff], [fe10, fe19], [fe30, fe52],
    [fe54, fe66], [fe68, fe6b], [16fe0, 16fe4], [16ff0, 16ff1],
    [17000, 187f7], [18800, 18cd5], [18d00, 18d08], [1b000, 1b11e],
    [1b150, 1b152], [1b164, 1b167], [1b170, 1b2fb], [1f004, 1f004],
    [1f0cf, 1f0cf], [1f18e, 1f18e], [1f191, 1f19a], [1f200, 1f202],
    [1f210, 1f23b], [1f240, 1f248], [1f250, 1f251], [1f260, 1f265],
    [1f300, 1f320], [1f32d, 1f335], [1f337, 1f37c], [1f37e, 1f393],
    [1f3a0, 1f3ca], [1f3cf, 1f3d3], [1f3e0, 1f3f0], [1f3f4, 1f3f4],
    [1f3f8, 1f43e], [1f440, 1f440], [1f442, 1f4fc], [1f4ff, 1f53d],
    [1f54b, 1f54e], [1f550, 1f567], [1f57a, 1f57a], [1f595, 1f596],
    [1f5a4, 1f5a4], [1f5fb, 1f64f], [1f680, 1f6c5], [1f6cc, 1f6cc],
    [1f6d0, 1f6d2], [1f6d5, 1f6d7], [1f6eb, 1f6ec], [1f6f4, 1f6fc],
    [1f7e0, 1f7eb], [1f90c, 1f93a], [1f93c, 1f945], [1f947, 1f978],
    [1f97a, 1f9cb], [1f9cd, 1f9ff], [1fa70, 1fa74], [1fa78, 1fa7a],
    [1fa80, 1fa86], [1fa90, 1faa8], [1fab0, 1fab6], [1fac0, 1fac2],
    [1fad0, 1fad6], [20000, 2fffd], [30000, 3fffd]**/


    namespace {
    const static UnicodeSet::run_t __w_Set_runs[] = {
    {Empty, 136}, {Full, 3}, {Empty, 141}, {Mixed, 2}, {Empty, 5},
    {Mixed, 1}, {Empty, 15}, {Mixed, 2}, {Empty, 1}, {Mixed, 9}, {Empty, 1},
    {Mixed, 2}, {Empty, 26}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 25}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 6}, {Mixed, 5},
    {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 2}, {Full, 2}, {Mixed, 1},
    {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 219}, {Empty, 2},
    {Full, 692}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 36}, {Mixed, 1},
    {Empty, 20}, {Full, 349}, {Mixed, 1}, {Empty, 266}, {Full, 16},
    {Empty, 24}, {Mixed, 4}, {Empty, 907}, {Mixed, 1}, {Full, 191},
    {Mixed, 1}, {Full, 38}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
    {Empty, 279}, {Full, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11},
    {Mixed, 1}, {Empty, 488}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
    {Empty, 5}, {Mixed, 1}, {Empty, 3}, {Mixed, 4}, {Empty, 4}, {Full, 1},
    {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 1},
    {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1},
    {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 2}, {Mixed, 2},
    {Empty, 7}, {Mixed, 1}, {Empty, 8}, {Mixed, 4}, {Full, 2}, {Mixed, 1},
    {Full, 1}, {Empty, 3}, {Mixed, 4}, {Empty, 41}, {Full, 2047},
    {Mixed, 1}, {Full, 2047}, {Mixed, 1}, {Empty, 26624}};
    const static UnicodeSet::bitquad_t  __w_Set_quads[] = {
    0x0c000000, 0x00000600, 0x00091e00, 0x60000000, 0x00300000, 0x000fff00,
    0x80000000, 0x00080000, 0x60000c02, 0x00104030, 0x242c0400, 0x00000c20,
    0x00000100, 0x00b85000, 0x00e00000, 0x80010000, 0x18000000, 0x00210000,
    0xfbffffff, 0x000fffff, 0x003fffff, 0x0fff0000, 0xfffffffe, 0x7fffffff,
    0xfffffffe, 0xfe7fffff, 0xffffffe0, 0xfffeffff, 0xffff7fff, 0xffff000f,
    0x7fffffff, 0xffff00ff, 0xffff1fff, 0x0000007f, 0x1fffffff, 0x0000000f,
    0x03ff0000, 0xffff0000, 0xfff7ffff, 0x00000f7f, 0x0003001f, 0x00ffffff,
    0x003fffff, 0x000001ff, 0x7fffffff, 0x00070000, 0xffff00f0, 0x0fffffff,
    0x00000010, 0x00008000, 0x07fe4000, 0xffff0007, 0x0fffffff, 0x000301ff,
    0x0000003f, 0xffbfe001, 0xdfffffff, 0x000fffff, 0x000f87ff, 0xff11ffff,
    0x7fffffff, 0xfffffffd, 0x9fffffff, 0x3fffffff, 0xffff7800, 0x040000ff,
    0x00600000, 0x00000010, 0xf8000000, 0x0000ffff, 0x00e7103f, 0x1ff01800,
    0x00000fff, 0xfffff000, 0xf7ffffff, 0xffffffbf, 0xfdffffff, 0xffffefff,
    0x071f0000, 0xffff007f, 0x007f01ff, 0x007f0007, 0x3fffffff, 0x3fffffff};
    }

    const static UnicodeSet w_Set{const_cast<UnicodeSet::run_t *>(__w_Set_runs), 105, 0, const_cast<UnicodeSet::bitquad_t *>(__w_Set_quads), 84, 0};

    /** Code Point Ranges for H
    [20a9, 20a9], [ff61, ffbe], [ffc2, ffc7], [ffca, ffcf], [ffd2, ffd7],
    [ffda, ffdc], [ffe8, ffee]**/


    namespace {
    const static UnicodeSet::run_t __h_Set_runs[] = {
    {Empty, 261}, {Mixed, 1}, {Empty, 1781}, {Mixed, 1}, {Full, 1},
    {Mixed, 3}, {Empty, 32768}};
    const static UnicodeSet::bitquad_t  __h_Set_quads[] = {
    0x00000200, 0xfffffffe, 0x7fffffff, 0x1cfcfcfc, 0x00007f00};
    }

    const static UnicodeSet h_Set{const_cast<UnicodeSet::run_t *>(__h_Set_runs), 7, 0, const_cast<UnicodeSet::bitquad_t *>(__h_Set_quads), 5, 0};

    /** Code Point Ranges for F
    [3000, 3000], [ff01, ff60], [ffe0, ffe6]**/


    namespace {
    const static UnicodeSet::run_t __f_Set_runs[] = {
    {Empty, 384}, {Mixed, 1}, {Empty, 1655}, {Mixed, 1}, {Full, 2},
    {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 32768}};
    const static UnicodeSet::bitquad_t  __f_Set_quads[] = {
    0x00000001, 0xfffffffe, 0x00000001, 0x0000007f};
    }

    const static UnicodeSet f_Set{const_cast<UnicodeSet::run_t *>(__f_Set_runs), 9, 0, const_cast<UnicodeSet::bitquad_t *>(__f_Set_quads), 4, 0};

    static EnumeratedPropertyObject property_object
        {ea,
        EA_ns::independent_prop_values,
        std::move(EA_ns::enum_names),
        std::move(EA_ns::value_names),
        std::move(EA_ns::aliases_only_map),{
        &n_Set, &na_Set, &a_Set, &w_Set, &h_Set, &f_Set
        }};
    }
PropertyObject * get_EA_PropertyObject() {  return & EA_ns::property_object; }
}
