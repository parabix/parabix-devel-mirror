
/*
 *  Copyright (c) 2021 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by UCD_properties.py - manual edits may be lost.
 *  CompatibilityProperties
 */

#include <unicode/core/unicode_set.h>
#include <unicode/data/PropertyAliases.h>
#include <unicode/data/PropertyObjects.h>
#include <unicode/data/PropertyValueAliases.h>

namespace UCD {
    namespace ALNUM_ns {
        /** Code Point Ranges for alnum
        [0030, 0039], [0041, 005a], [0061, 007a], [00aa, 00aa],
        [00b5, 00b5], [00ba, 00ba], [00c0, 00d6], [00d8, 00f6],
        [00f8, 02c1], [02c6, 02d1], [02e0, 02e4], [02ec, 02ec],
        [02ee, 02ee], [0345, 0345], [0370, 0374], [0376, 0377],
        [037a, 037d], [037f, 037f], [0386, 0386], [0388, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 03f5], [03f7, 0481],
        [048a, 052f], [0531, 0556], [0559, 0559], [0560, 0588],
        [05b0, 05bd], [05bf, 05bf], [05c1, 05c2], [05c4, 05c5],
        [05c7, 05c7], [05d0, 05ea], [05ef, 05f2], [0610, 061a],
        [0620, 0657], [0659, 0669], [066e, 06d3], [06d5, 06dc],
        [06e1, 06e8], [06ed, 06fc], [06ff, 06ff], [0710, 073f],
        [074d, 07b1], [07c0, 07ea], [07f4, 07f5], [07fa, 07fa],
        [0800, 0817], [081a, 082c], [0840, 0858], [0860, 086a],
        [08a0, 08b4], [08b6, 08c7], [08d4, 08df], [08e3, 08e9],
        [08f0, 093b], [093d, 094c], [094e, 0950], [0955, 0963],
        [0966, 096f], [0971, 0983], [0985, 098c], [098f, 0990],
        [0993, 09a8], [09aa, 09b0], [09b2, 09b2], [09b6, 09b9],
        [09bd, 09c4], [09c7, 09c8], [09cb, 09cc], [09ce, 09ce],
        [09d7, 09d7], [09dc, 09dd], [09df, 09e3], [09e6, 09f1],
        [09fc, 09fc], [0a01, 0a03], [0a05, 0a0a], [0a0f, 0a10],
        [0a13, 0a28], [0a2a, 0a30], [0a32, 0a33], [0a35, 0a36],
        [0a38, 0a39], [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4c],
        [0a51, 0a51], [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a75],
        [0a81, 0a83], [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8],
        [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9], [0abd, 0ac5],
        [0ac7, 0ac9], [0acb, 0acc], [0ad0, 0ad0], [0ae0, 0ae3],
        [0ae6, 0aef], [0af9, 0afc], [0b01, 0b03], [0b05, 0b0c],
        [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33],
        [0b35, 0b39], [0b3d, 0b44], [0b47, 0b48], [0b4b, 0b4c],
        [0b56, 0b57], [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b6f],
        [0b71, 0b71], [0b82, 0b83], [0b85, 0b8a], [0b8e, 0b90],
        [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c], [0b9e, 0b9f],
        [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9], [0bbe, 0bc2],
        [0bc6, 0bc8], [0bca, 0bcc], [0bd0, 0bd0], [0bd7, 0bd7],
        [0be6, 0bef], [0c00, 0c03], [0c05, 0c0c], [0c0e, 0c10],
        [0c12, 0c28], [0c2a, 0c39], [0c3d, 0c44], [0c46, 0c48],
        [0c4a, 0c4c], [0c55, 0c56], [0c58, 0c5a], [0c60, 0c63],
        [0c66, 0c6f], [0c80, 0c83], [0c85, 0c8c], [0c8e, 0c90],
        [0c92, 0ca8], [0caa, 0cb3], [0cb5, 0cb9], [0cbd, 0cc4],
        [0cc6, 0cc8], [0cca, 0ccc], [0cd5, 0cd6], [0cde, 0cde],
        [0ce0, 0ce3], [0ce6, 0cef], [0cf1, 0cf2], [0d00, 0d0c],
        [0d0e, 0d10], [0d12, 0d3a], [0d3d, 0d44], [0d46, 0d48],
        [0d4a, 0d4c], [0d4e, 0d4e], [0d54, 0d57], [0d5f, 0d63],
        [0d66, 0d6f], [0d7a, 0d7f], [0d81, 0d83], [0d85, 0d96],
        [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6],
        [0dcf, 0dd4], [0dd6, 0dd6], [0dd8, 0ddf], [0de6, 0def],
        [0df2, 0df3], [0e01, 0e3a], [0e40, 0e46], [0e4d, 0e4d],
        [0e50, 0e59], [0e81, 0e82], [0e84, 0e84], [0e86, 0e8a],
        [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0eb9], [0ebb, 0ebd],
        [0ec0, 0ec4], [0ec6, 0ec6], [0ecd, 0ecd], [0ed0, 0ed9],
        [0edc, 0edf], [0f00, 0f00], [0f20, 0f29], [0f40, 0f47],
        [0f49, 0f6c], [0f71, 0f81], [0f88, 0f97], [0f99, 0fbc],
        [1000, 1036], [1038, 1038], [103b, 1049], [1050, 109d],
        [10a0, 10c5], [10c7, 10c7], [10cd, 10cd], [10d0, 10fa],
        [10fc, 1248], [124a, 124d], [1250, 1256], [1258, 1258],
        [125a, 125d], [1260, 1288], [128a, 128d], [1290, 12b0],
        [12b2, 12b5], [12b8, 12be], [12c0, 12c0], [12c2, 12c5],
        [12c8, 12d6], [12d8, 1310], [1312, 1315], [1318, 135a],
        [1380, 138f], [13a0, 13f5], [13f8, 13fd], [1401, 166c],
        [166f, 167f], [1681, 169a], [16a0, 16ea], [16ee, 16f8],
        [1700, 170c], [170e, 1713], [1720, 1733], [1740, 1753],
        [1760, 176c], [176e, 1770], [1772, 1773], [1780, 17b3],
        [17b6, 17c8], [17d7, 17d7], [17dc, 17dc], [17e0, 17e9],
        [1810, 1819], [1820, 1878], [1880, 18aa], [18b0, 18f5],
        [1900, 191e], [1920, 192b], [1930, 1938], [1946, 196d],
        [1970, 1974], [1980, 19ab], [19b0, 19c9], [19d0, 19d9],
        [1a00, 1a1b], [1a20, 1a5e], [1a61, 1a74], [1a80, 1a89],
        [1a90, 1a99], [1aa7, 1aa7], [1abf, 1ac0], [1b00, 1b33],
        [1b35, 1b43], [1b45, 1b4b], [1b50, 1b59], [1b80, 1ba9],
        [1bac, 1be5], [1be7, 1bf1], [1c00, 1c36], [1c40, 1c49],
        [1c4d, 1c7d], [1c80, 1c88], [1c90, 1cba], [1cbd, 1cbf],
        [1ce9, 1cec], [1cee, 1cf3], [1cf5, 1cf6], [1cfa, 1cfa],
        [1d00, 1dbf], [1de7, 1df4], [1e00, 1f15], [1f18, 1f1d],
        [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d], [1f80, 1fb4],
        [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fcc],
        [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec], [1ff2, 1ff4],
        [1ff6, 1ffc], [2071, 2071], [207f, 207f], [2090, 209c],
        [2102, 2102], [2107, 2107], [210a, 2113], [2115, 2115],
        [2119, 211d], [2124, 2124], [2126, 2126], [2128, 2128],
        [212a, 212d], [212f, 2139], [213c, 213f], [2145, 2149],
        [214e, 214e], [2160, 2188], [24b6, 24e9], [2c00, 2c2e],
        [2c30, 2c5e], [2c60, 2ce4], [2ceb, 2cee], [2cf2, 2cf3],
        [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d], [2d30, 2d67],
        [2d6f, 2d6f], [2d80, 2d96], [2da0, 2da6], [2da8, 2dae],
        [2db0, 2db6], [2db8, 2dbe], [2dc0, 2dc6], [2dc8, 2dce],
        [2dd0, 2dd6], [2dd8, 2dde], [2de0, 2dff], [2e2f, 2e2f],
        [3005, 3007], [3021, 3029], [3031, 3035], [3038, 303c],
        [3041, 3096], [309d, 309f], [30a1, 30fa], [30fc, 30ff],
        [3105, 312f], [3131, 318e], [31a0, 31bf], [31f0, 31ff],
        [3400, 4dbf], [4e00, 9ffc], [a000, a48c], [a4d0, a4fd],
        [a500, a60c], [a610, a62b], [a640, a66e], [a674, a67b],
        [a67f, a6ef], [a717, a71f], [a722, a788], [a78b, a7bf],
        [a7c2, a7ca], [a7f5, a805], [a807, a827], [a840, a873],
        [a880, a8c3], [a8c5, a8c5], [a8d0, a8d9], [a8f2, a8f7],
        [a8fb, a8fb], [a8fd, a92a], [a930, a952], [a960, a97c],
        [a980, a9b2], [a9b4, a9bf], [a9cf, a9d9], [a9e0, a9fe],
        [aa00, aa36], [aa40, aa4d], [aa50, aa59], [aa60, aa76],
        [aa7a, aabe], [aac0, aac0], [aac2, aac2], [aadb, aadd],
        [aae0, aaef], [aaf2, aaf5], [ab01, ab06], [ab09, ab0e],
        [ab11, ab16], [ab20, ab26], [ab28, ab2e], [ab30, ab5a],
        [ab5c, ab69], [ab70, abea], [abf0, abf9], [ac00, d7a3],
        [d7b0, d7c6], [d7cb, d7fb], [f900, fa6d], [fa70, fad9],
        [fb00, fb06], [fb13, fb17], [fb1d, fb28], [fb2a, fb36],
        [fb38, fb3c], [fb3e, fb3e], [fb40, fb41], [fb43, fb44],
        [fb46, fbb1], [fbd3, fd3d], [fd50, fd8f], [fd92, fdc7],
        [fdf0, fdfb], [fe70, fe74], [fe76, fefc], [ff10, ff19],
        [ff21, ff3a], [ff41, ff5a], [ff66, ffbe], [ffc2, ffc7],
        [ffca, ffcf], [ffd2, ffd7], [ffda, ffdc], [10000, 1000b],
        [1000d, 10026], [10028, 1003a], [1003c, 1003d], [1003f, 1004d],
        [10050, 1005d], [10080, 100fa], [10140, 10174], [10280, 1029c],
        [102a0, 102d0], [10300, 1031f], [1032d, 1034a], [10350, 1037a],
        [10380, 1039d], [103a0, 103c3], [103c8, 103cf], [103d1, 103d5],
        [10400, 1049d], [104a0, 104a9], [104b0, 104d3], [104d8, 104fb],
        [10500, 10527], [10530, 10563], [10600, 10736], [10740, 10755],
        [10760, 10767], [10800, 10805], [10808, 10808], [1080a, 10835],
        [10837, 10838], [1083c, 1083c], [1083f, 10855], [10860, 10876],
        [10880, 1089e], [108e0, 108f2], [108f4, 108f5], [10900, 10915],
        [10920, 10939], [10980, 109b7], [109be, 109bf], [10a00, 10a03],
        [10a05, 10a06], [10a0c, 10a13], [10a15, 10a17], [10a19, 10a35],
        [10a60, 10a7c], [10a80, 10a9c], [10ac0, 10ac7], [10ac9, 10ae4],
        [10b00, 10b35], [10b40, 10b55], [10b60, 10b72], [10b80, 10b91],
        [10c00, 10c48], [10c80, 10cb2], [10cc0, 10cf2], [10d00, 10d27],
        [10d30, 10d39], [10e80, 10ea9], [10eab, 10eac], [10eb0, 10eb1],
        [10f00, 10f1c], [10f27, 10f27], [10f30, 10f45], [10fb0, 10fc4],
        [10fe0, 10ff6], [11000, 11045], [11066, 1106f], [11082, 110b8],
        [110d0, 110e8], [110f0, 110f9], [11100, 11132], [11136, 1113f],
        [11144, 11147], [11150, 11172], [11176, 11176], [11180, 111bf],
        [111c1, 111c4], [111ce, 111da], [111dc, 111dc], [11200, 11211],
        [11213, 11234], [11237, 11237], [1123e, 1123e], [11280, 11286],
        [11288, 11288], [1128a, 1128d], [1128f, 1129d], [1129f, 112a8],
        [112b0, 112e8], [112f0, 112f9], [11300, 11303], [11305, 1130c],
        [1130f, 11310], [11313, 11328], [1132a, 11330], [11332, 11333],
        [11335, 11339], [1133d, 11344], [11347, 11348], [1134b, 1134c],
        [11350, 11350], [11357, 11357], [1135d, 11363], [11400, 11441],
        [11443, 11445], [11447, 1144a], [11450, 11459], [1145f, 11461],
        [11480, 114c1], [114c4, 114c5], [114c7, 114c7], [114d0, 114d9],
        [11580, 115b5], [115b8, 115be], [115d8, 115dd], [11600, 1163e],
        [11640, 11640], [11644, 11644], [11650, 11659], [11680, 116b5],
        [116b8, 116b8], [116c0, 116c9], [11700, 1171a], [1171d, 1172a],
        [11730, 11739], [11800, 11838], [118a0, 118e9], [118ff, 11906],
        [11909, 11909], [1190c, 11913], [11915, 11916], [11918, 11935],
        [11937, 11938], [1193b, 1193c], [1193f, 11942], [11950, 11959],
        [119a0, 119a7], [119aa, 119d7], [119da, 119df], [119e1, 119e1],
        [119e3, 119e4], [11a00, 11a32], [11a35, 11a3e], [11a50, 11a97],
        [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08], [11c0a, 11c36],
        [11c38, 11c3e], [11c40, 11c40], [11c50, 11c59], [11c72, 11c8f],
        [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d41],
        [11d43, 11d43], [11d46, 11d47], [11d50, 11d59], [11d60, 11d65],
        [11d67, 11d68], [11d6a, 11d8e], [11d90, 11d91], [11d93, 11d96],
        [11d98, 11d98], [11da0, 11da9], [11ee0, 11ef6], [11fb0, 11fb0],
        [12000, 12399], [12400, 1246e], [12480, 12543], [13000, 1342e],
        [14400, 14646], [16800, 16a38], [16a40, 16a5e], [16a60, 16a69],
        [16ad0, 16aed], [16b00, 16b2f], [16b40, 16b43], [16b50, 16b59],
        [16b63, 16b77], [16b7d, 16b8f], [16e40, 16e7f], [16f00, 16f4a],
        [16f4f, 16f87], [16f8f, 16f9f], [16fe0, 16fe1], [16fe3, 16fe3],
        [16ff0, 16ff1], [17000, 187f7], [18800, 18cd5], [18d00, 18d08],
        [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167], [1b170, 1b2fb],
        [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88], [1bc90, 1bc99],
        [1bc9e, 1bc9e], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d6c0], [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714],
        [1d716, 1d734], [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788],
        [1d78a, 1d7a8], [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1d7ce, 1d7ff],
        [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021], [1e023, 1e024],
        [1e026, 1e02a], [1e100, 1e12c], [1e137, 1e13d], [1e140, 1e149],
        [1e14e, 1e14e], [1e2c0, 1e2eb], [1e2f0, 1e2f9], [1e800, 1e8c4],
        [1e900, 1e943], [1e947, 1e947], [1e94b, 1e94b], [1e950, 1e959],
        [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24],
        [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39],
        [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49],
        [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54],
        [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d],
        [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a],
        [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e],
        [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9],
        [1eeab, 1eebb], [1f130, 1f149], [1f150, 1f169], [1f170, 1f189],
        [1fbf0, 1fbf9], [20000, 2a6dd], [2a700, 2b734], [2b740, 2b81d],
        [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d], [30000, 3134a]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Empty, 2}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Full, 4}, {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5},
        {Full, 1}, {Mixed, 2}, {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 42}, {Empty, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 6}, {Empty, 2}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 10},
        {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2},
        {Full, 18}, {Mixed, 2}, {Full, 2}, {Mixed, 5}, {Full, 1},
        {Mixed, 4}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 5}, {Empty, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Full, 6}, {Empty, 1},
        {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 56}, {Full, 1}, {Mixed, 2}, {Full, 4},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2},
        {Full, 655}, {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 7}, {Full, 3},
        {Mixed, 1}, {Full, 349}, {Mixed, 3}, {Empty, 264}, {Full, 11},
        {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 10}, {Mixed, 2}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
        {Full, 3}, {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 3}, {Empty, 1}, {Full, 3}, {Mixed, 1}, {Empty, 2},
        {Full, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 4}, {Full, 9},
        {Mixed, 3}, {Empty, 4}, {Mixed, 5}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 4}, {Empty, 3}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 10}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 6}, {Full, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
        {Empty, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4},
        {Full, 2}, {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 8},
        {Mixed, 6}, {Empty, 2}, {Mixed, 6}, {Empty, 9}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 3}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Empty, 4}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1},
        {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 187}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 10}, {Mixed, 10}, {Full, 1}, {Empty, 64}, {Mixed, 2},
        {Empty, 6}, {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1},
        {Mixed, 1}, {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1},
        {Full, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 6}, {Empty, 19},
        {Mixed, 4}, {Empty, 82}, {Mixed, 1}, {Empty, 32}, {Full, 1334},
        {Mixed, 1}, {Empty, 1}, {Full, 129}, {Mixed, 1}, {Full, 6},
        {Mixed, 1}, {Full, 180}, {Mixed, 1}, {Full, 233}, {Mixed, 1},
        {Empty, 96}, {Full, 16}, {Mixed, 1}, {Empty, 47}, {Full, 154},
        {Mixed, 1}, {Empty, 28517}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x03ff0000, 0x07fffffe, 0x07fffffe, 0x04200400, 0xff7fffff,
        0xff7fffff, 0x0003ffc3, 0x0000501f, 0x00000020, 0xbcdf0000,
        0xffffd740, 0xfffffffb, 0xffbfffff, 0xfffffc03, 0xfffeffff,
        0x027fffff, 0x000001ff, 0xbfff0000, 0xffff00b6, 0x000787ff,
        0x07ff0000, 0xfeffffff, 0xffffc3ff, 0x1fefffff, 0x9fffe1fe,
        0xffff0000, 0xffffe000, 0x0003ffff, 0x043007ff, 0xfcffffff,
        0x00001fff, 0x01ffffff, 0x000007ff, 0xffdfffff, 0xfff000ff,
        0xffff03f8, 0xefffffff, 0xffe1dfff, 0xfffeffcf, 0xfff99fef,
        0xe3c5fdff, 0xb080599f, 0x1003ffcf, 0xfff987ee, 0xc36dfdff,
        0x5e021987, 0x003fffc0, 0xfffbbfee, 0xe3edfdff, 0x00011bbf,
        0x1e00ffcf, 0xfff99fee, 0xe3edfdff, 0xb0c0199f, 0x0002ffcf,
        0xd63dc7ec, 0xc3ffc718, 0x00811dc7, 0x0000ffc0, 0xfffddfef,
        0xe3fffdff, 0x07601ddf, 0x0000ffcf, 0xfffddfef, 0xe3effdff,
        0x40601ddf, 0x0006ffcf, 0xfffddfff, 0xe7ffffff, 0x80f05ddf,
        0xfc00ffcf, 0xfc7fffee, 0x2ffbffff, 0xff5f807f, 0x000cffc0,
        0xfffffffe, 0x07ffffff, 0x03ff207f, 0xfffff7d6, 0x3bffffaf,
        0xf3ff205f, 0x00000001, 0x000003ff, 0xfffffeff, 0xfffe1fff,
        0xfeffff03, 0x1fffffff, 0xf97fffff, 0xffff03ff, 0x3fffffff,
        0xffff20bf, 0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff,
        0xff7fff3d, 0xff3dffff, 0x07ffffff, 0x0000ffff, 0x3f3fffff,
        0xfffffffe, 0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x000fdfff,
        0x000fffff, 0x000fffff, 0x000ddfff, 0xffcfffff, 0x108001ff,
        0x000003ff, 0x03ff0000, 0x01ffffff, 0xffff07ff, 0x003fffff,
        0x7fffffff, 0x01ff0fff, 0xffffffc0, 0x001f3fff, 0xffff0fff,
        0x03ff03ff, 0x0fffffff, 0x7fffffff, 0x001ffffe, 0x03ff03ff,
        0x80000080, 0x00000001, 0xffefffff, 0x03ff0fef, 0xfffff3ff,
        0x0003ffbf, 0x007fffff, 0xffffe3ff, 0x3fffffff, 0xffff01ff,
        0xe7ffffff, 0x046fde00, 0x001fff80, 0x3f3fffff, 0xaaff3f3f,
        0x3fffffff, 0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80020000,
        0x1fff0000, 0x3e2ffc84, 0xf3ffbd50, 0x000043e0, 0x000001ff,
        0xffc00000, 0x000003ff, 0xffff7fff, 0x7fffffff, 0x000c781f,
        0xffff20bf, 0x000080ff, 0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f,
        0x00008000, 0x000000e0, 0x1f3e03fe, 0xfffffffe, 0xe07fffff,
        0xfffffffe, 0xf7ffffff, 0xffffffe0, 0xfffeffff, 0x00007fff,
        0xffff0000, 0x1fffffff, 0x00001fff, 0xffff0000, 0x3fffffff,
        0xffff1fff, 0x00000fff, 0x8ff07fff, 0x0000ffff, 0xff800000,
        0xfffffffc, 0xfffff9ff, 0x000007fc, 0xffe00000, 0xffffffbf,
        0x000000ff, 0x000fffff, 0x03ff002f, 0xe8fc0000, 0xffff07ff,
        0x0007ffff, 0x1fffffff, 0xfff7ffff, 0x03ff8000, 0x7fffffff,
        0x007fffff, 0x03ff3fff, 0xfc7fffff, 0x7fffffff, 0x38000005,
        0x003cffff, 0x007e7e7e, 0xffff7f7f, 0xf7ffffff, 0xffff03ff,
        0x03ff07ff, 0xffff000f, 0xfffff87f, 0x0fffffff, 0xffff3fff,
        0x03ffffff, 0xe0f8007f, 0x5f7ffdff, 0xffffffdb, 0x0003ffff,
        0xfff80000, 0x3fffffff, 0xffff0000, 0xfffcffff, 0x000000ff,
        0x0fff0000, 0xffdf0000, 0x1fffffff, 0x03ff0000, 0x07fffffe,
        0x07fffffe, 0xffffffc0, 0x7fffffff, 0x1cfcfcfc, 0xffffefff,
        0xb7ffff7f, 0x3fff3fff, 0x07ffffff, 0x001fffff, 0x1fffffff,
        0x0001ffff, 0xffffe000, 0xffff07ff, 0x07ffffff, 0x3fffffff,
        0x003eff0f, 0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000000f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0x003fffff, 0x007fffff, 0x7fffffff,
        0x0037ffff, 0x003fffff, 0x03ffffff, 0xc0ffffff, 0xfeeff06f,
        0x003fffff, 0x1fffffff, 0x1fffffff, 0xfffffeff, 0x0000001f,
        0x003fffff, 0x003fffff, 0x0007ffff, 0x0003ffff, 0x000001ff,
        0x0007ffff, 0x0007ffff, 0x03ff00ff, 0x00031bff, 0x1fffffff,
        0xffff0080, 0x0000003f, 0xffff0000, 0x0000001f, 0x007fffff,
        0x0000003f, 0x0000ffc0, 0xfffffffc, 0x01ffffff, 0xffff0000,
        0x03ff01ff, 0xffc7ffff, 0xffff00f0, 0x0047ffff, 0x17ffc01e,
        0xfffbffff, 0x409fffff, 0xbfffbd7f, 0xffff01ff, 0x03ff01ff,
        0xfff99fef, 0xe3edfdff, 0xe081199f, 0x0000000f, 0x83ff07bb,
        0x00000003, 0x03ff00b3, 0x7f3fffff, 0x3f000000, 0x7fffffff,
        0x03ff0011, 0x013fffff, 0x000003ff, 0xe7ffffff, 0x03ff07ff,
        0x01ffffff, 0x800003ff, 0xff6ff27f, 0x99bfffff, 0x03ff0007,
        0xfffffcff, 0xfcffffff, 0x0000001a, 0x7fe7ffff, 0xffff0000,
        0x20ffffff, 0x01ffffff, 0xfffffdff, 0x7f7fffff, 0x03ff0001,
        0xfffc0000, 0xfffcffff, 0x007ffeff, 0xfffffb7f, 0xb47fffff,
        0x03ff00cb, 0xfffffdbf, 0x017b7fff, 0x000003ff, 0x007fffff,
        0x00010000, 0x03ffffff, 0x00007fff, 0x0000000f, 0x00007fff,
        0x0000007f, 0x01ffffff, 0x7fffffff, 0x000003ff, 0xffff0000,
        0x00003fff, 0x0000ffff, 0x03ff000f, 0xe0fffff8, 0x0000ffff,
        0xffff87ff, 0xffff80ff, 0x0003000b, 0x00ffffff, 0x003fffff,
        0x000001ff, 0x7fffffff, 0x00070000, 0xffff00f0, 0x0fffffff,
        0x1fff07ff, 0x43ff01ff, 0xffdfffff, 0xdfffffff, 0xebffde64,
        0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffff3f,
        0xf7fffffd, 0xf7ffffff, 0xffdfffff, 0xffdfffff, 0xffff7fff,
        0xffff7fff, 0xfffffdff, 0xfffffdff, 0xffffcff7, 0xf9ffff7f,
        0x000007db, 0x3f801fff, 0x000043ff, 0x03ff0fff, 0x0000001f,
        0x03ff088f, 0xffffffef, 0x0af7fe96, 0xaa96ea84, 0x5ef7f796,
        0x0ffffbff, 0x0ffffbee, 0xffff0000, 0xffff03ff, 0xffff03ff,
        0x000003ff, 0x03ff0000, 0x3fffffff, 0x001fffff, 0x3fffffff,
        0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 386, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 404, 0};

        static BinaryPropertyObject property_object{alnum, std::move(codepoint_set)};
    }
PropertyObject * get_ALNUM_PropertyObject() {  return & ALNUM_ns::property_object; }
    namespace XDIGIT_ns {
        /** Code Point Ranges for xdigit
        [0030, 0039], [0041, 0046], [0061, 0066], [0660, 0669],
        [06f0, 06f9], [07c0, 07c9], [0966, 096f], [09e6, 09ef],
        [0a66, 0a6f], [0ae6, 0aef], [0b66, 0b6f], [0be6, 0bef],
        [0c66, 0c6f], [0ce6, 0cef], [0d66, 0d6f], [0de6, 0def],
        [0e50, 0e59], [0ed0, 0ed9], [0f20, 0f29], [1040, 1049],
        [1090, 1099], [17e0, 17e9], [1810, 1819], [1946, 194f],
        [19d0, 19d9], [1a80, 1a89], [1a90, 1a99], [1b50, 1b59],
        [1bb0, 1bb9], [1c40, 1c49], [1c50, 1c59], [a620, a629],
        [a8d0, a8d9], [a900, a909], [a9d0, a9d9], [a9f0, a9f9],
        [aa50, aa59], [abf0, abf9], [ff10, ff19], [ff21, ff26],
        [ff41, ff46], [104a0, 104a9], [10d30, 10d39], [11066, 1106f],
        [110f0, 110f9], [11136, 1113f], [111d0, 111d9], [112f0, 112f9],
        [11450, 11459], [114d0, 114d9], [11650, 11659], [116c0, 116c9],
        [11730, 11739], [118e0, 118e9], [11950, 11959], [11c50, 11c59],
        [11d50, 11d59], [11da0, 11da9], [16a60, 16a69], [16b50, 16b59],
        [1d7ce, 1d7ff], [1e140, 1e149], [1e2f0, 1e2f9], [1e950, 1e959],
        [1fbf0, 1fbf9]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 47}, {Mixed, 1}, {Empty, 3},
        {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 3},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 58}, {Mixed, 2},
        {Empty, 9}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 5},
        {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Empty, 4}, {Mixed, 1}, {Empty, 1102}, {Mixed, 1}, {Empty, 20},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 5}, {Mixed, 2},
        {Empty, 2}, {Mixed, 1}, {Empty, 12}, {Mixed, 1}, {Empty, 664},
        {Mixed, 3}, {Empty, 42}, {Mixed, 1}, {Empty, 67}, {Mixed, 1},
        {Empty, 25}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
        {Empty, 10}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 11},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Empty, 13}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 23},
        {Mixed, 1}, {Empty, 7}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Empty, 613}, {Mixed, 1}, {Empty, 6}, {Mixed, 1}, {Empty, 867},
        {Mixed, 1}, {Full, 1}, {Empty, 74}, {Mixed, 1}, {Empty, 12},
        {Mixed, 1}, {Empty, 50}, {Mixed, 1}, {Empty, 148}, {Mixed, 1},
        {Empty, 30752}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x03ff0000, 0x0000007e, 0x0000007e, 0x000003ff, 0x03ff0000,
        0x000003ff, 0x0000ffc0, 0x0000ffc0, 0x0000ffc0, 0x0000ffc0,
        0x0000ffc0, 0x0000ffc0, 0x0000ffc0, 0x0000ffc0, 0x0000ffc0,
        0x0000ffc0, 0x03ff0000, 0x03ff0000, 0x000003ff, 0x000003ff,
        0x03ff0000, 0x000003ff, 0x03ff0000, 0x0000ffc0, 0x03ff0000,
        0x03ff03ff, 0x03ff0000, 0x03ff0000, 0x03ff03ff, 0x000003ff,
        0x03ff0000, 0x000003ff, 0x03ff0000, 0x03ff0000, 0x03ff0000,
        0x03ff0000, 0x03ff0000, 0x0000007e, 0x0000007e, 0x000003ff,
        0x03ff0000, 0x0000ffc0, 0x03ff0000, 0xffc00000, 0x03ff0000,
        0x03ff0000, 0x03ff0000, 0x03ff0000, 0x03ff0000, 0x000003ff,
        0x03ff0000, 0x000003ff, 0x03ff0000, 0x03ff0000, 0x03ff0000,
        0x000003ff, 0x000003ff, 0x03ff0000, 0xffffc000, 0x000003ff,
        0x03ff0000, 0x03ff0000, 0x03ff0000};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 116, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 63, 0};

        static BinaryPropertyObject property_object{xdigit, std::move(codepoint_set)};
    }
PropertyObject * get_XDIGIT_PropertyObject() {  return & XDIGIT_ns::property_object; }
    namespace BLANK_ns {
        /** Code Point Ranges for blank
        [0009, 0009], [0020, 0020], [00a0, 00a0], [1680, 1680],
        [2000, 200a], [202f, 202f], [205f, 205f], [3000, 3000]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 174}, {Mixed, 1},
        {Empty, 75}, {Mixed, 3}, {Empty, 125}, {Mixed, 1}, {Empty, 34431}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x00000200, 0x00000001, 0x00000001, 0x00000001, 0x000007ff,
        0x00008000, 0x80000000, 0x00000001};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 10, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 8, 0};

        static BinaryPropertyObject property_object{blank, std::move(codepoint_set)};
    }
PropertyObject * get_BLANK_PropertyObject() {  return & BLANK_ns::property_object; }
    namespace PRINT_ns {
        /** Code Point Ranges for print
        [0020, 007e], [00a0, 0377], [037a, 037f], [0384, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 052f], [0531, 0556],
        [0559, 058a], [058d, 058f], [0591, 05c7], [05d0, 05ea],
        [05ef, 05f4], [0600, 061c], [061e, 070d], [070f, 074a],
        [074d, 07b1], [07c0, 07fa], [07fd, 082d], [0830, 083e],
        [0840, 085b], [085e, 085e], [0860, 086a], [08a0, 08b4],
        [08b6, 08c7], [08d3, 0983], [0985, 098c], [098f, 0990],
        [0993, 09a8], [09aa, 09b0], [09b2, 09b2], [09b6, 09b9],
        [09bc, 09c4], [09c7, 09c8], [09cb, 09ce], [09d7, 09d7],
        [09dc, 09dd], [09df, 09e3], [09e6, 09fe], [0a01, 0a03],
        [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30],
        [0a32, 0a33], [0a35, 0a36], [0a38, 0a39], [0a3c, 0a3c],
        [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4d], [0a51, 0a51],
        [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a76], [0a81, 0a83],
        [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8], [0aaa, 0ab0],
        [0ab2, 0ab3], [0ab5, 0ab9], [0abc, 0ac5], [0ac7, 0ac9],
        [0acb, 0acd], [0ad0, 0ad0], [0ae0, 0ae3], [0ae6, 0af1],
        [0af9, 0aff], [0b01, 0b03], [0b05, 0b0c], [0b0f, 0b10],
        [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33], [0b35, 0b39],
        [0b3c, 0b44], [0b47, 0b48], [0b4b, 0b4d], [0b55, 0b57],
        [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b77], [0b82, 0b83],
        [0b85, 0b8a], [0b8e, 0b90], [0b92, 0b95], [0b99, 0b9a],
        [0b9c, 0b9c], [0b9e, 0b9f], [0ba3, 0ba4], [0ba8, 0baa],
        [0bae, 0bb9], [0bbe, 0bc2], [0bc6, 0bc8], [0bca, 0bcd],
        [0bd0, 0bd0], [0bd7, 0bd7], [0be6, 0bfa], [0c00, 0c0c],
        [0c0e, 0c10], [0c12, 0c28], [0c2a, 0c39], [0c3d, 0c44],
        [0c46, 0c48], [0c4a, 0c4d], [0c55, 0c56], [0c58, 0c5a],
        [0c60, 0c63], [0c66, 0c6f], [0c77, 0c8c], [0c8e, 0c90],
        [0c92, 0ca8], [0caa, 0cb3], [0cb5, 0cb9], [0cbc, 0cc4],
        [0cc6, 0cc8], [0cca, 0ccd], [0cd5, 0cd6], [0cde, 0cde],
        [0ce0, 0ce3], [0ce6, 0cef], [0cf1, 0cf2], [0d00, 0d0c],
        [0d0e, 0d10], [0d12, 0d44], [0d46, 0d48], [0d4a, 0d4f],
        [0d54, 0d63], [0d66, 0d7f], [0d81, 0d83], [0d85, 0d96],
        [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6],
        [0dca, 0dca], [0dcf, 0dd4], [0dd6, 0dd6], [0dd8, 0ddf],
        [0de6, 0def], [0df2, 0df4], [0e01, 0e3a], [0e3f, 0e5b],
        [0e81, 0e82], [0e84, 0e84], [0e86, 0e8a], [0e8c, 0ea3],
        [0ea5, 0ea5], [0ea7, 0ebd], [0ec0, 0ec4], [0ec6, 0ec6],
        [0ec8, 0ecd], [0ed0, 0ed9], [0edc, 0edf], [0f00, 0f47],
        [0f49, 0f6c], [0f71, 0f97], [0f99, 0fbc], [0fbe, 0fcc],
        [0fce, 0fda], [1000, 10c5], [10c7, 10c7], [10cd, 10cd],
        [10d0, 1248], [124a, 124d], [1250, 1256], [1258, 1258],
        [125a, 125d], [1260, 1288], [128a, 128d], [1290, 12b0],
        [12b2, 12b5], [12b8, 12be], [12c0, 12c0], [12c2, 12c5],
        [12c8, 12d6], [12d8, 1310], [1312, 1315], [1318, 135a],
        [135d, 137c], [1380, 1399], [13a0, 13f5], [13f8, 13fd],
        [1400, 169c], [16a0, 16f8], [1700, 170c], [170e, 1714],
        [1720, 1736], [1740, 1753], [1760, 176c], [176e, 1770],
        [1772, 1773], [1780, 17dd], [17e0, 17e9], [17f0, 17f9],
        [1800, 180e], [1810, 1819], [1820, 1878], [1880, 18aa],
        [18b0, 18f5], [1900, 191e], [1920, 192b], [1930, 193b],
        [1940, 1940], [1944, 196d], [1970, 1974], [1980, 19ab],
        [19b0, 19c9], [19d0, 19da], [19de, 1a1b], [1a1e, 1a5e],
        [1a60, 1a7c], [1a7f, 1a89], [1a90, 1a99], [1aa0, 1aad],
        [1ab0, 1ac0], [1b00, 1b4b], [1b50, 1b7c], [1b80, 1bf3],
        [1bfc, 1c37], [1c3b, 1c49], [1c4d, 1c88], [1c90, 1cba],
        [1cbd, 1cc7], [1cd0, 1cfa], [1d00, 1df9], [1dfb, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fc4], [1fc6, 1fd3], [1fd6, 1fdb],
        [1fdd, 1fef], [1ff2, 1ff4], [1ff6, 1ffe], [2000, 2027],
        [202a, 2064], [2066, 2071], [2074, 208e], [2090, 209c],
        [20a0, 20bf], [20d0, 20f0], [2100, 218b], [2190, 2426],
        [2440, 244a], [2460, 2b73], [2b76, 2b95], [2b97, 2c2e],
        [2c30, 2c5e], [2c60, 2cf3], [2cf9, 2d25], [2d27, 2d27],
        [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d70], [2d7f, 2d96],
        [2da0, 2da6], [2da8, 2dae], [2db0, 2db6], [2db8, 2dbe],
        [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6], [2dd8, 2dde],
        [2de0, 2e52], [2e80, 2e99], [2e9b, 2ef3], [2f00, 2fd5],
        [2ff0, 2ffb], [3000, 303f], [3041, 3096], [3099, 30ff],
        [3105, 312f], [3131, 318e], [3190, 31e3], [31f0, 321e],
        [3220, 9ffc], [a000, a48c], [a490, a4c6], [a4d0, a62b],
        [a640, a6f7], [a700, a7bf], [a7c2, a7ca], [a7f5, a82c],
        [a830, a839], [a840, a877], [a880, a8c5], [a8ce, a8d9],
        [a8e0, a953], [a95f, a97c], [a980, a9cd], [a9cf, a9d9],
        [a9de, a9fe], [aa00, aa36], [aa40, aa4d], [aa50, aa59],
        [aa5c, aac2], [aadb, aaf6], [ab01, ab06], [ab09, ab0e],
        [ab11, ab16], [ab20, ab26], [ab28, ab2e], [ab30, ab6b],
        [ab70, abed], [abf0, abf9], [ac00, d7a3], [d7b0, d7c6],
        [d7cb, d7fb], [e000, fa6d], [fa70, fad9], [fb00, fb06],
        [fb13, fb17], [fb1d, fb36], [fb38, fb3c], [fb3e, fb3e],
        [fb40, fb41], [fb43, fb44], [fb46, fbc1], [fbd3, fd3f],
        [fd50, fd8f], [fd92, fdc7], [fdf0, fdfd], [fe00, fe19],
        [fe20, fe52], [fe54, fe66], [fe68, fe6b], [fe70, fe74],
        [fe76, fefc], [feff, feff], [ff01, ffbe], [ffc2, ffc7],
        [ffca, ffcf], [ffd2, ffd7], [ffda, ffdc], [ffe0, ffe6],
        [ffe8, ffee], [fff9, fffd], [10000, 1000b], [1000d, 10026],
        [10028, 1003a], [1003c, 1003d], [1003f, 1004d], [10050, 1005d],
        [10080, 100fa], [10100, 10102], [10107, 10133], [10137, 1018e],
        [10190, 1019c], [101a0, 101a0], [101d0, 101fd], [10280, 1029c],
        [102a0, 102d0], [102e0, 102fb], [10300, 10323], [1032d, 1034a],
        [10350, 1037a], [10380, 1039d], [1039f, 103c3], [103c8, 103d5],
        [10400, 1049d], [104a0, 104a9], [104b0, 104d3], [104d8, 104fb],
        [10500, 10527], [10530, 10563], [1056f, 1056f], [10600, 10736],
        [10740, 10755], [10760, 10767], [10800, 10805], [10808, 10808],
        [1080a, 10835], [10837, 10838], [1083c, 1083c], [1083f, 10855],
        [10857, 1089e], [108a7, 108af], [108e0, 108f2], [108f4, 108f5],
        [108fb, 1091b], [1091f, 10939], [1093f, 1093f], [10980, 109b7],
        [109bc, 109cf], [109d2, 10a03], [10a05, 10a06], [10a0c, 10a13],
        [10a15, 10a17], [10a19, 10a35], [10a38, 10a3a], [10a3f, 10a48],
        [10a50, 10a58], [10a60, 10a9f], [10ac0, 10ae6], [10aeb, 10af6],
        [10b00, 10b35], [10b39, 10b55], [10b58, 10b72], [10b78, 10b91],
        [10b99, 10b9c], [10ba9, 10baf], [10c00, 10c48], [10c80, 10cb2],
        [10cc0, 10cf2], [10cfa, 10d27], [10d30, 10d39], [10e60, 10e7e],
        [10e80, 10ea9], [10eab, 10ead], [10eb0, 10eb1], [10f00, 10f27],
        [10f30, 10f59], [10fb0, 10fcb], [10fe0, 10ff6], [11000, 1104d],
        [11052, 1106f], [1107f, 110c1], [110cd, 110cd], [110d0, 110e8],
        [110f0, 110f9], [11100, 11134], [11136, 11147], [11150, 11176],
        [11180, 111df], [111e1, 111f4], [11200, 11211], [11213, 1123e],
        [11280, 11286], [11288, 11288], [1128a, 1128d], [1128f, 1129d],
        [1129f, 112a9], [112b0, 112ea], [112f0, 112f9], [11300, 11303],
        [11305, 1130c], [1130f, 11310], [11313, 11328], [1132a, 11330],
        [11332, 11333], [11335, 11339], [1133b, 11344], [11347, 11348],
        [1134b, 1134d], [11350, 11350], [11357, 11357], [1135d, 11363],
        [11366, 1136c], [11370, 11374], [11400, 1145b], [1145d, 11461],
        [11480, 114c7], [114d0, 114d9], [11580, 115b5], [115b8, 115dd],
        [11600, 11644], [11650, 11659], [11660, 1166c], [11680, 116b8],
        [116c0, 116c9], [11700, 1171a], [1171d, 1172b], [11730, 1173f],
        [11800, 1183b], [118a0, 118f2], [118ff, 11906], [11909, 11909],
        [1190c, 11913], [11915, 11916], [11918, 11935], [11937, 11938],
        [1193b, 11946], [11950, 11959], [119a0, 119a7], [119aa, 119d7],
        [119da, 119e4], [11a00, 11a47], [11a50, 11aa2], [11ac0, 11af8],
        [11c00, 11c08], [11c0a, 11c36], [11c38, 11c45], [11c50, 11c6c],
        [11c70, 11c8f], [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06],
        [11d08, 11d09], [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d],
        [11d3f, 11d47], [11d50, 11d59], [11d60, 11d65], [11d67, 11d68],
        [11d6a, 11d8e], [11d90, 11d91], [11d93, 11d98], [11da0, 11da9],
        [11ee0, 11ef8], [11fb0, 11fb0], [11fc0, 11ff1], [11fff, 12399],
        [12400, 1246e], [12470, 12474], [12480, 12543], [13000, 1342e],
        [13430, 13438], [14400, 14646], [16800, 16a38], [16a40, 16a5e],
        [16a60, 16a69], [16a6e, 16a6f], [16ad0, 16aed], [16af0, 16af5],
        [16b00, 16b45], [16b50, 16b59], [16b5b, 16b61], [16b63, 16b77],
        [16b7d, 16b8f], [16e40, 16e9a], [16f00, 16f4a], [16f4f, 16f87],
        [16f8f, 16f9f], [16fe0, 16fe4], [16ff0, 16ff1], [17000, 187f7],
        [18800, 18cd5], [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152],
        [1b164, 1b167], [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c],
        [1bc80, 1bc88], [1bc90, 1bc99], [1bc9c, 1bca3], [1d000, 1d0f5],
        [1d100, 1d126], [1d129, 1d1e8], [1d200, 1d245], [1d2e0, 1d2f3],
        [1d300, 1d356], [1d360, 1d378], [1d400, 1d454], [1d456, 1d49c],
        [1d49e, 1d49f], [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac],
        [1d4ae, 1d4b9], [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505],
        [1d507, 1d50a], [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539],
        [1d53b, 1d53e], [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550],
        [1d552, 1d6a5], [1d6a8, 1d7cb], [1d7ce, 1da8b], [1da9b, 1da9f],
        [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021],
        [1e023, 1e024], [1e026, 1e02a], [1e100, 1e12c], [1e130, 1e13d],
        [1e140, 1e149], [1e14e, 1e14f], [1e2c0, 1e2f9], [1e2ff, 1e2ff],
        [1e800, 1e8c4], [1e8c7, 1e8d6], [1e900, 1e94b], [1e950, 1e959],
        [1e95e, 1e95f], [1ec71, 1ecb4], [1ed01, 1ed3d], [1ee00, 1ee03],
        [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24], [1ee27, 1ee27],
        [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39], [1ee3b, 1ee3b],
        [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49], [1ee4b, 1ee4b],
        [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54], [1ee57, 1ee57],
        [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d], [1ee5f, 1ee5f],
        [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a], [1ee6c, 1ee72],
        [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e], [1ee80, 1ee89],
        [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9], [1eeab, 1eebb],
        [1eef0, 1eef1], [1f000, 1f02b], [1f030, 1f093], [1f0a0, 1f0ae],
        [1f0b1, 1f0bf], [1f0c1, 1f0cf], [1f0d1, 1f0f5], [1f100, 1f1ad],
        [1f1e6, 1f202], [1f210, 1f23b], [1f240, 1f248], [1f250, 1f251],
        [1f260, 1f265], [1f300, 1f6d7], [1f6e0, 1f6ec], [1f6f0, 1f6fc],
        [1f700, 1f773], [1f780, 1f7d8], [1f7e0, 1f7eb], [1f800, 1f80b],
        [1f810, 1f847], [1f850, 1f859], [1f860, 1f887], [1f890, 1f8ad],
        [1f8b0, 1f8b1], [1f900, 1f978], [1f97a, 1f9cb], [1f9cd, 1fa53],
        [1fa60, 1fa6d], [1fa70, 1fa74], [1fa78, 1fa7a], [1fa80, 1fa86],
        [1fa90, 1faa8], [1fab0, 1fab6], [1fac0, 1fac2], [1fad0, 1fad6],
        [1fb00, 1fb92], [1fb94, 1fbca], [1fbf0, 1fbf9], [20000, 2a6dd],
        [2a700, 2b734], [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0],
        [2f800, 2fa1d], [30000, 3134a], [e0001, e0001], [e0020, e007f],
        [e0100, e01ef], [f0000, ffffd], [100000, 10fffd]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 22},
        {Mixed, 3}, {Full, 11}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 7}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 2}, {Full, 5}, {Mixed, 29}, {Full, 1},
        {Mixed, 9}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Full, 2},
        {Mixed, 5}, {Empty, 1}, {Full, 6}, {Mixed, 1}, {Full, 11},
        {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 20}, {Mixed, 1},
        {Full, 2}, {Mixed, 5}, {Full, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1}, {Full, 2},
        {Mixed, 2}, {Full, 3}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 4}, {Full, 7}, {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 4}, {Mixed, 1},
        {Full, 20}, {Mixed, 2}, {Full, 56}, {Mixed, 2}, {Full, 4},
        {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 4}, {Full, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Full, 6}, {Mixed, 2}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 2}, {Full, 2}, {Mixed, 1},
        {Full, 2}, {Mixed, 2}, {Full, 878}, {Mixed, 1}, {Full, 36},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 10}, {Mixed, 1},
        {Full, 5}, {Mixed, 1}, {Full, 6}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 3}, {Mixed, 2},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 3}, {Mixed, 4},
        {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 1}, {Full, 349},
        {Mixed, 3}, {Empty, 64}, {Full, 211}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 1},
        {Full, 11}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 3}, {Mixed, 2}, {Full, 4},
        {Mixed, 6}, {Empty, 1}, {Full, 3}, {Mixed, 3}, {Full, 2},
        {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Empty, 1}, {Full, 4},
        {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4}, {Mixed, 3},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 2},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 2}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 2}, {Full, 1}, {Mixed, 2},
        {Empty, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 2}, {Full, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 3},
        {Empty, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4},
        {Full, 2}, {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 2}, {Mixed, 2}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Full, 1},
        {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4}, {Empty, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 8}, {Mixed, 6}, {Empty, 2}, {Mixed, 6},
        {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 28}, {Mixed, 1}, {Empty, 3}, {Full, 3},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Empty, 85}, {Full, 33},
        {Mixed, 1}, {Empty, 126}, {Full, 18}, {Mixed, 1}, {Empty, 269},
        {Full, 17}, {Mixed, 3}, {Empty, 2}, {Mixed, 2}, {Full, 2},
        {Mixed, 3}, {Empty, 21}, {Full, 2}, {Mixed, 1}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1}, {Empty, 72},
        {Full, 3}, {Mixed, 3}, {Empty, 154}, {Full, 7}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 5}, {Mixed, 1}, {Full, 2}, {Mixed, 1},
        {Empty, 4}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Empty, 4},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 10}, {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 21},
        {Mixed, 2}, {Empty, 42}, {Mixed, 2}, {Empty, 6}, {Full, 1},
        {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1}, {Empty, 40},
        {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2}, {Mixed, 1},
        {Empty, 24}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 2}, {Empty, 6}, {Mixed, 6}, {Empty, 1}, {Mixed, 1},
        {Empty, 8}, {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 4}, {Full, 5},
        {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 4}, {Full, 30},
        {Mixed, 2}, {Full, 3}, {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Empty, 2}, {Full, 3},
        {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 3}, {Mixed, 5},
        {Empty, 1}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 32}, {Full, 1334}, {Mixed, 1}, {Empty, 1}, {Full, 129},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180}, {Mixed, 1},
        {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16}, {Mixed, 1},
        {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 22373}, {Mixed, 1},
        {Full, 3}, {Empty, 4}, {Full, 7}, {Mixed, 1}, {Empty, 2032},
        {Full, 2047}, {Mixed, 1}, {Full, 2047}, {Mixed, 1}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x7fffffff, 0xfcffffff, 0xffffd7f0, 0xfffffffb, 0xfffeffff,
        0xfe7fffff, 0xfffee7ff, 0xffff00ff, 0x001f87ff, 0xdfffffff,
        0xffffbfff, 0xffffe7ff, 0x0003ffff, 0xe7ffffff, 0x7fff3fff,
        0x4fffffff, 0x000007ff, 0xffdfffff, 0xfff800ff, 0xfff99fef,
        0xf3c5fdff, 0xb080799f, 0x7fffffcf, 0xfff987ee, 0xd36dfdff,
        0x5e023987, 0x007fffc0, 0xfffbbfee, 0xf3edfdff, 0x00013bbf,
        0xfe03ffcf, 0xfff99fee, 0xf3edfdff, 0xb0e0399f, 0x00ffffcf,
        0xd63dc7ec, 0xc3ffc718, 0x00813dc7, 0x07ffffc0, 0xfffddfff,
        0xe3fffdff, 0x07603ddf, 0xff80ffcf, 0xfffddfff, 0xf3effdff,
        0x40603ddf, 0x0006ffcf, 0xfffddfff, 0xfff0fddf, 0xffffffcf,
        0xfc7fffee, 0x2ffbffff, 0xff5f847f, 0x001cffc0, 0xfffffffe,
        0x87ffffff, 0x0fffffff, 0xfffff7d6, 0x3fffffaf, 0xf3ff3f5f,
        0xfffffeff, 0xfffe1fff, 0xfeffffff, 0xdfffffff, 0x07ffdfff,
        0xffff20bf, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d,
        0xff3dffff, 0xe7ffffff, 0x1fffffff, 0x03ffffff, 0x3f3fffff,
        0x1fffffff, 0x01ffffff, 0x001fdfff, 0x007fffff, 0x000fffff,
        0x000ddfff, 0x3fffffff, 0x03ff03ff, 0x03ff7fff, 0x01ffffff,
        0xffff07ff, 0x003fffff, 0x7fffffff, 0x0fff0fff, 0xfffffff1,
        0x001f3fff, 0xffff0fff, 0xc7ff03ff, 0xcfffffff, 0x7fffffff,
        0x9fffffff, 0x03ff03ff, 0xffff3fff, 0x00000001, 0xffff0fff,
        0x1fffffff, 0xf00fffff, 0xf8ffffff, 0xffffe3ff, 0xffff01ff,
        0xe7ffffff, 0xffff00ff, 0x07ffffff, 0xfbffffff, 0x3f3fffff,
        0xaaff3f3f, 0x3fffffff, 0xffdfffff, 0xefcfffdf, 0x7fdcffff,
        0xfffffcff, 0xfff3ffdf, 0x1fff7fff, 0xffff0000, 0x0001ffff,
        0xffff0fff, 0x0000007f, 0x000007ff, 0xffcfffff, 0xffbfffff,
        0xffff7fff, 0x7fffffff, 0xfe0fffff, 0xffff20bf, 0x800180ff,
        0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f, 0x0007ffff, 0xfbffffff,
        0x000fffff, 0x003fffff, 0x0fff0000, 0xfffffffe, 0xfe7fffff,
        0xffffffe0, 0xfffeffff, 0xffff7fff, 0xffff000f, 0x7fffffff,
        0x1fffffff, 0xffff1fff, 0xffff007f, 0x00000fff, 0x00ffffff,
        0x000007fc, 0xffe00000, 0x03ff1fff, 0x00ffffff, 0x03ffc03f,
        0x800fffff, 0x1fffffff, 0xc3ffbfff, 0x7fffffff, 0x007fffff,
        0xf3ff3fff, 0xf8000007, 0x007fffff, 0x007e7e7e, 0xffff7f7f,
        0xffff0fff, 0x03ff3fff, 0xffff000f, 0xfffff87f, 0x0fffffff,
        0xffff3fff, 0x03ffffff, 0xe0f8007f, 0x5f7fffff, 0xffffffdb,
        0xfff80003, 0xffff0000, 0xfffcffff, 0x000000ff, 0x3fff0000,
        0x03ffffff, 0xfff7ffff, 0xffdf0f7f, 0x9fffffff, 0xfffffffe,
        0x7fffffff, 0x1cfcfcfc, 0x3e007f7f, 0xffffefff, 0xb7ffff7f,
        0x3fff3fff, 0x07ffffff, 0xffffff87, 0xff8fffff, 0x1fff7fff,
        0x00000001, 0xffff0000, 0x3fffffff, 0x1fffffff, 0x0001ffff,
        0x0fffffff, 0xffffe00f, 0xffff07ff, 0x07ffffff, 0xbfffffff,
        0x003fff0f, 0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000800f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0xffbfffff, 0x7fffffff, 0x0000ff80,
        0xf837ffff, 0x8fffffff, 0x83ffffff, 0xf0ffffff, 0xfffcffff,
        0xfeeff06f, 0x873fffff, 0x01ff01ff, 0x007ff87f, 0xfe3fffff,
        0xff3fffff, 0xff07ffff, 0x1e03ffff, 0x0000fe00, 0x000001ff,
        0x0007ffff, 0xfc07ffff, 0x03ff00ff, 0x7fffffff, 0x00033bff,
        0xffff00ff, 0x03ffffff, 0xffff0000, 0x00000fff, 0x007fffff,
        0xfffc3fff, 0x8000ffff, 0xffff2003, 0x03ff01ff, 0xffdfffff,
        0xffff00ff, 0x007fffff, 0x001ffffe, 0xfffbffff, 0x7fffffff,
        0xbfffbd7f, 0xffff03ff, 0x03ff07ff, 0xfff99fef, 0xfbedfdff,
        0xe081399f, 0x001f1fcf, 0xefffffff, 0x00000003, 0x03ff00ff,
        0xff3fffff, 0x3fffffff, 0x03ff001f, 0x00001fff, 0x01ffffff,
        0x000003ff, 0xe7ffffff, 0xffff0fff, 0x0fffffff, 0x8007ffff,
        0xff6ff27f, 0xf9bfffff, 0x03ff007f, 0xfffffcff, 0xfcffffff,
        0x0000001f, 0xffff00ff, 0x00000007, 0x01ffffff, 0xfffffdff,
        0xff7fffff, 0xffff003f, 0xffff1fff, 0xfffcffff, 0x007ffeff,
        0xfffffb7f, 0xb47fffff, 0x03ff00ff, 0xfffffdbf, 0x01fb7fff,
        0x000003ff, 0x01ffffff, 0x00010000, 0x8003ffff, 0x03ffffff,
        0x001f7fff, 0x0000000f, 0x01ff7fff, 0x0000007f, 0x01ffffff,
        0x7fffffff, 0x0000c3ff, 0xffff0000, 0x003f3fff, 0xfbff003f,
        0xe0fffffb, 0x0000ffff, 0x07ffffff, 0xffff87ff, 0xffff80ff,
        0x0003001f, 0x00ffffff, 0x003fffff, 0x000001ff, 0x7fffffff,
        0x00070000, 0xffff00f0, 0x0fffffff, 0x1fff07ff, 0xf3ff01ff,
        0x0000000f, 0x003fffff, 0xfffffe7f, 0x000001ff, 0x0000003f,
        0x000fffff, 0x007fffff, 0x01ffffff, 0xffdfffff, 0xdfffffff,
        0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,
        0xffffff3f, 0xffffcfff, 0xf8000fff, 0x0000fffe, 0xf9ffff7f,
        0x000007db, 0x3fff1fff, 0x0000c3ff, 0x83ffffff, 0x007fff9f,
        0xc3ff0fff, 0xfffe0000, 0x001fffff, 0xfffffffe, 0x3fffffff,
        0xffffffef, 0x0af7fe96, 0xaa96ea84, 0x5ef7f796, 0x0ffffbff,
        0x0ffffbee, 0x00030000, 0xffff0fff, 0x000fffff, 0xfffe7fff,
        0xfffefffe, 0x003fffff, 0x00003fff, 0xffffffc0, 0xffff0007,
        0x0fffffff, 0x000301ff, 0x0000003f, 0x00ffffff, 0x1fff1fff,
        0x000fffff, 0x01ffffff, 0x00000fff, 0xffff0fff, 0x03ff00ff,
        0xffff00ff, 0x00033fff, 0xfdffffff, 0xffffefff, 0x000fffff,
        0x071f3fff, 0xffff007f, 0x007f01ff, 0x007f0007, 0xfff7ffff,
        0x000007ff, 0x03ff0000, 0x3fffffff, 0x001fffff, 0x3fffffff,
        0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff, 0x00000002,
        0x0000ffff, 0x3fffffff, 0x3fffffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 439, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 403, 0};

        static BinaryPropertyObject property_object{print, std::move(codepoint_set)};
    }
PropertyObject * get_PRINT_PropertyObject() {  return & PRINT_ns::property_object; }
    namespace WORD_ns {
        /** Code Point Ranges for word
        [0030, 0039], [0041, 005a], [005f, 005f], [0061, 007a],
        [00aa, 00aa], [00b5, 00b5], [00ba, 00ba], [00c0, 00d6],
        [00d8, 00f6], [00f8, 02c1], [02c6, 02d1], [02e0, 02e4],
        [02ec, 02ec], [02ee, 02ee], [0300, 0374], [0376, 0377],
        [037a, 037d], [037f, 037f], [0386, 0386], [0388, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 03f5], [03f7, 0481],
        [0483, 052f], [0531, 0556], [0559, 0559], [0560, 0588],
        [0591, 05bd], [05bf, 05bf], [05c1, 05c2], [05c4, 05c5],
        [05c7, 05c7], [05d0, 05ea], [05ef, 05f2], [0610, 061a],
        [0620, 0669], [066e, 06d3], [06d5, 06dc], [06df, 06e8],
        [06ea, 06fc], [06ff, 06ff], [0710, 074a], [074d, 07b1],
        [07c0, 07f5], [07fa, 07fa], [07fd, 07fd], [0800, 082d],
        [0840, 085b], [0860, 086a], [08a0, 08b4], [08b6, 08c7],
        [08d3, 08e1], [08e3, 0963], [0966, 096f], [0971, 0983],
        [0985, 098c], [098f, 0990], [0993, 09a8], [09aa, 09b0],
        [09b2, 09b2], [09b6, 09b9], [09bc, 09c4], [09c7, 09c8],
        [09cb, 09ce], [09d7, 09d7], [09dc, 09dd], [09df, 09e3],
        [09e6, 09f1], [09fc, 09fc], [09fe, 09fe], [0a01, 0a03],
        [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30],
        [0a32, 0a33], [0a35, 0a36], [0a38, 0a39], [0a3c, 0a3c],
        [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4d], [0a51, 0a51],
        [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a75], [0a81, 0a83],
        [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8], [0aaa, 0ab0],
        [0ab2, 0ab3], [0ab5, 0ab9], [0abc, 0ac5], [0ac7, 0ac9],
        [0acb, 0acd], [0ad0, 0ad0], [0ae0, 0ae3], [0ae6, 0aef],
        [0af9, 0aff], [0b01, 0b03], [0b05, 0b0c], [0b0f, 0b10],
        [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33], [0b35, 0b39],
        [0b3c, 0b44], [0b47, 0b48], [0b4b, 0b4d], [0b55, 0b57],
        [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b6f], [0b71, 0b71],
        [0b82, 0b83], [0b85, 0b8a], [0b8e, 0b90], [0b92, 0b95],
        [0b99, 0b9a], [0b9c, 0b9c], [0b9e, 0b9f], [0ba3, 0ba4],
        [0ba8, 0baa], [0bae, 0bb9], [0bbe, 0bc2], [0bc6, 0bc8],
        [0bca, 0bcd], [0bd0, 0bd0], [0bd7, 0bd7], [0be6, 0bef],
        [0c00, 0c0c], [0c0e, 0c10], [0c12, 0c28], [0c2a, 0c39],
        [0c3d, 0c44], [0c46, 0c48], [0c4a, 0c4d], [0c55, 0c56],
        [0c58, 0c5a], [0c60, 0c63], [0c66, 0c6f], [0c80, 0c83],
        [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8], [0caa, 0cb3],
        [0cb5, 0cb9], [0cbc, 0cc4], [0cc6, 0cc8], [0cca, 0ccd],
        [0cd5, 0cd6], [0cde, 0cde], [0ce0, 0ce3], [0ce6, 0cef],
        [0cf1, 0cf2], [0d00, 0d0c], [0d0e, 0d10], [0d12, 0d44],
        [0d46, 0d48], [0d4a, 0d4e], [0d54, 0d57], [0d5f, 0d63],
        [0d66, 0d6f], [0d7a, 0d7f], [0d81, 0d83], [0d85, 0d96],
        [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6],
        [0dca, 0dca], [0dcf, 0dd4], [0dd6, 0dd6], [0dd8, 0ddf],
        [0de6, 0def], [0df2, 0df3], [0e01, 0e3a], [0e40, 0e4e],
        [0e50, 0e59], [0e81, 0e82], [0e84, 0e84], [0e86, 0e8a],
        [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0ebd], [0ec0, 0ec4],
        [0ec6, 0ec6], [0ec8, 0ecd], [0ed0, 0ed9], [0edc, 0edf],
        [0f00, 0f00], [0f18, 0f19], [0f20, 0f29], [0f35, 0f35],
        [0f37, 0f37], [0f39, 0f39], [0f3e, 0f47], [0f49, 0f6c],
        [0f71, 0f84], [0f86, 0f97], [0f99, 0fbc], [0fc6, 0fc6],
        [1000, 1049], [1050, 109d], [10a0, 10c5], [10c7, 10c7],
        [10cd, 10cd], [10d0, 10fa], [10fc, 1248], [124a, 124d],
        [1250, 1256], [1258, 1258], [125a, 125d], [1260, 1288],
        [128a, 128d], [1290, 12b0], [12b2, 12b5], [12b8, 12be],
        [12c0, 12c0], [12c2, 12c5], [12c8, 12d6], [12d8, 1310],
        [1312, 1315], [1318, 135a], [135d, 135f], [1380, 138f],
        [13a0, 13f5], [13f8, 13fd], [1401, 166c], [166f, 167f],
        [1681, 169a], [16a0, 16ea], [16ee, 16f8], [1700, 170c],
        [170e, 1714], [1720, 1734], [1740, 1753], [1760, 176c],
        [176e, 1770], [1772, 1773], [1780, 17d3], [17d7, 17d7],
        [17dc, 17dd], [17e0, 17e9], [180b, 180d], [1810, 1819],
        [1820, 1878], [1880, 18aa], [18b0, 18f5], [1900, 191e],
        [1920, 192b], [1930, 193b], [1946, 196d], [1970, 1974],
        [1980, 19ab], [19b0, 19c9], [19d0, 19d9], [1a00, 1a1b],
        [1a20, 1a5e], [1a60, 1a7c], [1a7f, 1a89], [1a90, 1a99],
        [1aa7, 1aa7], [1ab0, 1ac0], [1b00, 1b4b], [1b50, 1b59],
        [1b6b, 1b73], [1b80, 1bf3], [1c00, 1c37], [1c40, 1c49],
        [1c4d, 1c7d], [1c80, 1c88], [1c90, 1cba], [1cbd, 1cbf],
        [1cd0, 1cd2], [1cd4, 1cfa], [1d00, 1df9], [1dfb, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4],
        [1fc6, 1fcc], [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec],
        [1ff2, 1ff4], [1ff6, 1ffc], [200c, 200d], [203f, 2040],
        [2054, 2054], [2071, 2071], [207f, 207f], [2090, 209c],
        [20d0, 20f0], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2119, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 212d], [212f, 2139], [213c, 213f],
        [2145, 2149], [214e, 214e], [2160, 2188], [24b6, 24e9],
        [2c00, 2c2e], [2c30, 2c5e], [2c60, 2ce4], [2ceb, 2cf3],
        [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d], [2d30, 2d67],
        [2d6f, 2d6f], [2d7f, 2d96], [2da0, 2da6], [2da8, 2dae],
        [2db0, 2db6], [2db8, 2dbe], [2dc0, 2dc6], [2dc8, 2dce],
        [2dd0, 2dd6], [2dd8, 2dde], [2de0, 2dff], [2e2f, 2e2f],
        [3005, 3007], [3021, 302f], [3031, 3035], [3038, 303c],
        [3041, 3096], [3099, 309a], [309d, 309f], [30a1, 30fa],
        [30fc, 30ff], [3105, 312f], [3131, 318e], [31a0, 31bf],
        [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc], [a000, a48c],
        [a4d0, a4fd], [a500, a60c], [a610, a62b], [a640, a672],
        [a674, a67d], [a67f, a6f1], [a717, a71f], [a722, a788],
        [a78b, a7bf], [a7c2, a7ca], [a7f5, a827], [a82c, a82c],
        [a840, a873], [a880, a8c5], [a8d0, a8d9], [a8e0, a8f7],
        [a8fb, a8fb], [a8fd, a92d], [a930, a953], [a960, a97c],
        [a980, a9c0], [a9cf, a9d9], [a9e0, a9fe], [aa00, aa36],
        [aa40, aa4d], [aa50, aa59], [aa60, aa76], [aa7a, aac2],
        [aadb, aadd], [aae0, aaef], [aaf2, aaf6], [ab01, ab06],
        [ab09, ab0e], [ab11, ab16], [ab20, ab26], [ab28, ab2e],
        [ab30, ab5a], [ab5c, ab69], [ab70, abea], [abec, abed],
        [abf0, abf9], [ac00, d7a3], [d7b0, d7c6], [d7cb, d7fb],
        [f900, fa6d], [fa70, fad9], [fb00, fb06], [fb13, fb17],
        [fb1d, fb28], [fb2a, fb36], [fb38, fb3c], [fb3e, fb3e],
        [fb40, fb41], [fb43, fb44], [fb46, fbb1], [fbd3, fd3d],
        [fd50, fd8f], [fd92, fdc7], [fdf0, fdfb], [fe00, fe0f],
        [fe20, fe2f], [fe33, fe34], [fe4d, fe4f], [fe70, fe74],
        [fe76, fefc], [ff10, ff19], [ff21, ff3a], [ff3f, ff3f],
        [ff41, ff5a], [ff66, ffbe], [ffc2, ffc7], [ffca, ffcf],
        [ffd2, ffd7], [ffda, ffdc], [10000, 1000b], [1000d, 10026],
        [10028, 1003a], [1003c, 1003d], [1003f, 1004d], [10050, 1005d],
        [10080, 100fa], [10140, 10174], [101fd, 101fd], [10280, 1029c],
        [102a0, 102d0], [102e0, 102e0], [10300, 1031f], [1032d, 1034a],
        [10350, 1037a], [10380, 1039d], [103a0, 103c3], [103c8, 103cf],
        [103d1, 103d5], [10400, 1049d], [104a0, 104a9], [104b0, 104d3],
        [104d8, 104fb], [10500, 10527], [10530, 10563], [10600, 10736],
        [10740, 10755], [10760, 10767], [10800, 10805], [10808, 10808],
        [1080a, 10835], [10837, 10838], [1083c, 1083c], [1083f, 10855],
        [10860, 10876], [10880, 1089e], [108e0, 108f2], [108f4, 108f5],
        [10900, 10915], [10920, 10939], [10980, 109b7], [109be, 109bf],
        [10a00, 10a03], [10a05, 10a06], [10a0c, 10a13], [10a15, 10a17],
        [10a19, 10a35], [10a38, 10a3a], [10a3f, 10a3f], [10a60, 10a7c],
        [10a80, 10a9c], [10ac0, 10ac7], [10ac9, 10ae6], [10b00, 10b35],
        [10b40, 10b55], [10b60, 10b72], [10b80, 10b91], [10c00, 10c48],
        [10c80, 10cb2], [10cc0, 10cf2], [10d00, 10d27], [10d30, 10d39],
        [10e80, 10ea9], [10eab, 10eac], [10eb0, 10eb1], [10f00, 10f1c],
        [10f27, 10f27], [10f30, 10f50], [10fb0, 10fc4], [10fe0, 10ff6],
        [11000, 11046], [11066, 1106f], [1107f, 110ba], [110d0, 110e8],
        [110f0, 110f9], [11100, 11134], [11136, 1113f], [11144, 11147],
        [11150, 11173], [11176, 11176], [11180, 111c4], [111c9, 111cc],
        [111ce, 111da], [111dc, 111dc], [11200, 11211], [11213, 11237],
        [1123e, 1123e], [11280, 11286], [11288, 11288], [1128a, 1128d],
        [1128f, 1129d], [1129f, 112a8], [112b0, 112ea], [112f0, 112f9],
        [11300, 11303], [11305, 1130c], [1130f, 11310], [11313, 11328],
        [1132a, 11330], [11332, 11333], [11335, 11339], [1133b, 11344],
        [11347, 11348], [1134b, 1134d], [11350, 11350], [11357, 11357],
        [1135d, 11363], [11366, 1136c], [11370, 11374], [11400, 1144a],
        [11450, 11459], [1145e, 11461], [11480, 114c5], [114c7, 114c7],
        [114d0, 114d9], [11580, 115b5], [115b8, 115c0], [115d8, 115dd],
        [11600, 11640], [11644, 11644], [11650, 11659], [11680, 116b8],
        [116c0, 116c9], [11700, 1171a], [1171d, 1172b], [11730, 11739],
        [11800, 1183a], [118a0, 118e9], [118ff, 11906], [11909, 11909],
        [1190c, 11913], [11915, 11916], [11918, 11935], [11937, 11938],
        [1193b, 11943], [11950, 11959], [119a0, 119a7], [119aa, 119d7],
        [119da, 119e1], [119e3, 119e4], [11a00, 11a3e], [11a47, 11a47],
        [11a50, 11a99], [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08],
        [11c0a, 11c36], [11c38, 11c40], [11c50, 11c59], [11c72, 11c8f],
        [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d47],
        [11d50, 11d59], [11d60, 11d65], [11d67, 11d68], [11d6a, 11d8e],
        [11d90, 11d91], [11d93, 11d98], [11da0, 11da9], [11ee0, 11ef6],
        [11fb0, 11fb0], [12000, 12399], [12400, 1246e], [12480, 12543],
        [13000, 1342e], [14400, 14646], [16800, 16a38], [16a40, 16a5e],
        [16a60, 16a69], [16ad0, 16aed], [16af0, 16af4], [16b00, 16b36],
        [16b40, 16b43], [16b50, 16b59], [16b63, 16b77], [16b7d, 16b8f],
        [16e40, 16e7f], [16f00, 16f4a], [16f4f, 16f87], [16f8f, 16f9f],
        [16fe0, 16fe1], [16fe3, 16fe4], [16ff0, 16ff1], [17000, 187f7],
        [18800, 18cd5], [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152],
        [1b164, 1b167], [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c],
        [1bc80, 1bc88], [1bc90, 1bc99], [1bc9d, 1bc9e], [1d165, 1d169],
        [1d16d, 1d172], [1d17b, 1d182], [1d185, 1d18b], [1d1aa, 1d1ad],
        [1d242, 1d244], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d6c0], [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714],
        [1d716, 1d734], [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788],
        [1d78a, 1d7a8], [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1d7ce, 1d7ff],
        [1da00, 1da36], [1da3b, 1da6c], [1da75, 1da75], [1da84, 1da84],
        [1da9b, 1da9f], [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018],
        [1e01b, 1e021], [1e023, 1e024], [1e026, 1e02a], [1e100, 1e12c],
        [1e130, 1e13d], [1e140, 1e149], [1e14e, 1e14e], [1e2c0, 1e2f9],
        [1e800, 1e8c4], [1e8d0, 1e8d6], [1e900, 1e94b], [1e950, 1e959],
        [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24],
        [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39],
        [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49],
        [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54],
        [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d],
        [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a],
        [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e],
        [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9],
        [1eeab, 1eebb], [1f130, 1f149], [1f150, 1f169], [1f170, 1f189],
        [1fbf0, 1fbf9], [20000, 2a6dd], [2a700, 2b734], [2b740, 2b81d],
        [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d], [30000, 3134a],
        [e0100, e01ef]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Full, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 4},
        {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Full, 2},
        {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 30}, {Full, 1},
        {Mixed, 9}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 7},
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 10}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 18}, {Mixed, 2},
        {Full, 2}, {Mixed, 5}, {Full, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1},
        {Full, 2}, {Mixed, 2}, {Full, 3}, {Mixed, 1}, {Full, 1}, {Mixed, 7},
        {Full, 7}, {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 8}, {Empty, 1}, {Mixed, 5}, {Full, 1},
        {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 56}, {Full, 1}, {Mixed, 2}, {Full, 4}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2}, {Full, 655},
        {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
        {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 6},
        {Full, 3}, {Mixed, 1}, {Full, 349}, {Mixed, 3}, {Empty, 264},
        {Full, 11}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 2}, {Full, 10}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 6}, {Full, 3}, {Mixed, 5},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
        {Full, 3}, {Mixed, 1}, {Empty, 2}, {Full, 1}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4},
        {Mixed, 5}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 10}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4}, {Full, 2},
        {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 8},
        {Mixed, 6}, {Empty, 2}, {Mixed, 6}, {Empty, 9}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 3}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Empty, 4}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1},
        {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 166}, {Mixed, 3},
        {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 10},
        {Mixed, 10}, {Full, 1}, {Empty, 16}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Empty, 42}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1},
        {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 37}, {Mixed, 6}, {Empty, 19}, {Mixed, 4},
        {Empty, 82}, {Mixed, 1}, {Empty, 32}, {Full, 1334}, {Mixed, 1},
        {Empty, 1}, {Full, 129}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Full, 180}, {Mixed, 1}, {Full, 233}, {Mixed, 1}, {Empty, 96},
        {Full, 16}, {Mixed, 1}, {Empty, 47}, {Full, 154}, {Mixed, 1},
        {Empty, 22381}, {Full, 7}, {Mixed, 1}, {Empty, 6128}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x03ff0000, 0x87fffffe, 0x07fffffe, 0x04200400, 0xff7fffff,
        0xff7fffff, 0x0003ffc3, 0x0000501f, 0xbcdfffff, 0xffffd740,
        0xfffffffb, 0xffbfffff, 0xfffffffb, 0xfffeffff, 0x027fffff,
        0xfffe01ff, 0xbfffffff, 0xffff00b6, 0x000787ff, 0x07ff0000,
        0xffffc3ff, 0x9fefffff, 0x9ffffdff, 0xffff0000, 0xffffe7ff,
        0x0003ffff, 0x243fffff, 0x00003fff, 0x0fffffff, 0x000007ff,
        0xffdfffff, 0xfff800ff, 0xfffffffb, 0xfffeffcf, 0xfff99fef,
        0xf3c5fdff, 0xb080799f, 0x5003ffcf, 0xfff987ee, 0xd36dfdff,
        0x5e023987, 0x003fffc0, 0xfffbbfee, 0xf3edfdff, 0x00013bbf,
        0xfe00ffcf, 0xfff99fee, 0xf3edfdff, 0xb0e0399f, 0x0002ffcf,
        0xd63dc7ec, 0xc3ffc718, 0x00813dc7, 0x0000ffc0, 0xfffddfff,
        0xe3fffdff, 0x07603ddf, 0x0000ffcf, 0xfffddfef, 0xf3effdff,
        0x40603ddf, 0x0006ffcf, 0xfffddfff, 0x80f07ddf, 0xfc00ffcf,
        0xfc7fffee, 0x2ffbffff, 0xff5f847f, 0x000cffc0, 0xfffffffe,
        0x07ffffff, 0x03ff7fff, 0xfffff7d6, 0x3fffffaf, 0xf3ff3f5f,
        0x03000001, 0xc2a003ff, 0xfffffeff, 0xfffe1fff, 0xfeffffdf,
        0x1fffffff, 0x00000040, 0xffff03ff, 0x3fffffff, 0xffff20bf,
        0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d,
        0xff3dffff, 0xe7ffffff, 0x0000ffff, 0x3f3fffff, 0xfffffffe,
        0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x001fdfff, 0x001fffff,
        0x000fffff, 0x000ddfff, 0x308fffff, 0x000003ff, 0x03ff3800,
        0x01ffffff, 0xffff07ff, 0x003fffff, 0x7fffffff, 0x0fff0fff,
        0xffffffc0, 0x001f3fff, 0xffff0fff, 0x03ff03ff, 0x0fffffff,
        0x7fffffff, 0x9fffffff, 0x03ff03ff, 0xffff0080, 0x00000001,
        0x03ff0fff, 0x000ff800, 0x000fffff, 0x00ffffff, 0xffffe3ff,
        0x3fffffff, 0xffff01ff, 0xe7ffffff, 0xfff70000, 0x07ffffff,
        0xfbffffff, 0x3f3fffff, 0xaaff3f3f, 0x3fffffff, 0x5fdfffff,
        0x0fcf1fdc, 0x1fdc1fff, 0x00003000, 0x80000000, 0x00100001,
        0x80020000, 0x1fff0000, 0xffff0000, 0x0001ffff, 0x3e2ffc84,
        0xf3ffbd50, 0x000043e0, 0x000001ff, 0xffc00000, 0x000003ff,
        0xffff7fff, 0x7fffffff, 0x000ff81f, 0xffff20bf, 0x800080ff,
        0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f, 0x00008000, 0x000000e0,
        0x1f3efffe, 0xfffffffe, 0xe67fffff, 0xfffffffe, 0xf7ffffff,
        0xffffffe0, 0xfffeffff, 0x00007fff, 0xffff0000, 0x1fffffff,
        0x00001fff, 0xffff0000, 0x3fffffff, 0xffff1fff, 0x00000fff,
        0xbff7ffff, 0x0003ffff, 0xff800000, 0xfffffffc, 0xfffff9ff,
        0x000007fc, 0xffe00000, 0x000010ff, 0x000fffff, 0x03ff003f,
        0xe8ffffff, 0xffff3fff, 0x000fffff, 0x1fffffff, 0x03ff8001,
        0x7fffffff, 0x007fffff, 0x03ff3fff, 0xfc7fffff, 0x38000007,
        0x007cffff, 0x007e7e7e, 0xffff7f7f, 0xf7ffffff, 0xffff03ff,
        0x03ff37ff, 0xffff000f, 0xfffff87f, 0x0fffffff, 0xffff3fff,
        0x03ffffff, 0xe0f8007f, 0x5f7ffdff, 0xffffffdb, 0x0003ffff,
        0xfff80000, 0x3fffffff, 0xffff0000, 0xfffcffff, 0x000000ff,
        0x0fff0000, 0x0000ffff, 0x0018ffff, 0x0000e000, 0xffdf0000,
        0x1fffffff, 0x03ff0000, 0x87fffffe, 0x07fffffe, 0xffffffc0,
        0x7fffffff, 0x1cfcfcfc, 0xffffefff, 0xb7ffff7f, 0x3fff3fff,
        0x07ffffff, 0x001fffff, 0x20000000, 0x1fffffff, 0x0001ffff,
        0x00000001, 0xffffe000, 0xffff07ff, 0x07ffffff, 0x3fffffff,
        0x003eff0f, 0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000000f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0x003fffff, 0x007fffff, 0x7fffffff,
        0x0037ffff, 0x003fffff, 0x03ffffff, 0xc0ffffff, 0xfeeff06f,
        0x873fffff, 0x1fffffff, 0x1fffffff, 0xfffffeff, 0x0000007f,
        0x003fffff, 0x003fffff, 0x0007ffff, 0x0003ffff, 0x000001ff,
        0x0007ffff, 0x0007ffff, 0x03ff00ff, 0x00031bff, 0x1fffffff,
        0xffff0080, 0x0001ffff, 0xffff0000, 0x0000001f, 0x007fffff,
        0x0000007f, 0x8000ffc0, 0x07ffffff, 0xffff0000, 0x03ff01ff,
        0xffdfffff, 0xffff00f0, 0x004fffff, 0x17ffde1f, 0xfffbffff,
        0x40ffffff, 0xbfffbd7f, 0xffff01ff, 0x03ff07ff, 0xfff99fef,
        0xfbedfdff, 0xe081399f, 0x001f1fcf, 0xc3ff07ff, 0x00000003,
        0x03ff00bf, 0xff3fffff, 0x3f000001, 0x03ff0011, 0x01ffffff,
        0x000003ff, 0xe7ffffff, 0x03ff0fff, 0x07ffffff, 0x800003ff,
        0xff6ff27f, 0xf9bfffff, 0x03ff000f, 0xfffffcff, 0xfcffffff,
        0x0000001b, 0x7fffffff, 0xffff0080, 0x23ffffff, 0x01ffffff,
        0xfffffdff, 0xff7fffff, 0x03ff0001, 0xfffc0000, 0xfffcffff,
        0x007ffeff, 0xfffffb7f, 0xb47fffff, 0x03ff00ff, 0xfffffdbf,
        0x01fb7fff, 0x000003ff, 0x007fffff, 0x00010000, 0x03ffffff,
        0x00007fff, 0x0000000f, 0x00007fff, 0x0000007f, 0x01ffffff,
        0x7fffffff, 0x000003ff, 0xffff0000, 0x001f3fff, 0x007fffff,
        0x03ff000f, 0xe0fffff8, 0x0000ffff, 0xffff87ff, 0xffff80ff,
        0x0003001b, 0x00ffffff, 0x003fffff, 0x000001ff, 0x7fffffff,
        0x00070000, 0xffff00f0, 0x0fffffff, 0x1fff07ff, 0x63ff01ff,
        0xf807e3e0, 0x00000fe7, 0x00003c00, 0x0000001c, 0xffdfffff,
        0xdfffffff, 0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff,
        0xfffdfc5f, 0xffffff3f, 0xf7fffffd, 0xf7ffffff, 0xffdfffff,
        0xffdfffff, 0xffff7fff, 0xffff7fff, 0xfffffdff, 0xfffffdff,
        0xffffcff7, 0xf87fffff, 0x00201fff, 0xf8000010, 0x0000fffe,
        0xf9ffff7f, 0x000007db, 0x3fff1fff, 0x000043ff, 0x03ffffff,
        0x007f001f, 0x03ff0fff, 0xffffffef, 0x0af7fe96, 0xaa96ea84,
        0x5ef7f796, 0x0ffffbff, 0x0ffffbee, 0xffff0000, 0xffff03ff,
        0xffff03ff, 0x000003ff, 0x03ff0000, 0x3fffffff, 0x001fffff,
        0x3fffffff, 0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff,
        0x0000ffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 397, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 411, 0};

        static BinaryPropertyObject property_object{word, std::move(codepoint_set)};
    }
PropertyObject * get_WORD_PropertyObject() {  return & WORD_ns::property_object; }
    namespace GRAPH_ns {
        /** Code Point Ranges for graph
        [0021, 007e], [00a1, 0377], [037a, 037f], [0384, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 052f], [0531, 0556],
        [0559, 058a], [058d, 058f], [0591, 05c7], [05d0, 05ea],
        [05ef, 05f4], [0600, 061c], [061e, 070d], [070f, 074a],
        [074d, 07b1], [07c0, 07fa], [07fd, 082d], [0830, 083e],
        [0840, 085b], [085e, 085e], [0860, 086a], [08a0, 08b4],
        [08b6, 08c7], [08d3, 0983], [0985, 098c], [098f, 0990],
        [0993, 09a8], [09aa, 09b0], [09b2, 09b2], [09b6, 09b9],
        [09bc, 09c4], [09c7, 09c8], [09cb, 09ce], [09d7, 09d7],
        [09dc, 09dd], [09df, 09e3], [09e6, 09fe], [0a01, 0a03],
        [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30],
        [0a32, 0a33], [0a35, 0a36], [0a38, 0a39], [0a3c, 0a3c],
        [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4d], [0a51, 0a51],
        [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a76], [0a81, 0a83],
        [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8], [0aaa, 0ab0],
        [0ab2, 0ab3], [0ab5, 0ab9], [0abc, 0ac5], [0ac7, 0ac9],
        [0acb, 0acd], [0ad0, 0ad0], [0ae0, 0ae3], [0ae6, 0af1],
        [0af9, 0aff], [0b01, 0b03], [0b05, 0b0c], [0b0f, 0b10],
        [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33], [0b35, 0b39],
        [0b3c, 0b44], [0b47, 0b48], [0b4b, 0b4d], [0b55, 0b57],
        [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b77], [0b82, 0b83],
        [0b85, 0b8a], [0b8e, 0b90], [0b92, 0b95], [0b99, 0b9a],
        [0b9c, 0b9c], [0b9e, 0b9f], [0ba3, 0ba4], [0ba8, 0baa],
        [0bae, 0bb9], [0bbe, 0bc2], [0bc6, 0bc8], [0bca, 0bcd],
        [0bd0, 0bd0], [0bd7, 0bd7], [0be6, 0bfa], [0c00, 0c0c],
        [0c0e, 0c10], [0c12, 0c28], [0c2a, 0c39], [0c3d, 0c44],
        [0c46, 0c48], [0c4a, 0c4d], [0c55, 0c56], [0c58, 0c5a],
        [0c60, 0c63], [0c66, 0c6f], [0c77, 0c8c], [0c8e, 0c90],
        [0c92, 0ca8], [0caa, 0cb3], [0cb5, 0cb9], [0cbc, 0cc4],
        [0cc6, 0cc8], [0cca, 0ccd], [0cd5, 0cd6], [0cde, 0cde],
        [0ce0, 0ce3], [0ce6, 0cef], [0cf1, 0cf2], [0d00, 0d0c],
        [0d0e, 0d10], [0d12, 0d44], [0d46, 0d48], [0d4a, 0d4f],
        [0d54, 0d63], [0d66, 0d7f], [0d81, 0d83], [0d85, 0d96],
        [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6],
        [0dca, 0dca], [0dcf, 0dd4], [0dd6, 0dd6], [0dd8, 0ddf],
        [0de6, 0def], [0df2, 0df4], [0e01, 0e3a], [0e3f, 0e5b],
        [0e81, 0e82], [0e84, 0e84], [0e86, 0e8a], [0e8c, 0ea3],
        [0ea5, 0ea5], [0ea7, 0ebd], [0ec0, 0ec4], [0ec6, 0ec6],
        [0ec8, 0ecd], [0ed0, 0ed9], [0edc, 0edf], [0f00, 0f47],
        [0f49, 0f6c], [0f71, 0f97], [0f99, 0fbc], [0fbe, 0fcc],
        [0fce, 0fda], [1000, 10c5], [10c7, 10c7], [10cd, 10cd],
        [10d0, 1248], [124a, 124d], [1250, 1256], [1258, 1258],
        [125a, 125d], [1260, 1288], [128a, 128d], [1290, 12b0],
        [12b2, 12b5], [12b8, 12be], [12c0, 12c0], [12c2, 12c5],
        [12c8, 12d6], [12d8, 1310], [1312, 1315], [1318, 135a],
        [135d, 137c], [1380, 1399], [13a0, 13f5], [13f8, 13fd],
        [1400, 167f], [1681, 169c], [16a0, 16f8], [1700, 170c],
        [170e, 1714], [1720, 1736], [1740, 1753], [1760, 176c],
        [176e, 1770], [1772, 1773], [1780, 17dd], [17e0, 17e9],
        [17f0, 17f9], [1800, 180e], [1810, 1819], [1820, 1878],
        [1880, 18aa], [18b0, 18f5], [1900, 191e], [1920, 192b],
        [1930, 193b], [1940, 1940], [1944, 196d], [1970, 1974],
        [1980, 19ab], [19b0, 19c9], [19d0, 19da], [19de, 1a1b],
        [1a1e, 1a5e], [1a60, 1a7c], [1a7f, 1a89], [1a90, 1a99],
        [1aa0, 1aad], [1ab0, 1ac0], [1b00, 1b4b], [1b50, 1b7c],
        [1b80, 1bf3], [1bfc, 1c37], [1c3b, 1c49], [1c4d, 1c88],
        [1c90, 1cba], [1cbd, 1cc7], [1cd0, 1cfa], [1d00, 1df9],
        [1dfb, 1f15], [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d],
        [1f50, 1f57], [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d],
        [1f5f, 1f7d], [1f80, 1fb4], [1fb6, 1fc4], [1fc6, 1fd3],
        [1fd6, 1fdb], [1fdd, 1fef], [1ff2, 1ff4], [1ff6, 1ffe],
        [200b, 2027], [202a, 202e], [2030, 205e], [2060, 2064],
        [2066, 2071], [2074, 208e], [2090, 209c], [20a0, 20bf],
        [20d0, 20f0], [2100, 218b], [2190, 2426], [2440, 244a],
        [2460, 2b73], [2b76, 2b95], [2b97, 2c2e], [2c30, 2c5e],
        [2c60, 2cf3], [2cf9, 2d25], [2d27, 2d27], [2d2d, 2d2d],
        [2d30, 2d67], [2d6f, 2d70], [2d7f, 2d96], [2da0, 2da6],
        [2da8, 2dae], [2db0, 2db6], [2db8, 2dbe], [2dc0, 2dc6],
        [2dc8, 2dce], [2dd0, 2dd6], [2dd8, 2dde], [2de0, 2e52],
        [2e80, 2e99], [2e9b, 2ef3], [2f00, 2fd5], [2ff0, 2ffb],
        [3001, 303f], [3041, 3096], [3099, 30ff], [3105, 312f],
        [3131, 318e], [3190, 31e3], [31f0, 321e], [3220, 9ffc],
        [a000, a48c], [a490, a4c6], [a4d0, a62b], [a640, a6f7],
        [a700, a7bf], [a7c2, a7ca], [a7f5, a82c], [a830, a839],
        [a840, a877], [a880, a8c5], [a8ce, a8d9], [a8e0, a953],
        [a95f, a97c], [a980, a9cd], [a9cf, a9d9], [a9de, a9fe],
        [aa00, aa36], [aa40, aa4d], [aa50, aa59], [aa5c, aac2],
        [aadb, aaf6], [ab01, ab06], [ab09, ab0e], [ab11, ab16],
        [ab20, ab26], [ab28, ab2e], [ab30, ab6b], [ab70, abed],
        [abf0, abf9], [ac00, d7a3], [d7b0, d7c6], [d7cb, d7fb],
        [e000, fa6d], [fa70, fad9], [fb00, fb06], [fb13, fb17],
        [fb1d, fb36], [fb38, fb3c], [fb3e, fb3e], [fb40, fb41],
        [fb43, fb44], [fb46, fbc1], [fbd3, fd3f], [fd50, fd8f],
        [fd92, fdc7], [fdf0, fdfd], [fe00, fe19], [fe20, fe52],
        [fe54, fe66], [fe68, fe6b], [fe70, fe74], [fe76, fefc],
        [feff, feff], [ff01, ffbe], [ffc2, ffc7], [ffca, ffcf],
        [ffd2, ffd7], [ffda, ffdc], [ffe0, ffe6], [ffe8, ffee],
        [fff9, fffd], [10000, 1000b], [1000d, 10026], [10028, 1003a],
        [1003c, 1003d], [1003f, 1004d], [10050, 1005d], [10080, 100fa],
        [10100, 10102], [10107, 10133], [10137, 1018e], [10190, 1019c],
        [101a0, 101a0], [101d0, 101fd], [10280, 1029c], [102a0, 102d0],
        [102e0, 102fb], [10300, 10323], [1032d, 1034a], [10350, 1037a],
        [10380, 1039d], [1039f, 103c3], [103c8, 103d5], [10400, 1049d],
        [104a0, 104a9], [104b0, 104d3], [104d8, 104fb], [10500, 10527],
        [10530, 10563], [1056f, 1056f], [10600, 10736], [10740, 10755],
        [10760, 10767], [10800, 10805], [10808, 10808], [1080a, 10835],
        [10837, 10838], [1083c, 1083c], [1083f, 10855], [10857, 1089e],
        [108a7, 108af], [108e0, 108f2], [108f4, 108f5], [108fb, 1091b],
        [1091f, 10939], [1093f, 1093f], [10980, 109b7], [109bc, 109cf],
        [109d2, 10a03], [10a05, 10a06], [10a0c, 10a13], [10a15, 10a17],
        [10a19, 10a35], [10a38, 10a3a], [10a3f, 10a48], [10a50, 10a58],
        [10a60, 10a9f], [10ac0, 10ae6], [10aeb, 10af6], [10b00, 10b35],
        [10b39, 10b55], [10b58, 10b72], [10b78, 10b91], [10b99, 10b9c],
        [10ba9, 10baf], [10c00, 10c48], [10c80, 10cb2], [10cc0, 10cf2],
        [10cfa, 10d27], [10d30, 10d39], [10e60, 10e7e], [10e80, 10ea9],
        [10eab, 10ead], [10eb0, 10eb1], [10f00, 10f27], [10f30, 10f59],
        [10fb0, 10fcb], [10fe0, 10ff6], [11000, 1104d], [11052, 1106f],
        [1107f, 110c1], [110cd, 110cd], [110d0, 110e8], [110f0, 110f9],
        [11100, 11134], [11136, 11147], [11150, 11176], [11180, 111df],
        [111e1, 111f4], [11200, 11211], [11213, 1123e], [11280, 11286],
        [11288, 11288], [1128a, 1128d], [1128f, 1129d], [1129f, 112a9],
        [112b0, 112ea], [112f0, 112f9], [11300, 11303], [11305, 1130c],
        [1130f, 11310], [11313, 11328], [1132a, 11330], [11332, 11333],
        [11335, 11339], [1133b, 11344], [11347, 11348], [1134b, 1134d],
        [11350, 11350], [11357, 11357], [1135d, 11363], [11366, 1136c],
        [11370, 11374], [11400, 1145b], [1145d, 11461], [11480, 114c7],
        [114d0, 114d9], [11580, 115b5], [115b8, 115dd], [11600, 11644],
        [11650, 11659], [11660, 1166c], [11680, 116b8], [116c0, 116c9],
        [11700, 1171a], [1171d, 1172b], [11730, 1173f], [11800, 1183b],
        [118a0, 118f2], [118ff, 11906], [11909, 11909], [1190c, 11913],
        [11915, 11916], [11918, 11935], [11937, 11938], [1193b, 11946],
        [11950, 11959], [119a0, 119a7], [119aa, 119d7], [119da, 119e4],
        [11a00, 11a47], [11a50, 11aa2], [11ac0, 11af8], [11c00, 11c08],
        [11c0a, 11c36], [11c38, 11c45], [11c50, 11c6c], [11c70, 11c8f],
        [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d47],
        [11d50, 11d59], [11d60, 11d65], [11d67, 11d68], [11d6a, 11d8e],
        [11d90, 11d91], [11d93, 11d98], [11da0, 11da9], [11ee0, 11ef8],
        [11fb0, 11fb0], [11fc0, 11ff1], [11fff, 12399], [12400, 1246e],
        [12470, 12474], [12480, 12543], [13000, 1342e], [13430, 13438],
        [14400, 14646], [16800, 16a38], [16a40, 16a5e], [16a60, 16a69],
        [16a6e, 16a6f], [16ad0, 16aed], [16af0, 16af5], [16b00, 16b45],
        [16b50, 16b59], [16b5b, 16b61], [16b63, 16b77], [16b7d, 16b8f],
        [16e40, 16e9a], [16f00, 16f4a], [16f4f, 16f87], [16f8f, 16f9f],
        [16fe0, 16fe4], [16ff0, 16ff1], [17000, 187f7], [18800, 18cd5],
        [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167],
        [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88],
        [1bc90, 1bc99], [1bc9c, 1bca3], [1d000, 1d0f5], [1d100, 1d126],
        [1d129, 1d1e8], [1d200, 1d245], [1d2e0, 1d2f3], [1d300, 1d356],
        [1d360, 1d378], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d7cb], [1d7ce, 1da8b], [1da9b, 1da9f], [1daa1, 1daaf],
        [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021], [1e023, 1e024],
        [1e026, 1e02a], [1e100, 1e12c], [1e130, 1e13d], [1e140, 1e149],
        [1e14e, 1e14f], [1e2c0, 1e2f9], [1e2ff, 1e2ff], [1e800, 1e8c4],
        [1e8c7, 1e8d6], [1e900, 1e94b], [1e950, 1e959], [1e95e, 1e95f],
        [1ec71, 1ecb4], [1ed01, 1ed3d], [1ee00, 1ee03], [1ee05, 1ee1f],
        [1ee21, 1ee22], [1ee24, 1ee24], [1ee27, 1ee27], [1ee29, 1ee32],
        [1ee34, 1ee37], [1ee39, 1ee39], [1ee3b, 1ee3b], [1ee42, 1ee42],
        [1ee47, 1ee47], [1ee49, 1ee49], [1ee4b, 1ee4b], [1ee4d, 1ee4f],
        [1ee51, 1ee52], [1ee54, 1ee54], [1ee57, 1ee57], [1ee59, 1ee59],
        [1ee5b, 1ee5b], [1ee5d, 1ee5d], [1ee5f, 1ee5f], [1ee61, 1ee62],
        [1ee64, 1ee64], [1ee67, 1ee6a], [1ee6c, 1ee72], [1ee74, 1ee77],
        [1ee79, 1ee7c], [1ee7e, 1ee7e], [1ee80, 1ee89], [1ee8b, 1ee9b],
        [1eea1, 1eea3], [1eea5, 1eea9], [1eeab, 1eebb], [1eef0, 1eef1],
        [1f000, 1f02b], [1f030, 1f093], [1f0a0, 1f0ae], [1f0b1, 1f0bf],
        [1f0c1, 1f0cf], [1f0d1, 1f0f5], [1f100, 1f1ad], [1f1e6, 1f202],
        [1f210, 1f23b], [1f240, 1f248], [1f250, 1f251], [1f260, 1f265],
        [1f300, 1f6d7], [1f6e0, 1f6ec], [1f6f0, 1f6fc], [1f700, 1f773],
        [1f780, 1f7d8], [1f7e0, 1f7eb], [1f800, 1f80b], [1f810, 1f847],
        [1f850, 1f859], [1f860, 1f887], [1f890, 1f8ad], [1f8b0, 1f8b1],
        [1f900, 1f978], [1f97a, 1f9cb], [1f9cd, 1fa53], [1fa60, 1fa6d],
        [1fa70, 1fa74], [1fa78, 1fa7a], [1fa80, 1fa86], [1fa90, 1faa8],
        [1fab0, 1fab6], [1fac0, 1fac2], [1fad0, 1fad6], [1fb00, 1fb92],
        [1fb94, 1fbca], [1fbf0, 1fbf9], [20000, 2a6dd], [2a700, 2b734],
        [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d],
        [30000, 3134a], [e0001, e0001], [e0020, e007f], [e0100, e01ef],
        [f0000, ffffd], [100000, 10fffd]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Full, 21}, {Mixed, 3}, {Full, 11}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 7}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 2}, {Full, 5},
        {Mixed, 29}, {Full, 1}, {Mixed, 9}, {Empty, 1}, {Mixed, 3},
        {Empty, 1}, {Full, 2}, {Mixed, 5}, {Empty, 1}, {Full, 6},
        {Mixed, 1}, {Full, 11}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1},
        {Full, 20}, {Mixed, 1}, {Full, 2}, {Mixed, 5}, {Full, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Empty, 1}, {Full, 2}, {Mixed, 2}, {Full, 3},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 7},
        {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 8}, {Full, 1}, {Mixed, 2}, {Full, 4}, {Mixed, 1},
        {Full, 20}, {Mixed, 2}, {Full, 56}, {Mixed, 2}, {Full, 4},
        {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 4}, {Full, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Full, 6}, {Mixed, 3}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 2}, {Full, 2}, {Mixed, 1},
        {Full, 2}, {Mixed, 2}, {Full, 878}, {Mixed, 1}, {Full, 36},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 10}, {Mixed, 1},
        {Full, 5}, {Mixed, 1}, {Full, 6}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 3}, {Mixed, 2},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 3}, {Mixed, 4},
        {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 1}, {Full, 349},
        {Mixed, 3}, {Empty, 64}, {Full, 211}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 1},
        {Full, 11}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 3}, {Mixed, 2}, {Full, 4},
        {Mixed, 6}, {Empty, 1}, {Full, 3}, {Mixed, 3}, {Full, 2},
        {Mixed, 4}, {Empty, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Empty, 1}, {Full, 4},
        {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4}, {Mixed, 3},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 2},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 2}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 9}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 2}, {Full, 1}, {Mixed, 2},
        {Empty, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 2}, {Full, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 3},
        {Empty, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4},
        {Full, 2}, {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 2}, {Mixed, 2}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6}, {Full, 1},
        {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4}, {Empty, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 8}, {Mixed, 6}, {Empty, 2}, {Mixed, 6},
        {Empty, 9}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 28}, {Mixed, 1}, {Empty, 3}, {Full, 3},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Empty, 85}, {Full, 33},
        {Mixed, 1}, {Empty, 126}, {Full, 18}, {Mixed, 1}, {Empty, 269},
        {Full, 17}, {Mixed, 3}, {Empty, 2}, {Mixed, 2}, {Full, 2},
        {Mixed, 3}, {Empty, 21}, {Full, 2}, {Mixed, 1}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1}, {Empty, 72},
        {Full, 3}, {Mixed, 3}, {Empty, 154}, {Full, 7}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 5}, {Mixed, 1}, {Full, 2}, {Mixed, 1},
        {Empty, 4}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Empty, 4},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 10}, {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 21},
        {Mixed, 2}, {Empty, 42}, {Mixed, 2}, {Empty, 6}, {Full, 1},
        {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1}, {Empty, 40},
        {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2}, {Mixed, 1},
        {Empty, 24}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 2}, {Empty, 6}, {Mixed, 6}, {Empty, 1}, {Mixed, 1},
        {Empty, 8}, {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 4}, {Full, 5},
        {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 4}, {Full, 30},
        {Mixed, 2}, {Full, 3}, {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Empty, 2}, {Full, 3},
        {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 3}, {Mixed, 5},
        {Empty, 1}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 32}, {Full, 1334}, {Mixed, 1}, {Empty, 1}, {Full, 129},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180}, {Mixed, 1},
        {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16}, {Mixed, 1},
        {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 22373}, {Mixed, 1},
        {Full, 3}, {Empty, 4}, {Full, 7}, {Mixed, 1}, {Empty, 2032},
        {Full, 2047}, {Mixed, 1}, {Full, 2047}, {Mixed, 1}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0xfffffffe, 0x7fffffff, 0xfffffffe, 0xfcffffff, 0xffffd7f0,
        0xfffffffb, 0xfffeffff, 0xfe7fffff, 0xfffee7ff, 0xffff00ff,
        0x001f87ff, 0xdfffffff, 0xffffbfff, 0xffffe7ff, 0x0003ffff,
        0xe7ffffff, 0x7fff3fff, 0x4fffffff, 0x000007ff, 0xffdfffff,
        0xfff800ff, 0xfff99fef, 0xf3c5fdff, 0xb080799f, 0x7fffffcf,
        0xfff987ee, 0xd36dfdff, 0x5e023987, 0x007fffc0, 0xfffbbfee,
        0xf3edfdff, 0x00013bbf, 0xfe03ffcf, 0xfff99fee, 0xf3edfdff,
        0xb0e0399f, 0x00ffffcf, 0xd63dc7ec, 0xc3ffc718, 0x00813dc7,
        0x07ffffc0, 0xfffddfff, 0xe3fffdff, 0x07603ddf, 0xff80ffcf,
        0xfffddfff, 0xf3effdff, 0x40603ddf, 0x0006ffcf, 0xfffddfff,
        0xfff0fddf, 0xffffffcf, 0xfc7fffee, 0x2ffbffff, 0xff5f847f,
        0x001cffc0, 0xfffffffe, 0x87ffffff, 0x0fffffff, 0xfffff7d6,
        0x3fffffaf, 0xf3ff3f5f, 0xfffffeff, 0xfffe1fff, 0xfeffffff,
        0xdfffffff, 0x07ffdfff, 0xffff20bf, 0x3d7f3dff, 0xffff3dff,
        0x7f3dffff, 0xff7fff3d, 0xff3dffff, 0xe7ffffff, 0x1fffffff,
        0x03ffffff, 0x3f3fffff, 0x1ffffffe, 0x01ffffff, 0x001fdfff,
        0x007fffff, 0x000fffff, 0x000ddfff, 0x3fffffff, 0x03ff03ff,
        0x03ff7fff, 0x01ffffff, 0xffff07ff, 0x003fffff, 0x7fffffff,
        0x0fff0fff, 0xfffffff1, 0x001f3fff, 0xffff0fff, 0xc7ff03ff,
        0xcfffffff, 0x7fffffff, 0x9fffffff, 0x03ff03ff, 0xffff3fff,
        0x00000001, 0xffff0fff, 0x1fffffff, 0xf00fffff, 0xf8ffffff,
        0xffffe3ff, 0xffff01ff, 0xe7ffffff, 0xffff00ff, 0x07ffffff,
        0xfbffffff, 0x3f3fffff, 0xaaff3f3f, 0x3fffffff, 0xffdfffff,
        0xefcfffdf, 0x7fdcffff, 0xfffff800, 0xffff7cff, 0x7fffffff,
        0xfff3ffdf, 0x1fff7fff, 0xffff0000, 0x0001ffff, 0xffff0fff,
        0x0000007f, 0x000007ff, 0xffcfffff, 0xffbfffff, 0xffff7fff,
        0x7fffffff, 0xfe0fffff, 0xffff20bf, 0x800180ff, 0x007fffff,
        0x7f7f7f7f, 0x7f7f7f7f, 0x0007ffff, 0xfbffffff, 0x000fffff,
        0x003fffff, 0x0fff0000, 0xfffffffe, 0xfffffffe, 0xfe7fffff,
        0xffffffe0, 0xfffeffff, 0xffff7fff, 0xffff000f, 0x7fffffff,
        0x1fffffff, 0xffff1fff, 0xffff007f, 0x00000fff, 0x00ffffff,
        0x000007fc, 0xffe00000, 0x03ff1fff, 0x00ffffff, 0x03ffc03f,
        0x800fffff, 0x1fffffff, 0xc3ffbfff, 0x7fffffff, 0x007fffff,
        0xf3ff3fff, 0xf8000007, 0x007fffff, 0x007e7e7e, 0xffff7f7f,
        0xffff0fff, 0x03ff3fff, 0xffff000f, 0xfffff87f, 0x0fffffff,
        0xffff3fff, 0x03ffffff, 0xe0f8007f, 0x5f7fffff, 0xffffffdb,
        0xfff80003, 0xffff0000, 0xfffcffff, 0x000000ff, 0x3fff0000,
        0x03ffffff, 0xfff7ffff, 0xffdf0f7f, 0x9fffffff, 0xfffffffe,
        0x7fffffff, 0x1cfcfcfc, 0x3e007f7f, 0xffffefff, 0xb7ffff7f,
        0x3fff3fff, 0x07ffffff, 0xffffff87, 0xff8fffff, 0x1fff7fff,
        0x00000001, 0xffff0000, 0x3fffffff, 0x1fffffff, 0x0001ffff,
        0x0fffffff, 0xffffe00f, 0xffff07ff, 0x07ffffff, 0xbfffffff,
        0x003fff0f, 0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000800f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0xffbfffff, 0x7fffffff, 0x0000ff80,
        0xf837ffff, 0x8fffffff, 0x83ffffff, 0xf0ffffff, 0xfffcffff,
        0xfeeff06f, 0x873fffff, 0x01ff01ff, 0x007ff87f, 0xfe3fffff,
        0xff3fffff, 0xff07ffff, 0x1e03ffff, 0x0000fe00, 0x000001ff,
        0x0007ffff, 0xfc07ffff, 0x03ff00ff, 0x7fffffff, 0x00033bff,
        0xffff00ff, 0x03ffffff, 0xffff0000, 0x00000fff, 0x007fffff,
        0xfffc3fff, 0x8000ffff, 0xffff2003, 0x03ff01ff, 0xffdfffff,
        0xffff00ff, 0x007fffff, 0x001ffffe, 0xfffbffff, 0x7fffffff,
        0xbfffbd7f, 0xffff03ff, 0x03ff07ff, 0xfff99fef, 0xfbedfdff,
        0xe081399f, 0x001f1fcf, 0xefffffff, 0x00000003, 0x03ff00ff,
        0xff3fffff, 0x3fffffff, 0x03ff001f, 0x00001fff, 0x01ffffff,
        0x000003ff, 0xe7ffffff, 0xffff0fff, 0x0fffffff, 0x8007ffff,
        0xff6ff27f, 0xf9bfffff, 0x03ff007f, 0xfffffcff, 0xfcffffff,
        0x0000001f, 0xffff00ff, 0x00000007, 0x01ffffff, 0xfffffdff,
        0xff7fffff, 0xffff003f, 0xffff1fff, 0xfffcffff, 0x007ffeff,
        0xfffffb7f, 0xb47fffff, 0x03ff00ff, 0xfffffdbf, 0x01fb7fff,
        0x000003ff, 0x01ffffff, 0x00010000, 0x8003ffff, 0x03ffffff,
        0x001f7fff, 0x0000000f, 0x01ff7fff, 0x0000007f, 0x01ffffff,
        0x7fffffff, 0x0000c3ff, 0xffff0000, 0x003f3fff, 0xfbff003f,
        0xe0fffffb, 0x0000ffff, 0x07ffffff, 0xffff87ff, 0xffff80ff,
        0x0003001f, 0x00ffffff, 0x003fffff, 0x000001ff, 0x7fffffff,
        0x00070000, 0xffff00f0, 0x0fffffff, 0x1fff07ff, 0xf3ff01ff,
        0x0000000f, 0x003fffff, 0xfffffe7f, 0x000001ff, 0x0000003f,
        0x000fffff, 0x007fffff, 0x01ffffff, 0xffdfffff, 0xdfffffff,
        0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,
        0xffffff3f, 0xffffcfff, 0xf8000fff, 0x0000fffe, 0xf9ffff7f,
        0x000007db, 0x3fff1fff, 0x0000c3ff, 0x83ffffff, 0x007fff9f,
        0xc3ff0fff, 0xfffe0000, 0x001fffff, 0xfffffffe, 0x3fffffff,
        0xffffffef, 0x0af7fe96, 0xaa96ea84, 0x5ef7f796, 0x0ffffbff,
        0x0ffffbee, 0x00030000, 0xffff0fff, 0x000fffff, 0xfffe7fff,
        0xfffefffe, 0x003fffff, 0x00003fff, 0xffffffc0, 0xffff0007,
        0x0fffffff, 0x000301ff, 0x0000003f, 0x00ffffff, 0x1fff1fff,
        0x000fffff, 0x01ffffff, 0x00000fff, 0xffff0fff, 0x03ff00ff,
        0xffff00ff, 0x00033fff, 0xfdffffff, 0xffffefff, 0x000fffff,
        0x071f3fff, 0xffff007f, 0x007f01ff, 0x007f0007, 0xfff7ffff,
        0x000007ff, 0x03ff0000, 0x3fffffff, 0x001fffff, 0x3fffffff,
        0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff, 0x00000002,
        0x0000ffff, 0x3fffffff, 0x3fffffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 437, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 408, 0};

        static BinaryPropertyObject property_object{graph, std::move(codepoint_set)};
    }
PropertyObject * get_GRAPH_PropertyObject() {  return & GRAPH_ns::property_object; }
}

