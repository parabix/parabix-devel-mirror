
/*
 *  Copyright (c) 2021 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by UCD_properties.py - manual edits may be lost.
 *  DerivedCoreProperties
 */

#include <unicode/core/unicode_set.h>
#include <unicode/data/PropertyAliases.h>
#include <unicode/data/PropertyObjects.h>
#include <unicode/data/PropertyValueAliases.h>

namespace UCD {
    namespace ALPHA_ns {
        /** Code Point Ranges for Alpha
        [0041, 005a], [0061, 007a], [00aa, 00aa], [00b5, 00b5],
        [00ba, 00ba], [00c0, 00d6], [00d8, 00f6], [00f8, 02c1],
        [02c6, 02d1], [02e0, 02e4], [02ec, 02ec], [02ee, 02ee],
        [0345, 0345], [0370, 0374], [0376, 0377], [037a, 037d],
        [037f, 037f], [0386, 0386], [0388, 038a], [038c, 038c],
        [038e, 03a1], [03a3, 03f5], [03f7, 0481], [048a, 052f],
        [0531, 0556], [0559, 0559], [0560, 0588], [05b0, 05bd],
        [05bf, 05bf], [05c1, 05c2], [05c4, 05c5], [05c7, 05c7],
        [05d0, 05ea], [05ef, 05f2], [0610, 061a], [0620, 0657],
        [0659, 065f], [066e, 06d3], [06d5, 06dc], [06e1, 06e8],
        [06ed, 06ef], [06fa, 06fc], [06ff, 06ff], [0710, 073f],
        [074d, 07b1], [07ca, 07ea], [07f4, 07f5], [07fa, 07fa],
        [0800, 0817], [081a, 082c], [0840, 0858], [0860, 086a],
        [08a0, 08b4], [08b6, 08c7], [08d4, 08df], [08e3, 08e9],
        [08f0, 093b], [093d, 094c], [094e, 0950], [0955, 0963],
        [0971, 0983], [0985, 098c], [098f, 0990], [0993, 09a8],
        [09aa, 09b0], [09b2, 09b2], [09b6, 09b9], [09bd, 09c4],
        [09c7, 09c8], [09cb, 09cc], [09ce, 09ce], [09d7, 09d7],
        [09dc, 09dd], [09df, 09e3], [09f0, 09f1], [09fc, 09fc],
        [0a01, 0a03], [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28],
        [0a2a, 0a30], [0a32, 0a33], [0a35, 0a36], [0a38, 0a39],
        [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4c], [0a51, 0a51],
        [0a59, 0a5c], [0a5e, 0a5e], [0a70, 0a75], [0a81, 0a83],
        [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8], [0aaa, 0ab0],
        [0ab2, 0ab3], [0ab5, 0ab9], [0abd, 0ac5], [0ac7, 0ac9],
        [0acb, 0acc], [0ad0, 0ad0], [0ae0, 0ae3], [0af9, 0afc],
        [0b01, 0b03], [0b05, 0b0c], [0b0f, 0b10], [0b13, 0b28],
        [0b2a, 0b30], [0b32, 0b33], [0b35, 0b39], [0b3d, 0b44],
        [0b47, 0b48], [0b4b, 0b4c], [0b56, 0b57], [0b5c, 0b5d],
        [0b5f, 0b63], [0b71, 0b71], [0b82, 0b83], [0b85, 0b8a],
        [0b8e, 0b90], [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c],
        [0b9e, 0b9f], [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9],
        [0bbe, 0bc2], [0bc6, 0bc8], [0bca, 0bcc], [0bd0, 0bd0],
        [0bd7, 0bd7], [0c00, 0c03], [0c05, 0c0c], [0c0e, 0c10],
        [0c12, 0c28], [0c2a, 0c39], [0c3d, 0c44], [0c46, 0c48],
        [0c4a, 0c4c], [0c55, 0c56], [0c58, 0c5a], [0c60, 0c63],
        [0c80, 0c83], [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8],
        [0caa, 0cb3], [0cb5, 0cb9], [0cbd, 0cc4], [0cc6, 0cc8],
        [0cca, 0ccc], [0cd5, 0cd6], [0cde, 0cde], [0ce0, 0ce3],
        [0cf1, 0cf2], [0d00, 0d0c], [0d0e, 0d10], [0d12, 0d3a],
        [0d3d, 0d44], [0d46, 0d48], [0d4a, 0d4c], [0d4e, 0d4e],
        [0d54, 0d57], [0d5f, 0d63], [0d7a, 0d7f], [0d81, 0d83],
        [0d85, 0d96], [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd],
        [0dc0, 0dc6], [0dcf, 0dd4], [0dd6, 0dd6], [0dd8, 0ddf],
        [0df2, 0df3], [0e01, 0e3a], [0e40, 0e46], [0e4d, 0e4d],
        [0e81, 0e82], [0e84, 0e84], [0e86, 0e8a], [0e8c, 0ea3],
        [0ea5, 0ea5], [0ea7, 0eb9], [0ebb, 0ebd], [0ec0, 0ec4],
        [0ec6, 0ec6], [0ecd, 0ecd], [0edc, 0edf], [0f00, 0f00],
        [0f40, 0f47], [0f49, 0f6c], [0f71, 0f81], [0f88, 0f97],
        [0f99, 0fbc], [1000, 1036], [1038, 1038], [103b, 103f],
        [1050, 108f], [109a, 109d], [10a0, 10c5], [10c7, 10c7],
        [10cd, 10cd], [10d0, 10fa], [10fc, 1248], [124a, 124d],
        [1250, 1256], [1258, 1258], [125a, 125d], [1260, 1288],
        [128a, 128d], [1290, 12b0], [12b2, 12b5], [12b8, 12be],
        [12c0, 12c0], [12c2, 12c5], [12c8, 12d6], [12d8, 1310],
        [1312, 1315], [1318, 135a], [1380, 138f], [13a0, 13f5],
        [13f8, 13fd], [1401, 166c], [166f, 167f], [1681, 169a],
        [16a0, 16ea], [16ee, 16f8], [1700, 170c], [170e, 1713],
        [1720, 1733], [1740, 1753], [1760, 176c], [176e, 1770],
        [1772, 1773], [1780, 17b3], [17b6, 17c8], [17d7, 17d7],
        [17dc, 17dc], [1820, 1878], [1880, 18aa], [18b0, 18f5],
        [1900, 191e], [1920, 192b], [1930, 1938], [1950, 196d],
        [1970, 1974], [1980, 19ab], [19b0, 19c9], [1a00, 1a1b],
        [1a20, 1a5e], [1a61, 1a74], [1aa7, 1aa7], [1abf, 1ac0],
        [1b00, 1b33], [1b35, 1b43], [1b45, 1b4b], [1b80, 1ba9],
        [1bac, 1baf], [1bba, 1be5], [1be7, 1bf1], [1c00, 1c36],
        [1c4d, 1c4f], [1c5a, 1c7d], [1c80, 1c88], [1c90, 1cba],
        [1cbd, 1cbf], [1ce9, 1cec], [1cee, 1cf3], [1cf5, 1cf6],
        [1cfa, 1cfa], [1d00, 1dbf], [1de7, 1df4], [1e00, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4],
        [1fc6, 1fcc], [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec],
        [1ff2, 1ff4], [1ff6, 1ffc], [2071, 2071], [207f, 207f],
        [2090, 209c], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2119, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 212d], [212f, 2139], [213c, 213f],
        [2145, 2149], [214e, 214e], [2160, 2188], [24b6, 24e9],
        [2c00, 2c2e], [2c30, 2c5e], [2c60, 2ce4], [2ceb, 2cee],
        [2cf2, 2cf3], [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d],
        [2d30, 2d67], [2d6f, 2d6f], [2d80, 2d96], [2da0, 2da6],
        [2da8, 2dae], [2db0, 2db6], [2db8, 2dbe], [2dc0, 2dc6],
        [2dc8, 2dce], [2dd0, 2dd6], [2dd8, 2dde], [2de0, 2dff],
        [2e2f, 2e2f], [3005, 3007], [3021, 3029], [3031, 3035],
        [3038, 303c], [3041, 3096], [309d, 309f], [30a1, 30fa],
        [30fc, 30ff], [3105, 312f], [3131, 318e], [31a0, 31bf],
        [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc], [a000, a48c],
        [a4d0, a4fd], [a500, a60c], [a610, a61f], [a62a, a62b],
        [a640, a66e], [a674, a67b], [a67f, a6ef], [a717, a71f],
        [a722, a788], [a78b, a7bf], [a7c2, a7ca], [a7f5, a805],
        [a807, a827], [a840, a873], [a880, a8c3], [a8c5, a8c5],
        [a8f2, a8f7], [a8fb, a8fb], [a8fd, a8ff], [a90a, a92a],
        [a930, a952], [a960, a97c], [a980, a9b2], [a9b4, a9bf],
        [a9cf, a9cf], [a9e0, a9ef], [a9fa, a9fe], [aa00, aa36],
        [aa40, aa4d], [aa60, aa76], [aa7a, aabe], [aac0, aac0],
        [aac2, aac2], [aadb, aadd], [aae0, aaef], [aaf2, aaf5],
        [ab01, ab06], [ab09, ab0e], [ab11, ab16], [ab20, ab26],
        [ab28, ab2e], [ab30, ab5a], [ab5c, ab69], [ab70, abea],
        [ac00, d7a3], [d7b0, d7c6], [d7cb, d7fb], [f900, fa6d],
        [fa70, fad9], [fb00, fb06], [fb13, fb17], [fb1d, fb28],
        [fb2a, fb36], [fb38, fb3c], [fb3e, fb3e], [fb40, fb41],
        [fb43, fb44], [fb46, fbb1], [fbd3, fd3d], [fd50, fd8f],
        [fd92, fdc7], [fdf0, fdfb], [fe70, fe74], [fe76, fefc],
        [ff21, ff3a], [ff41, ff5a], [ff66, ffbe], [ffc2, ffc7],
        [ffca, ffcf], [ffd2, ffd7], [ffda, ffdc], [10000, 1000b],
        [1000d, 10026], [10028, 1003a], [1003c, 1003d], [1003f, 1004d],
        [10050, 1005d], [10080, 100fa], [10140, 10174], [10280, 1029c],
        [102a0, 102d0], [10300, 1031f], [1032d, 1034a], [10350, 1037a],
        [10380, 1039d], [103a0, 103c3], [103c8, 103cf], [103d1, 103d5],
        [10400, 1049d], [104b0, 104d3], [104d8, 104fb], [10500, 10527],
        [10530, 10563], [10600, 10736], [10740, 10755], [10760, 10767],
        [10800, 10805], [10808, 10808], [1080a, 10835], [10837, 10838],
        [1083c, 1083c], [1083f, 10855], [10860, 10876], [10880, 1089e],
        [108e0, 108f2], [108f4, 108f5], [10900, 10915], [10920, 10939],
        [10980, 109b7], [109be, 109bf], [10a00, 10a03], [10a05, 10a06],
        [10a0c, 10a13], [10a15, 10a17], [10a19, 10a35], [10a60, 10a7c],
        [10a80, 10a9c], [10ac0, 10ac7], [10ac9, 10ae4], [10b00, 10b35],
        [10b40, 10b55], [10b60, 10b72], [10b80, 10b91], [10c00, 10c48],
        [10c80, 10cb2], [10cc0, 10cf2], [10d00, 10d27], [10e80, 10ea9],
        [10eab, 10eac], [10eb0, 10eb1], [10f00, 10f1c], [10f27, 10f27],
        [10f30, 10f45], [10fb0, 10fc4], [10fe0, 10ff6], [11000, 11045],
        [11082, 110b8], [110d0, 110e8], [11100, 11132], [11144, 11147],
        [11150, 11172], [11176, 11176], [11180, 111bf], [111c1, 111c4],
        [111ce, 111cf], [111da, 111da], [111dc, 111dc], [11200, 11211],
        [11213, 11234], [11237, 11237], [1123e, 1123e], [11280, 11286],
        [11288, 11288], [1128a, 1128d], [1128f, 1129d], [1129f, 112a8],
        [112b0, 112e8], [11300, 11303], [11305, 1130c], [1130f, 11310],
        [11313, 11328], [1132a, 11330], [11332, 11333], [11335, 11339],
        [1133d, 11344], [11347, 11348], [1134b, 1134c], [11350, 11350],
        [11357, 11357], [1135d, 11363], [11400, 11441], [11443, 11445],
        [11447, 1144a], [1145f, 11461], [11480, 114c1], [114c4, 114c5],
        [114c7, 114c7], [11580, 115b5], [115b8, 115be], [115d8, 115dd],
        [11600, 1163e], [11640, 11640], [11644, 11644], [11680, 116b5],
        [116b8, 116b8], [11700, 1171a], [1171d, 1172a], [11800, 11838],
        [118a0, 118df], [118ff, 11906], [11909, 11909], [1190c, 11913],
        [11915, 11916], [11918, 11935], [11937, 11938], [1193b, 1193c],
        [1193f, 11942], [119a0, 119a7], [119aa, 119d7], [119da, 119df],
        [119e1, 119e1], [119e3, 119e4], [11a00, 11a32], [11a35, 11a3e],
        [11a50, 11a97], [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08],
        [11c0a, 11c36], [11c38, 11c3e], [11c40, 11c40], [11c72, 11c8f],
        [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d41],
        [11d43, 11d43], [11d46, 11d47], [11d60, 11d65], [11d67, 11d68],
        [11d6a, 11d8e], [11d90, 11d91], [11d93, 11d96], [11d98, 11d98],
        [11ee0, 11ef6], [11fb0, 11fb0], [12000, 12399], [12400, 1246e],
        [12480, 12543], [13000, 1342e], [14400, 14646], [16800, 16a38],
        [16a40, 16a5e], [16ad0, 16aed], [16b00, 16b2f], [16b40, 16b43],
        [16b63, 16b77], [16b7d, 16b8f], [16e40, 16e7f], [16f00, 16f4a],
        [16f4f, 16f87], [16f8f, 16f9f], [16fe0, 16fe1], [16fe3, 16fe3],
        [16ff0, 16ff1], [17000, 187f7], [18800, 18cd5], [18d00, 18d08],
        [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167], [1b170, 1b2fb],
        [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88], [1bc90, 1bc99],
        [1bc9e, 1bc9e], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d6c0], [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714],
        [1d716, 1d734], [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788],
        [1d78a, 1d7a8], [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1e000, 1e006],
        [1e008, 1e018], [1e01b, 1e021], [1e023, 1e024], [1e026, 1e02a],
        [1e100, 1e12c], [1e137, 1e13d], [1e14e, 1e14e], [1e2c0, 1e2eb],
        [1e800, 1e8c4], [1e900, 1e943], [1e947, 1e947], [1e94b, 1e94b],
        [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24],
        [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39],
        [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49],
        [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54],
        [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d],
        [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a],
        [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e],
        [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9],
        [1eeab, 1eebb], [1f130, 1f149], [1f150, 1f169], [1f170, 1f189],
        [20000, 2a6dd], [2a700, 2b734], [2b740, 2b81d], [2b820, 2cea1],
        [2ceb0, 2ebe0], [2f800, 2fa1d], [30000, 3134a]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Empty, 2}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Full, 4}, {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5},
        {Full, 1}, {Mixed, 2}, {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 7}, {Empty, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 22}, {Empty, 1}, {Mixed, 19}, {Empty, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Full, 10}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Full, 2}, {Mixed, 2}, {Full, 18}, {Mixed, 2}, {Full, 2},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 2}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Full, 6}, {Empty, 1},
        {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 3}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 56}, {Full, 1}, {Mixed, 2}, {Full, 4},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 14}, {Mixed, 3}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2},
        {Full, 655}, {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Full, 2}, {Mixed, 6}, {Full, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 7}, {Full, 3}, {Mixed, 1},
        {Full, 349}, {Mixed, 3}, {Empty, 264}, {Full, 11}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 2},
        {Mixed, 2}, {Full, 10}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Full, 3},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Full, 3}, {Mixed, 1},
        {Empty, 2}, {Full, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 4}, {Full, 9},
        {Mixed, 3}, {Empty, 4}, {Mixed, 5}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 4}, {Empty, 3}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 10}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Mixed, 4}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 2}, {Full, 1},
        {Mixed, 5}, {Empty, 4}, {Full, 2}, {Mixed, 2}, {Full, 2},
        {Mixed, 1}, {Empty, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Full, 1}, {Mixed, 1},
        {Empty, 3}, {Full, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 3},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Empty, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 8}, {Mixed, 6}, {Empty, 2}, {Mixed, 5},
        {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 2},
        {Full, 28}, {Mixed, 1}, {Empty, 3}, {Full, 3}, {Mixed, 1},
        {Full, 6}, {Mixed, 1}, {Empty, 85}, {Full, 33}, {Mixed, 1},
        {Empty, 126}, {Full, 18}, {Mixed, 1}, {Empty, 269}, {Full, 17},
        {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Full, 1}, {Mixed, 4},
        {Empty, 21}, {Full, 2}, {Empty, 4}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Full, 191},
        {Mixed, 1}, {Full, 38}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Empty, 279}, {Full, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
        {Full, 11}, {Mixed, 1}, {Empty, 72}, {Full, 3}, {Mixed, 2},
        {Empty, 187}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 3}, {Full, 10}, {Mixed, 10}, {Empty, 65},
        {Mixed, 2}, {Empty, 6}, {Full, 1}, {Mixed, 2}, {Empty, 11},
        {Full, 1}, {Mixed, 1}, {Empty, 40}, {Full, 6}, {Mixed, 1},
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 6},
        {Empty, 19}, {Mixed, 4}, {Empty, 115}, {Full, 1334}, {Mixed, 1},
        {Empty, 1}, {Full, 129}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Full, 180}, {Mixed, 1}, {Full, 233}, {Mixed, 1}, {Empty, 96},
        {Full, 16}, {Mixed, 1}, {Empty, 47}, {Full, 154}, {Mixed, 1},
        {Empty, 28517}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x07fffffe, 0x04200400, 0xff7fffff, 0xff7fffff,
        0x0003ffc3, 0x0000501f, 0x00000020, 0xbcdf0000, 0xffffd740,
        0xfffffffb, 0xffbfffff, 0xfffffc03, 0xfffeffff, 0x027fffff,
        0x000001ff, 0xbfff0000, 0xffff00b6, 0x000787ff, 0x07ff0000,
        0xfeffffff, 0xffffc000, 0x1fefffff, 0x9c00e1fe, 0xffff0000,
        0xffffe000, 0x0003ffff, 0xfffffc00, 0x043007ff, 0xfcffffff,
        0x00001fff, 0x01ffffff, 0x000007ff, 0xffdfffff, 0xfff000ff,
        0xffff03f8, 0xefffffff, 0xffe1dfff, 0xfffe000f, 0xfff99fef,
        0xe3c5fdff, 0xb080599f, 0x1003000f, 0xfff987ee, 0xc36dfdff,
        0x5e021987, 0x003f0000, 0xfffbbfee, 0xe3edfdff, 0x00011bbf,
        0x1e00000f, 0xfff99fee, 0xe3edfdff, 0xb0c0199f, 0x0002000f,
        0xd63dc7ec, 0xc3ffc718, 0x00811dc7, 0xfffddfef, 0xe3fffdff,
        0x07601ddf, 0x0000000f, 0xfffddfef, 0xe3effdff, 0x40601ddf,
        0x0006000f, 0xfffddfff, 0xe7ffffff, 0x80f05ddf, 0xfc00000f,
        0xfc7fffee, 0x2ffbffff, 0xff5f807f, 0x000c0000, 0xfffffffe,
        0x07ffffff, 0x0000207f, 0xfffff7d6, 0x3bffffaf, 0xf000205f,
        0x00000001, 0xfffffeff, 0xfffe1fff, 0xfeffff03, 0x1fffffff,
        0xf97fffff, 0xffff0000, 0x3c00ffff, 0xffff20bf, 0xf7ffffff,
        0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d, 0xff3dffff,
        0x07ffffff, 0x0000ffff, 0x3f3fffff, 0xfffffffe, 0xffff9fff,
        0x07fffffe, 0x01ffc7ff, 0x000fdfff, 0x000fffff, 0x000fffff,
        0x000ddfff, 0xffcfffff, 0x108001ff, 0x01ffffff, 0xffff07ff,
        0x003fffff, 0x7fffffff, 0x01ff0fff, 0xffff0000, 0x001f3fff,
        0xffff0fff, 0x000003ff, 0x0fffffff, 0x7fffffff, 0x001ffffe,
        0x80000080, 0x00000001, 0xffefffff, 0x00000fef, 0xfc00f3ff,
        0x0003ffbf, 0x007fffff, 0xfc00e000, 0x3fffffff, 0xffff01ff,
        0xe7ffffff, 0x046fde00, 0x001fff80, 0x3f3fffff, 0xaaff3f3f,
        0x3fffffff, 0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80020000,
        0x1fff0000, 0x3e2ffc84, 0xf3ffbd50, 0x000043e0, 0x000001ff,
        0xffc00000, 0x000003ff, 0xffff7fff, 0x7fffffff, 0x000c781f,
        0xffff20bf, 0x000080ff, 0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f,
        0x00008000, 0x000000e0, 0x1f3e03fe, 0xfffffffe, 0xe07fffff,
        0xfffffffe, 0xf7ffffff, 0xffffffe0, 0xfffeffff, 0x00007fff,
        0xffff0000, 0x1fffffff, 0x00001fff, 0xffff0000, 0x3fffffff,
        0xffff1fff, 0x00000c00, 0x8ff07fff, 0x0000ffff, 0xff800000,
        0xfffffffc, 0xfffff9ff, 0x000007fc, 0xffe00000, 0xffffffbf,
        0x000000ff, 0x000fffff, 0x0000002f, 0xe8fc0000, 0xfffffc00,
        0xffff07ff, 0x0007ffff, 0x1fffffff, 0xfff7ffff, 0x00008000,
        0x7c00ffff, 0x007fffff, 0x00003fff, 0xfc7fffff, 0x7fffffff,
        0x38000005, 0x003cffff, 0x007e7e7e, 0xffff7f7f, 0xf7ffffff,
        0xffff03ff, 0x000007ff, 0xffff000f, 0xfffff87f, 0x0fffffff,
        0xffff3fff, 0x03ffffff, 0xe0f8007f, 0x5f7ffdff, 0xffffffdb,
        0x0003ffff, 0xfff80000, 0x3fffffff, 0xffff0000, 0xfffcffff,
        0x000000ff, 0x0fff0000, 0xffdf0000, 0x1fffffff, 0x07fffffe,
        0x07fffffe, 0xffffffc0, 0x7fffffff, 0x1cfcfcfc, 0xffffefff,
        0xb7ffff7f, 0x3fff3fff, 0x07ffffff, 0x001fffff, 0x1fffffff,
        0x0001ffff, 0xffffe000, 0xffff07ff, 0x07ffffff, 0x3fffffff,
        0x003eff0f, 0x3fffffff, 0xffff0000, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000000f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0x003fffff, 0x007fffff, 0x7fffffff,
        0x0037ffff, 0x003fffff, 0x03ffffff, 0xc0ffffff, 0xfeeff06f,
        0x003fffff, 0x1fffffff, 0x1fffffff, 0xfffffeff, 0x0000001f,
        0x003fffff, 0x003fffff, 0x0007ffff, 0x0003ffff, 0x000001ff,
        0x0007ffff, 0x0007ffff, 0x000000ff, 0x00031bff, 0x1fffffff,
        0xffff0080, 0x0000003f, 0xffff0000, 0x0000001f, 0x007fffff,
        0x0000003f, 0xfffffffc, 0x01ffffff, 0xffff0000, 0x000001ff,
        0x0007ffff, 0xffff00f0, 0x0047ffff, 0x1400c01e, 0xfffbffff,
        0x409fffff, 0xbfffbd7f, 0xffff01ff, 0x000001ff, 0xfff99fef,
        0xe3edfdff, 0xe081199f, 0x0000000f, 0x800007bb, 0x00000003,
        0x000000b3, 0x7f3fffff, 0x3f000000, 0x7fffffff, 0x00000011,
        0x013fffff, 0xe7ffffff, 0x000007ff, 0x01ffffff, 0x80000000,
        0xff6ff27f, 0x99bfffff, 0x00000007, 0xfffffcff, 0xfcffffff,
        0x0000001a, 0x7fe7ffff, 0xffff0000, 0x20ffffff, 0x01ffffff,
        0xfffffdff, 0x7f7fffff, 0x00000001, 0xfffc0000, 0xfffcffff,
        0x007ffeff, 0xfffffb7f, 0xb47fffff, 0x000000cb, 0xfffffdbf,
        0x017b7fff, 0x007fffff, 0x00010000, 0x03ffffff, 0x00007fff,
        0x0000000f, 0x00007fff, 0x0000007f, 0x01ffffff, 0x7fffffff,
        0xffff0000, 0x00003fff, 0x0000ffff, 0x0000000f, 0xe0fffff8,
        0x0000ffff, 0xffff87ff, 0xffff80ff, 0x0003000b, 0x00ffffff,
        0x003fffff, 0x000001ff, 0x7fffffff, 0x00070000, 0xffff00f0,
        0x0fffffff, 0x1fff07ff, 0x43ff01ff, 0xffdfffff, 0xdfffffff,
        0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,
        0xffffff3f, 0xf7fffffd, 0xf7ffffff, 0xffdfffff, 0xffdfffff,
        0xffff7fff, 0xffff7fff, 0xfffffdff, 0xfffffdff, 0x00000ff7,
        0xf9ffff7f, 0x000007db, 0x3f801fff, 0x00004000, 0x00000fff,
        0x0000001f, 0x0000088f, 0xffffffef, 0x0af7fe96, 0xaa96ea84,
        0x5ef7f796, 0x0ffffbff, 0x0ffffbee, 0xffff0000, 0xffff03ff,
        0xffff03ff, 0x000003ff, 0x3fffffff, 0x001fffff, 0x3fffffff,
        0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 390, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 394, 0};

        static BinaryPropertyObject property_object{Alpha, std::move(codepoint_set)};
    }
PropertyObject * get_ALPHA_PropertyObject() {  return & ALPHA_ns::property_object; }
    namespace CI_ns {
        /** Code Point Ranges for CI
        [0027, 0027], [002e, 002e], [003a, 003a], [005e, 005e],
        [0060, 0060], [00a8, 00a8], [00ad, 00ad], [00af, 00af],
        [00b4, 00b4], [00b7, 00b8], [02b0, 036f], [0374, 0375],
        [037a, 037a], [0384, 0385], [0387, 0387], [0483, 0489],
        [0559, 0559], [055f, 055f], [0591, 05bd], [05bf, 05bf],
        [05c1, 05c2], [05c4, 05c5], [05c7, 05c7], [05f4, 05f4],
        [0600, 0605], [0610, 061a], [061c, 061c], [0640, 0640],
        [064b, 065f], [0670, 0670], [06d6, 06dd], [06df, 06e8],
        [06ea, 06ed], [070f, 070f], [0711, 0711], [0730, 074a],
        [07a6, 07b0], [07eb, 07f5], [07fa, 07fa], [07fd, 07fd],
        [0816, 082d], [0859, 085b], [08d3, 0902], [093a, 093a],
        [093c, 093c], [0941, 0948], [094d, 094d], [0951, 0957],
        [0962, 0963], [0971, 0971], [0981, 0981], [09bc, 09bc],
        [09c1, 09c4], [09cd, 09cd], [09e2, 09e3], [09fe, 09fe],
        [0a01, 0a02], [0a3c, 0a3c], [0a41, 0a42], [0a47, 0a48],
        [0a4b, 0a4d], [0a51, 0a51], [0a70, 0a71], [0a75, 0a75],
        [0a81, 0a82], [0abc, 0abc], [0ac1, 0ac5], [0ac7, 0ac8],
        [0acd, 0acd], [0ae2, 0ae3], [0afa, 0aff], [0b01, 0b01],
        [0b3c, 0b3c], [0b3f, 0b3f], [0b41, 0b44], [0b4d, 0b4d],
        [0b55, 0b56], [0b62, 0b63], [0b82, 0b82], [0bc0, 0bc0],
        [0bcd, 0bcd], [0c00, 0c00], [0c04, 0c04], [0c3e, 0c40],
        [0c46, 0c48], [0c4a, 0c4d], [0c55, 0c56], [0c62, 0c63],
        [0c81, 0c81], [0cbc, 0cbc], [0cbf, 0cbf], [0cc6, 0cc6],
        [0ccc, 0ccd], [0ce2, 0ce3], [0d00, 0d01], [0d3b, 0d3c],
        [0d41, 0d44], [0d4d, 0d4d], [0d62, 0d63], [0d81, 0d81],
        [0dca, 0dca], [0dd2, 0dd4], [0dd6, 0dd6], [0e31, 0e31],
        [0e34, 0e3a], [0e46, 0e4e], [0eb1, 0eb1], [0eb4, 0ebc],
        [0ec6, 0ec6], [0ec8, 0ecd], [0f18, 0f19], [0f35, 0f35],
        [0f37, 0f37], [0f39, 0f39], [0f71, 0f7e], [0f80, 0f84],
        [0f86, 0f87], [0f8d, 0f97], [0f99, 0fbc], [0fc6, 0fc6],
        [102d, 1030], [1032, 1037], [1039, 103a], [103d, 103e],
        [1058, 1059], [105e, 1060], [1071, 1074], [1082, 1082],
        [1085, 1086], [108d, 108d], [109d, 109d], [10fc, 10fc],
        [135d, 135f], [1712, 1714], [1732, 1734], [1752, 1753],
        [1772, 1773], [17b4, 17b5], [17b7, 17bd], [17c6, 17c6],
        [17c9, 17d3], [17d7, 17d7], [17dd, 17dd], [180b, 180e],
        [1843, 1843], [1885, 1886], [18a9, 18a9], [1920, 1922],
        [1927, 1928], [1932, 1932], [1939, 193b], [1a17, 1a18],
        [1a1b, 1a1b], [1a56, 1a56], [1a58, 1a5e], [1a60, 1a60],
        [1a62, 1a62], [1a65, 1a6c], [1a73, 1a7c], [1a7f, 1a7f],
        [1aa7, 1aa7], [1ab0, 1ac0], [1b00, 1b03], [1b34, 1b34],
        [1b36, 1b3a], [1b3c, 1b3c], [1b42, 1b42], [1b6b, 1b73],
        [1b80, 1b81], [1ba2, 1ba5], [1ba8, 1ba9], [1bab, 1bad],
        [1be6, 1be6], [1be8, 1be9], [1bed, 1bed], [1bef, 1bf1],
        [1c2c, 1c33], [1c36, 1c37], [1c78, 1c7d], [1cd0, 1cd2],
        [1cd4, 1ce0], [1ce2, 1ce8], [1ced, 1ced], [1cf4, 1cf4],
        [1cf8, 1cf9], [1d2c, 1d6a], [1d78, 1d78], [1d9b, 1df9],
        [1dfb, 1dff], [1fbd, 1fbd], [1fbf, 1fc1], [1fcd, 1fcf],
        [1fdd, 1fdf], [1fed, 1fef], [1ffd, 1ffe], [200b, 200f],
        [2018, 2019], [2024, 2024], [2027, 2027], [202a, 202e],
        [2060, 2064], [2066, 206f], [2071, 2071], [207f, 207f],
        [2090, 209c], [20d0, 20f0], [2c7c, 2c7d], [2cef, 2cf1],
        [2d6f, 2d6f], [2d7f, 2d7f], [2de0, 2dff], [2e2f, 2e2f],
        [3005, 3005], [302a, 302d], [3031, 3035], [303b, 303b],
        [3099, 309e], [30fc, 30fe], [a015, a015], [a4f8, a4fd],
        [a60c, a60c], [a66f, a672], [a674, a67d], [a67f, a67f],
        [a69c, a69f], [a6f0, a6f1], [a700, a721], [a770, a770],
        [a788, a78a], [a7f8, a7f9], [a802, a802], [a806, a806],
        [a80b, a80b], [a825, a826], [a82c, a82c], [a8c4, a8c5],
        [a8e0, a8f1], [a8ff, a8ff], [a926, a92d], [a947, a951],
        [a980, a982], [a9b3, a9b3], [a9b6, a9b9], [a9bc, a9bd],
        [a9cf, a9cf], [a9e5, a9e6], [aa29, aa2e], [aa31, aa32],
        [aa35, aa36], [aa43, aa43], [aa4c, aa4c], [aa70, aa70],
        [aa7c, aa7c], [aab0, aab0], [aab2, aab4], [aab7, aab8],
        [aabe, aabf], [aac1, aac1], [aadd, aadd], [aaec, aaed],
        [aaf3, aaf4], [aaf6, aaf6], [ab5b, ab5f], [ab69, ab6b],
        [abe5, abe5], [abe8, abe8], [abed, abed], [fb1e, fb1e],
        [fbb2, fbc1], [fe00, fe0f], [fe13, fe13], [fe20, fe2f],
        [fe52, fe52], [fe55, fe55], [feff, feff], [ff07, ff07],
        [ff0e, ff0e], [ff1a, ff1a], [ff3e, ff3e], [ff40, ff40],
        [ff70, ff70], [ff9e, ff9f], [ffe3, ffe3], [fff9, fffb],
        [101fd, 101fd], [102e0, 102e0], [10376, 1037a], [10a01, 10a03],
        [10a05, 10a06], [10a0c, 10a0f], [10a38, 10a3a], [10a3f, 10a3f],
        [10ae5, 10ae6], [10d24, 10d27], [10eab, 10eac], [10f46, 10f50],
        [11001, 11001], [11038, 11046], [1107f, 11081], [110b3, 110b6],
        [110b9, 110ba], [110bd, 110bd], [110cd, 110cd], [11100, 11102],
        [11127, 1112b], [1112d, 11134], [11173, 11173], [11180, 11181],
        [111b6, 111be], [111c9, 111cc], [111cf, 111cf], [1122f, 11231],
        [11234, 11234], [11236, 11237], [1123e, 1123e], [112df, 112df],
        [112e3, 112ea], [11300, 11301], [1133b, 1133c], [11340, 11340],
        [11366, 1136c], [11370, 11374], [11438, 1143f], [11442, 11444],
        [11446, 11446], [1145e, 1145e], [114b3, 114b8], [114ba, 114ba],
        [114bf, 114c0], [114c2, 114c3], [115b2, 115b5], [115bc, 115bd],
        [115bf, 115c0], [115dc, 115dd], [11633, 1163a], [1163d, 1163d],
        [1163f, 11640], [116ab, 116ab], [116ad, 116ad], [116b0, 116b5],
        [116b7, 116b7], [1171d, 1171f], [11722, 11725], [11727, 1172b],
        [1182f, 11837], [11839, 1183a], [1193b, 1193c], [1193e, 1193e],
        [11943, 11943], [119d4, 119d7], [119da, 119db], [119e0, 119e0],
        [11a01, 11a0a], [11a33, 11a38], [11a3b, 11a3e], [11a47, 11a47],
        [11a51, 11a56], [11a59, 11a5b], [11a8a, 11a96], [11a98, 11a99],
        [11c30, 11c36], [11c38, 11c3d], [11c3f, 11c3f], [11c92, 11ca7],
        [11caa, 11cb0], [11cb2, 11cb3], [11cb5, 11cb6], [11d31, 11d36],
        [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d45], [11d47, 11d47],
        [11d90, 11d91], [11d95, 11d95], [11d97, 11d97], [11ef3, 11ef4],
        [13430, 13438], [16af0, 16af4], [16b30, 16b36], [16b40, 16b43],
        [16f4f, 16f4f], [16f8f, 16f9f], [16fe0, 16fe1], [16fe3, 16fe4],
        [1bc9d, 1bc9e], [1bca0, 1bca3], [1d167, 1d169], [1d173, 1d182],
        [1d185, 1d18b], [1d1aa, 1d1ad], [1d242, 1d244], [1da00, 1da36],
        [1da3b, 1da6c], [1da75, 1da75], [1da84, 1da84], [1da9b, 1da9f],
        [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021],
        [1e023, 1e024], [1e026, 1e02a], [1e130, 1e13d], [1e2ec, 1e2ef],
        [1e8d0, 1e8d6], [1e944, 1e94b], [1f3fb, 1f3ff], [e0001, e0001],
        [e0020, e007f], [e0100, e01ef]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 15},
        {Mixed, 1}, {Full, 5}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 1},
        {Mixed, 2}, {Empty, 2}, {Mixed, 5}, {Empty, 2}, {Mixed, 1},
        {Empty, 1}, {Mixed, 4}, {Empty, 3}, {Mixed, 1}, {Full, 1},
        {Mixed, 21}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 13},
        {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 4},
        {Empty, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 1}, {Empty, 18},
        {Mixed, 1}, {Empty, 29}, {Mixed, 4}, {Empty, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Empty, 6}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 6}, {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 2}, {Mixed, 1},
        {Empty, 13}, {Mixed, 5}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 2}, {Empty, 91}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 3}, {Full, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 14}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Empty, 888}, {Mixed, 1}, {Empty, 38},
        {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 4}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 1},
        {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 2}, {Mixed, 2},
        {Empty, 3}, {Mixed, 1}, {Empty, 632}, {Mixed, 1}, {Empty, 4},
        {Mixed, 2}, {Empty, 17}, {Mixed, 3}, {Empty, 4}, {Mixed, 6},
        {Empty, 2}, {Mixed, 1}, {Empty, 15}, {Mixed, 1}, {Empty, 7},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 52}, {Mixed, 2},
        {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
        {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 7},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
        {Mixed, 1}, {Empty, 4}, {Mixed, 6}, {Empty, 5}, {Mixed, 2},
        {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 3},
        {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
        {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
        {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 169}, {Mixed, 1},
        {Empty, 437}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 31},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Empty, 612}, {Mixed, 2}, {Empty, 165}, {Mixed, 3}, {Empty, 4},
        {Mixed, 1}, {Empty, 61}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Empty, 42}, {Mixed, 2}, {Empty, 7}, {Mixed, 1},
        {Empty, 13}, {Mixed, 1}, {Empty, 46}, {Mixed, 1}, {Empty, 3},
        {Mixed, 1}, {Empty, 84}, {Mixed, 1}, {Empty, 24672}, {Mixed, 1},
        {Full, 3}, {Empty, 4}, {Full, 7}, {Mixed, 1}, {Empty, 6128}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x04004080, 0x40000000, 0x00000001, 0x0190a100, 0xffff0000,
        0x0430ffff, 0x000000b0, 0x000003f8, 0x82000000, 0xfffe0000,
        0xbfffffff, 0x000000b6, 0x00100000, 0x17ff003f, 0xfffff801,
        0x00010000, 0xbfc00000, 0x00003dff, 0x00028000, 0xffff0000,
        0x000007ff, 0x0001ffc0, 0x243ff800, 0xffc00000, 0x00003fff,
        0x0e000000, 0xfff80000, 0x00000007, 0x14000000, 0x00fe21fe,
        0x0002000c, 0x00000002, 0x10000000, 0x0000201e, 0x4000000c,
        0x00000006, 0x10000000, 0x00023986, 0x00230000, 0x00000006,
        0x10000000, 0x000021be, 0xfc00000c, 0x00000002, 0x90000000,
        0x0060201e, 0x0000000c, 0x00000004, 0x00002001, 0x00000011,
        0xc0000000, 0x00603dc1, 0x0000000c, 0x00000002, 0x90000000,
        0x00003040, 0x0000000c, 0x00000003, 0x18000000, 0x0000201e,
        0x0000000c, 0x00000002, 0x005c0400, 0x07f20000, 0x00007fc0,
        0x1ff20000, 0x00003f40, 0x03000000, 0x02a00000, 0x7ffe0000,
        0xfeffe0df, 0x1fffffff, 0x00000040, 0x66fde000, 0xc3000000,
        0x001e0001, 0x20002064, 0x10000000, 0xe0000000, 0x001c0000,
        0x001c0000, 0x000c0000, 0x000c0000, 0x3fb00000, 0x208ffe40,
        0x00007800, 0x00000008, 0x00000060, 0x00000200, 0x0e040187,
        0x09800000, 0x7f400000, 0x9ff81fe5, 0xffff0080, 0x00000001,
        0x0000000f, 0x17d00000, 0x00000004, 0x000ff800, 0x00000003,
        0x00003b3c, 0x0003a340, 0x00cff000, 0x3f000000, 0xfff70000,
        0x031021fd, 0xfffff000, 0x010007ff, 0xf8000000, 0xfbffffff,
        0xa0000000, 0xe000e003, 0x6000e000, 0x0300f800, 0x00007c90,
        0x8002ffdf, 0x1fff0000, 0xffff0000, 0x0001ffff, 0x30000000,
        0x00038000, 0x80008000, 0x00008000, 0x00000020, 0x083e3c00,
        0x7e000000, 0x70000000, 0x00200000, 0x3f000000, 0x00001000,
        0xbff78000, 0xf0000000, 0x00030000, 0x00000003, 0x00010000,
        0x00000700, 0x03000000, 0x00000844, 0x00001060, 0x00000030,
        0x8003ffff, 0x00003fc0, 0x0003ff80, 0x00000007, 0x33c80000,
        0x00008000, 0x00000060, 0x00667e00, 0x00001008, 0x10010000,
        0xc19d0000, 0x20000002, 0x00583000, 0xf8000000, 0x00000e00,
        0x00002120, 0x40000000, 0xfffc0000, 0x00000003, 0x0008ffff,
        0x0000ffff, 0x00240000, 0x80000000, 0x04004080, 0x40000000,
        0x00000001, 0x00010000, 0xc0000000, 0x0e000008, 0x20000000,
        0x00000001, 0x07c00000, 0x0000f06e, 0x87000000, 0x00000060,
        0x000000f0, 0x00001800, 0x0001ffc0, 0x00000002, 0xff000000,
        0x0000007f, 0x80000000, 0x00000003, 0x26780000, 0x00002000,
        0x00000007, 0x001fef80, 0x00080000, 0x00000003, 0x7fc00000,
        0x00009e00, 0x40d38000, 0x80000000, 0x000007f8, 0x00000003,
        0x18000000, 0x00000001, 0x001f1fc0, 0xff000000, 0x4000005c,
        0x85f80000, 0x0000000d, 0xb03c0000, 0x30000001, 0xa7f80000,
        0x00000001, 0x00bf2800, 0xe0000000, 0x00000fbc, 0x06ff8000,
        0x58000000, 0x00000008, 0x0cf00000, 0x00000001, 0x000007fe,
        0x79f80000, 0x0e7e0080, 0x037ffc00, 0xbf7f0000, 0xfffc0000,
        0x006dfcff, 0xb47e0000, 0x000000bf, 0x00a30000, 0x00180000,
        0x01ff0000, 0x001f0000, 0x007f0000, 0x0000000f, 0x00008000,
        0xffff8000, 0x0000001b, 0x60000000, 0x0000000f, 0xfff80380,
        0x00000fe7, 0x00003c00, 0x0000001c, 0xf87fffff, 0x00201fff,
        0xf8000010, 0x0000fffe, 0xf9ffff7f, 0x000007db, 0x3fff0000,
        0x0000f000, 0x007f0000, 0x00000ff0, 0xf8000000, 0x00000002,
        0x0000ffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 240, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 251, 0};

        static BinaryPropertyObject property_object{CI, std::move(codepoint_set)};
    }
PropertyObject * get_CI_PropertyObject() {  return & CI_ns::property_object; }
    namespace CWCF_ns {
        /** Code Point Ranges for CWCF
        [0041, 005a], [00b5, 00b5], [00c0, 00d6], [00d8, 00df],
        [0100, 0100], [0102, 0102], [0104, 0104], [0106, 0106],
        [0108, 0108], [010a, 010a], [010c, 010c], [010e, 010e],
        [0110, 0110], [0112, 0112], [0114, 0114], [0116, 0116],
        [0118, 0118], [011a, 011a], [011c, 011c], [011e, 011e],
        [0120, 0120], [0122, 0122], [0124, 0124], [0126, 0126],
        [0128, 0128], [012a, 012a], [012c, 012c], [012e, 012e],
        [0130, 0130], [0132, 0132], [0134, 0134], [0136, 0136],
        [0139, 0139], [013b, 013b], [013d, 013d], [013f, 013f],
        [0141, 0141], [0143, 0143], [0145, 0145], [0147, 0147],
        [0149, 014a], [014c, 014c], [014e, 014e], [0150, 0150],
        [0152, 0152], [0154, 0154], [0156, 0156], [0158, 0158],
        [015a, 015a], [015c, 015c], [015e, 015e], [0160, 0160],
        [0162, 0162], [0164, 0164], [0166, 0166], [0168, 0168],
        [016a, 016a], [016c, 016c], [016e, 016e], [0170, 0170],
        [0172, 0172], [0174, 0174], [0176, 0176], [0178, 0179],
        [017b, 017b], [017d, 017d], [017f, 017f], [0181, 0182],
        [0184, 0184], [0186, 0187], [0189, 018b], [018e, 0191],
        [0193, 0194], [0196, 0198], [019c, 019d], [019f, 01a0],
        [01a2, 01a2], [01a4, 01a4], [01a6, 01a7], [01a9, 01a9],
        [01ac, 01ac], [01ae, 01af], [01b1, 01b3], [01b5, 01b5],
        [01b7, 01b8], [01bc, 01bc], [01c4, 01c5], [01c7, 01c8],
        [01ca, 01cb], [01cd, 01cd], [01cf, 01cf], [01d1, 01d1],
        [01d3, 01d3], [01d5, 01d5], [01d7, 01d7], [01d9, 01d9],
        [01db, 01db], [01de, 01de], [01e0, 01e0], [01e2, 01e2],
        [01e4, 01e4], [01e6, 01e6], [01e8, 01e8], [01ea, 01ea],
        [01ec, 01ec], [01ee, 01ee], [01f1, 01f2], [01f4, 01f4],
        [01f6, 01f8], [01fa, 01fa], [01fc, 01fc], [01fe, 01fe],
        [0200, 0200], [0202, 0202], [0204, 0204], [0206, 0206],
        [0208, 0208], [020a, 020a], [020c, 020c], [020e, 020e],
        [0210, 0210], [0212, 0212], [0214, 0214], [0216, 0216],
        [0218, 0218], [021a, 021a], [021c, 021c], [021e, 021e],
        [0220, 0220], [0222, 0222], [0224, 0224], [0226, 0226],
        [0228, 0228], [022a, 022a], [022c, 022c], [022e, 022e],
        [0230, 0230], [0232, 0232], [023a, 023b], [023d, 023e],
        [0241, 0241], [0243, 0246], [0248, 0248], [024a, 024a],
        [024c, 024c], [024e, 024e], [0345, 0345], [0370, 0370],
        [0372, 0372], [0376, 0376], [037f, 037f], [0386, 0386],
        [0388, 038a], [038c, 038c], [038e, 038f], [0391, 03a1],
        [03a3, 03ab], [03c2, 03c2], [03cf, 03d1], [03d5, 03d6],
        [03d8, 03d8], [03da, 03da], [03dc, 03dc], [03de, 03de],
        [03e0, 03e0], [03e2, 03e2], [03e4, 03e4], [03e6, 03e6],
        [03e8, 03e8], [03ea, 03ea], [03ec, 03ec], [03ee, 03ee],
        [03f0, 03f1], [03f4, 03f5], [03f7, 03f7], [03f9, 03fa],
        [03fd, 042f], [0460, 0460], [0462, 0462], [0464, 0464],
        [0466, 0466], [0468, 0468], [046a, 046a], [046c, 046c],
        [046e, 046e], [0470, 0470], [0472, 0472], [0474, 0474],
        [0476, 0476], [0478, 0478], [047a, 047a], [047c, 047c],
        [047e, 047e], [0480, 0480], [048a, 048a], [048c, 048c],
        [048e, 048e], [0490, 0490], [0492, 0492], [0494, 0494],
        [0496, 0496], [0498, 0498], [049a, 049a], [049c, 049c],
        [049e, 049e], [04a0, 04a0], [04a2, 04a2], [04a4, 04a4],
        [04a6, 04a6], [04a8, 04a8], [04aa, 04aa], [04ac, 04ac],
        [04ae, 04ae], [04b0, 04b0], [04b2, 04b2], [04b4, 04b4],
        [04b6, 04b6], [04b8, 04b8], [04ba, 04ba], [04bc, 04bc],
        [04be, 04be], [04c0, 04c1], [04c3, 04c3], [04c5, 04c5],
        [04c7, 04c7], [04c9, 04c9], [04cb, 04cb], [04cd, 04cd],
        [04d0, 04d0], [04d2, 04d2], [04d4, 04d4], [04d6, 04d6],
        [04d8, 04d8], [04da, 04da], [04dc, 04dc], [04de, 04de],
        [04e0, 04e0], [04e2, 04e2], [04e4, 04e4], [04e6, 04e6],
        [04e8, 04e8], [04ea, 04ea], [04ec, 04ec], [04ee, 04ee],
        [04f0, 04f0], [04f2, 04f2], [04f4, 04f4], [04f6, 04f6],
        [04f8, 04f8], [04fa, 04fa], [04fc, 04fc], [04fe, 04fe],
        [0500, 0500], [0502, 0502], [0504, 0504], [0506, 0506],
        [0508, 0508], [050a, 050a], [050c, 050c], [050e, 050e],
        [0510, 0510], [0512, 0512], [0514, 0514], [0516, 0516],
        [0518, 0518], [051a, 051a], [051c, 051c], [051e, 051e],
        [0520, 0520], [0522, 0522], [0524, 0524], [0526, 0526],
        [0528, 0528], [052a, 052a], [052c, 052c], [052e, 052e],
        [0531, 0556], [0587, 0587], [10a0, 10c5], [10c7, 10c7],
        [10cd, 10cd], [13f8, 13fd], [1c80, 1c88], [1c90, 1cba],
        [1cbd, 1cbf], [1e00, 1e00], [1e02, 1e02], [1e04, 1e04],
        [1e06, 1e06], [1e08, 1e08], [1e0a, 1e0a], [1e0c, 1e0c],
        [1e0e, 1e0e], [1e10, 1e10], [1e12, 1e12], [1e14, 1e14],
        [1e16, 1e16], [1e18, 1e18], [1e1a, 1e1a], [1e1c, 1e1c],
        [1e1e, 1e1e], [1e20, 1e20], [1e22, 1e22], [1e24, 1e24],
        [1e26, 1e26], [1e28, 1e28], [1e2a, 1e2a], [1e2c, 1e2c],
        [1e2e, 1e2e], [1e30, 1e30], [1e32, 1e32], [1e34, 1e34],
        [1e36, 1e36], [1e38, 1e38], [1e3a, 1e3a], [1e3c, 1e3c],
        [1e3e, 1e3e], [1e40, 1e40], [1e42, 1e42], [1e44, 1e44],
        [1e46, 1e46], [1e48, 1e48], [1e4a, 1e4a], [1e4c, 1e4c],
        [1e4e, 1e4e], [1e50, 1e50], [1e52, 1e52], [1e54, 1e54],
        [1e56, 1e56], [1e58, 1e58], [1e5a, 1e5a], [1e5c, 1e5c],
        [1e5e, 1e5e], [1e60, 1e60], [1e62, 1e62], [1e64, 1e64],
        [1e66, 1e66], [1e68, 1e68], [1e6a, 1e6a], [1e6c, 1e6c],
        [1e6e, 1e6e], [1e70, 1e70], [1e72, 1e72], [1e74, 1e74],
        [1e76, 1e76], [1e78, 1e78], [1e7a, 1e7a], [1e7c, 1e7c],
        [1e7e, 1e7e], [1e80, 1e80], [1e82, 1e82], [1e84, 1e84],
        [1e86, 1e86], [1e88, 1e88], [1e8a, 1e8a], [1e8c, 1e8c],
        [1e8e, 1e8e], [1e90, 1e90], [1e92, 1e92], [1e94, 1e94],
        [1e9a, 1e9b], [1e9e, 1e9e], [1ea0, 1ea0], [1ea2, 1ea2],
        [1ea4, 1ea4], [1ea6, 1ea6], [1ea8, 1ea8], [1eaa, 1eaa],
        [1eac, 1eac], [1eae, 1eae], [1eb0, 1eb0], [1eb2, 1eb2],
        [1eb4, 1eb4], [1eb6, 1eb6], [1eb8, 1eb8], [1eba, 1eba],
        [1ebc, 1ebc], [1ebe, 1ebe], [1ec0, 1ec0], [1ec2, 1ec2],
        [1ec4, 1ec4], [1ec6, 1ec6], [1ec8, 1ec8], [1eca, 1eca],
        [1ecc, 1ecc], [1ece, 1ece], [1ed0, 1ed0], [1ed2, 1ed2],
        [1ed4, 1ed4], [1ed6, 1ed6], [1ed8, 1ed8], [1eda, 1eda],
        [1edc, 1edc], [1ede, 1ede], [1ee0, 1ee0], [1ee2, 1ee2],
        [1ee4, 1ee4], [1ee6, 1ee6], [1ee8, 1ee8], [1eea, 1eea],
        [1eec, 1eec], [1eee, 1eee], [1ef0, 1ef0], [1ef2, 1ef2],
        [1ef4, 1ef4], [1ef6, 1ef6], [1ef8, 1ef8], [1efa, 1efa],
        [1efc, 1efc], [1efe, 1efe], [1f08, 1f0f], [1f18, 1f1d],
        [1f28, 1f2f], [1f38, 1f3f], [1f48, 1f4d], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f5f], [1f68, 1f6f],
        [1f80, 1faf], [1fb2, 1fb4], [1fb7, 1fbc], [1fc2, 1fc4],
        [1fc7, 1fcc], [1fd8, 1fdb], [1fe8, 1fec], [1ff2, 1ff4],
        [1ff7, 1ffc], [2126, 2126], [212a, 212b], [2132, 2132],
        [2160, 216f], [2183, 2183], [24b6, 24cf], [2c00, 2c2e],
        [2c60, 2c60], [2c62, 2c64], [2c67, 2c67], [2c69, 2c69],
        [2c6b, 2c6b], [2c6d, 2c70], [2c72, 2c72], [2c75, 2c75],
        [2c7e, 2c80], [2c82, 2c82], [2c84, 2c84], [2c86, 2c86],
        [2c88, 2c88], [2c8a, 2c8a], [2c8c, 2c8c], [2c8e, 2c8e],
        [2c90, 2c90], [2c92, 2c92], [2c94, 2c94], [2c96, 2c96],
        [2c98, 2c98], [2c9a, 2c9a], [2c9c, 2c9c], [2c9e, 2c9e],
        [2ca0, 2ca0], [2ca2, 2ca2], [2ca4, 2ca4], [2ca6, 2ca6],
        [2ca8, 2ca8], [2caa, 2caa], [2cac, 2cac], [2cae, 2cae],
        [2cb0, 2cb0], [2cb2, 2cb2], [2cb4, 2cb4], [2cb6, 2cb6],
        [2cb8, 2cb8], [2cba, 2cba], [2cbc, 2cbc], [2cbe, 2cbe],
        [2cc0, 2cc0], [2cc2, 2cc2], [2cc4, 2cc4], [2cc6, 2cc6],
        [2cc8, 2cc8], [2cca, 2cca], [2ccc, 2ccc], [2cce, 2cce],
        [2cd0, 2cd0], [2cd2, 2cd2], [2cd4, 2cd4], [2cd6, 2cd6],
        [2cd8, 2cd8], [2cda, 2cda], [2cdc, 2cdc], [2cde, 2cde],
        [2ce0, 2ce0], [2ce2, 2ce2], [2ceb, 2ceb], [2ced, 2ced],
        [2cf2, 2cf2], [a640, a640], [a642, a642], [a644, a644],
        [a646, a646], [a648, a648], [a64a, a64a], [a64c, a64c],
        [a64e, a64e], [a650, a650], [a652, a652], [a654, a654],
        [a656, a656], [a658, a658], [a65a, a65a], [a65c, a65c],
        [a65e, a65e], [a660, a660], [a662, a662], [a664, a664],
        [a666, a666], [a668, a668], [a66a, a66a], [a66c, a66c],
        [a680, a680], [a682, a682], [a684, a684], [a686, a686],
        [a688, a688], [a68a, a68a], [a68c, a68c], [a68e, a68e],
        [a690, a690], [a692, a692], [a694, a694], [a696, a696],
        [a698, a698], [a69a, a69a], [a722, a722], [a724, a724],
        [a726, a726], [a728, a728], [a72a, a72a], [a72c, a72c],
        [a72e, a72e], [a732, a732], [a734, a734], [a736, a736],
        [a738, a738], [a73a, a73a], [a73c, a73c], [a73e, a73e],
        [a740, a740], [a742, a742], [a744, a744], [a746, a746],
        [a748, a748], [a74a, a74a], [a74c, a74c], [a74e, a74e],
        [a750, a750], [a752, a752], [a754, a754], [a756, a756],
        [a758, a758], [a75a, a75a], [a75c, a75c], [a75e, a75e],
        [a760, a760], [a762, a762], [a764, a764], [a766, a766],
        [a768, a768], [a76a, a76a], [a76c, a76c], [a76e, a76e],
        [a779, a779], [a77b, a77b], [a77d, a77e], [a780, a780],
        [a782, a782], [a784, a784], [a786, a786], [a78b, a78b],
        [a78d, a78d], [a790, a790], [a792, a792], [a796, a796],
        [a798, a798], [a79a, a79a], [a79c, a79c], [a79e, a79e],
        [a7a0, a7a0], [a7a2, a7a2], [a7a4, a7a4], [a7a6, a7a6],
        [a7a8, a7a8], [a7aa, a7ae], [a7b0, a7b4], [a7b6, a7b6],
        [a7b8, a7b8], [a7ba, a7ba], [a7bc, a7bc], [a7be, a7be],
        [a7c2, a7c2], [a7c4, a7c7], [a7c9, a7c9], [a7f5, a7f5],
        [ab70, abbf], [fb00, fb06], [fb13, fb17], [ff21, ff3a],
        [10400, 10427], [104b0, 104d3], [10c80, 10cb2], [118a0, 118bf],
        [16e40, 16e5f], [1e900, 1e921]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1},
        {Mixed, 11}, {Empty, 7}, {Mixed, 6}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 8}, {Empty, 1}, {Mixed, 1}, {Empty, 88},
        {Full, 1}, {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Empty, 68},
        {Mixed, 2}, {Empty, 10}, {Mixed, 12}, {Full, 1}, {Mixed, 3},
        {Empty, 9}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 24},
        {Mixed, 2}, {Empty, 57}, {Full, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 5}, {Empty, 970}, {Mixed, 3}, {Empty, 4}, {Mixed, 7},
        {Empty, 27}, {Mixed, 1}, {Full, 2}, {Empty, 634}, {Mixed, 1},
        {Empty, 32}, {Mixed, 1}, {Empty, 38}, {Full, 1}, {Mixed, 1},
        {Empty, 3}, {Mixed, 2}, {Empty, 61}, {Full, 1}, {Mixed, 1},
        {Empty, 95}, {Full, 1}, {Empty, 684}, {Full, 1}, {Empty, 981},
        {Full, 1}, {Mixed, 1}, {Empty, 30902}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x00200000, 0xff7fffff, 0x55555555, 0xaa555555,
        0x555556aa, 0xab555555, 0xb1dbced6, 0x11aed2d5, 0x4aaaadb0,
        0x55d65555, 0x55555555, 0x6c055555, 0x0000557a, 0x00000020,
        0x80450000, 0xfffed740, 0x00000ffb, 0x55638004, 0xe6b35555,
        0x0000ffff, 0x55555555, 0x55555401, 0x55555555, 0x55552aab,
        0x55555555, 0x55555555, 0xfffe5555, 0x007fffff, 0x00000080,
        0x000020bf, 0x3f000000, 0xffff01ff, 0xe7ffffff, 0x55555555,
        0x55555555, 0x55555555, 0x55555555, 0x4c155555, 0x55555555,
        0x55555555, 0x55555555, 0x3f00ff00, 0xff00ff00, 0xaa003f00,
        0x0000ff00, 0x1f9cffff, 0x0f001f9c, 0x1f9c1f00, 0x00040c40,
        0x0000ffff, 0x00000008, 0xffc00000, 0x0000ffff, 0x00007fff,
        0xc025ea9d, 0x55555555, 0x55555555, 0x55555555, 0x00042805,
        0x55555555, 0x00001555, 0x05555555, 0x55545554, 0x55555555,
        0x6a005555, 0x55452855, 0x555f7d55, 0x000002f4, 0x00200000,
        0xffff0000, 0x00f8007f, 0x07fffffe, 0x000000ff, 0xffff0000,
        0x000fffff, 0x0007ffff, 0x00000003};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 63, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 78, 0};

        static BinaryPropertyObject property_object{CWCF, std::move(codepoint_set)};
    }
PropertyObject * get_CWCF_PropertyObject() {  return & CWCF_ns::property_object; }
    namespace CWCM_ns {
        /** Code Point Ranges for CWCM
        [0041, 005a], [0061, 007a], [00b5, 00b5], [00c0, 00d6],
        [00d8, 00f6], [00f8, 0137], [0139, 018c], [018e, 019a],
        [019c, 01a9], [01ac, 01b9], [01bc, 01bd], [01bf, 01bf],
        [01c4, 0220], [0222, 0233], [023a, 0254], [0256, 0257],
        [0259, 0259], [025b, 025c], [0260, 0261], [0263, 0263],
        [0265, 0266], [0268, 026c], [026f, 026f], [0271, 0272],
        [0275, 0275], [027d, 027d], [0280, 0280], [0282, 0283],
        [0287, 028c], [0292, 0292], [029d, 029e], [0345, 0345],
        [0370, 0373], [0376, 0377], [037b, 037d], [037f, 037f],
        [0386, 0386], [0388, 038a], [038c, 038c], [038e, 03a1],
        [03a3, 03d1], [03d5, 03f5], [03f7, 03fb], [03fd, 0481],
        [048a, 052f], [0531, 0556], [0561, 0587], [10a0, 10c5],
        [10c7, 10c7], [10cd, 10cd], [10d0, 10fa], [10fd, 10ff],
        [13a0, 13f5], [13f8, 13fd], [1c80, 1c88], [1c90, 1cba],
        [1cbd, 1cbf], [1d79, 1d79], [1d7d, 1d7d], [1d8e, 1d8e],
        [1e00, 1e9b], [1e9e, 1e9e], [1ea0, 1f15], [1f18, 1f1d],
        [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d], [1f80, 1fb4],
        [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fcc],
        [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec], [1ff2, 1ff4],
        [1ff6, 1ffc], [2126, 2126], [212a, 212b], [2132, 2132],
        [214e, 214e], [2160, 217f], [2183, 2184], [24b6, 24e9],
        [2c00, 2c2e], [2c30, 2c5e], [2c60, 2c70], [2c72, 2c73],
        [2c75, 2c76], [2c7e, 2ce3], [2ceb, 2cee], [2cf2, 2cf3],
        [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d], [a640, a66d],
        [a680, a69b], [a722, a72f], [a732, a76f], [a779, a787],
        [a78b, a78d], [a790, a794], [a796, a7ae], [a7b0, a7bf],
        [a7c2, a7ca], [a7f5, a7f6], [ab53, ab53], [ab70, abbf],
        [fb00, fb06], [fb13, fb17], [ff21, ff3a], [ff41, ff5a],
        [10400, 1044f], [104b0, 104d3], [104d8, 104fb], [10c80, 10cb2],
        [10cc0, 10cf2], [118a0, 118df], [16e40, 16e7f], [1e900, 1e943]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 5}, {Mixed, 6}, {Full, 4}, {Mixed, 1}, {Full, 4},
        {Mixed, 4}, {Empty, 88}, {Full, 1}, {Mixed, 2}, {Empty, 21},
        {Full, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 2}, {Empty, 5},
        {Mixed, 2}, {Empty, 3}, {Full, 4}, {Mixed, 1}, {Full, 3},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Empty, 9}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Empty, 24},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 56}, {Full, 1},
        {Mixed, 3}, {Full, 3}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 968}, {Full, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
        {Full, 1}, {Mixed, 5}, {Empty, 26}, {Mixed, 2}, {Full, 2},
        {Empty, 634}, {Mixed, 1}, {Empty, 32}, {Mixed, 2}, {Empty, 37},
        {Full, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 60},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 93},
        {Full, 2}, {Empty, 683}, {Full, 2}, {Empty, 980}, {Full, 2},
        {Mixed, 1}, {Empty, 30901}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x07fffffe, 0x00200000, 0xff7fffff, 0xff7fffff,
        0xfeffffff, 0xf7ffdfff, 0xb3fff3ff, 0xfffffff0, 0xfc0ffffd,
        0x1adfffff, 0x20269f6b, 0x60041f8d, 0x00000020, 0xb8cf0000,
        0xffffd740, 0xfffffffb, 0xffe3ffff, 0xefbfffff, 0xfffffc03,
        0xfffeffff, 0x007fffff, 0xfffffffe, 0x000000ff, 0xffff20bf,
        0xe7ffffff, 0x3f3fffff, 0xffff01ff, 0xe7ffffff, 0x22000000,
        0x00004000, 0x4fffffff, 0x3f3fffff, 0xaaff3f3f, 0x3fffffff,
        0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x00040c40, 0x00004000,
        0x00000018, 0xffc00000, 0x000003ff, 0xffff7fff, 0x7fffffff,
        0xc06dffff, 0x000c780f, 0x000020bf, 0x00003fff, 0x0fffffff,
        0xfffcfffc, 0xfe00ffff, 0xffdf38ff, 0xffff7fff, 0x000007fc,
        0x00600000, 0x00080000, 0xffff0000, 0x00f8007f, 0x07fffffe,
        0x07fffffe, 0x0000ffff, 0xffff0000, 0xff0fffff, 0x0fffffff,
        0x0007ffff, 0x0007ffff, 0x0000000f};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 82, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 68, 0};

        static BinaryPropertyObject property_object{CWCM, std::move(codepoint_set)};
    }
PropertyObject * get_CWCM_PropertyObject() {  return & CWCM_ns::property_object; }
    namespace CWL_ns {
        /** Code Point Ranges for CWL
        [0041, 005a], [00c0, 00d6], [00d8, 00de], [0100, 0100],
        [0102, 0102], [0104, 0104], [0106, 0106], [0108, 0108],
        [010a, 010a], [010c, 010c], [010e, 010e], [0110, 0110],
        [0112, 0112], [0114, 0114], [0116, 0116], [0118, 0118],
        [011a, 011a], [011c, 011c], [011e, 011e], [0120, 0120],
        [0122, 0122], [0124, 0124], [0126, 0126], [0128, 0128],
        [012a, 012a], [012c, 012c], [012e, 012e], [0130, 0130],
        [0132, 0132], [0134, 0134], [0136, 0136], [0139, 0139],
        [013b, 013b], [013d, 013d], [013f, 013f], [0141, 0141],
        [0143, 0143], [0145, 0145], [0147, 0147], [014a, 014a],
        [014c, 014c], [014e, 014e], [0150, 0150], [0152, 0152],
        [0154, 0154], [0156, 0156], [0158, 0158], [015a, 015a],
        [015c, 015c], [015e, 015e], [0160, 0160], [0162, 0162],
        [0164, 0164], [0166, 0166], [0168, 0168], [016a, 016a],
        [016c, 016c], [016e, 016e], [0170, 0170], [0172, 0172],
        [0174, 0174], [0176, 0176], [0178, 0179], [017b, 017b],
        [017d, 017d], [0181, 0182], [0184, 0184], [0186, 0187],
        [0189, 018b], [018e, 0191], [0193, 0194], [0196, 0198],
        [019c, 019d], [019f, 01a0], [01a2, 01a2], [01a4, 01a4],
        [01a6, 01a7], [01a9, 01a9], [01ac, 01ac], [01ae, 01af],
        [01b1, 01b3], [01b5, 01b5], [01b7, 01b8], [01bc, 01bc],
        [01c4, 01c5], [01c7, 01c8], [01ca, 01cb], [01cd, 01cd],
        [01cf, 01cf], [01d1, 01d1], [01d3, 01d3], [01d5, 01d5],
        [01d7, 01d7], [01d9, 01d9], [01db, 01db], [01de, 01de],
        [01e0, 01e0], [01e2, 01e2], [01e4, 01e4], [01e6, 01e6],
        [01e8, 01e8], [01ea, 01ea], [01ec, 01ec], [01ee, 01ee],
        [01f1, 01f2], [01f4, 01f4], [01f6, 01f8], [01fa, 01fa],
        [01fc, 01fc], [01fe, 01fe], [0200, 0200], [0202, 0202],
        [0204, 0204], [0206, 0206], [0208, 0208], [020a, 020a],
        [020c, 020c], [020e, 020e], [0210, 0210], [0212, 0212],
        [0214, 0214], [0216, 0216], [0218, 0218], [021a, 021a],
        [021c, 021c], [021e, 021e], [0220, 0220], [0222, 0222],
        [0224, 0224], [0226, 0226], [0228, 0228], [022a, 022a],
        [022c, 022c], [022e, 022e], [0230, 0230], [0232, 0232],
        [023a, 023b], [023d, 023e], [0241, 0241], [0243, 0246],
        [0248, 0248], [024a, 024a], [024c, 024c], [024e, 024e],
        [0370, 0370], [0372, 0372], [0376, 0376], [037f, 037f],
        [0386, 0386], [0388, 038a], [038c, 038c], [038e, 038f],
        [0391, 03a1], [03a3, 03ab], [03cf, 03cf], [03d8, 03d8],
        [03da, 03da], [03dc, 03dc], [03de, 03de], [03e0, 03e0],
        [03e2, 03e2], [03e4, 03e4], [03e6, 03e6], [03e8, 03e8],
        [03ea, 03ea], [03ec, 03ec], [03ee, 03ee], [03f4, 03f4],
        [03f7, 03f7], [03f9, 03fa], [03fd, 042f], [0460, 0460],
        [0462, 0462], [0464, 0464], [0466, 0466], [0468, 0468],
        [046a, 046a], [046c, 046c], [046e, 046e], [0470, 0470],
        [0472, 0472], [0474, 0474], [0476, 0476], [0478, 0478],
        [047a, 047a], [047c, 047c], [047e, 047e], [0480, 0480],
        [048a, 048a], [048c, 048c], [048e, 048e], [0490, 0490],
        [0492, 0492], [0494, 0494], [0496, 0496], [0498, 0498],
        [049a, 049a], [049c, 049c], [049e, 049e], [04a0, 04a0],
        [04a2, 04a2], [04a4, 04a4], [04a6, 04a6], [04a8, 04a8],
        [04aa, 04aa], [04ac, 04ac], [04ae, 04ae], [04b0, 04b0],
        [04b2, 04b2], [04b4, 04b4], [04b6, 04b6], [04b8, 04b8],
        [04ba, 04ba], [04bc, 04bc], [04be, 04be], [04c0, 04c1],
        [04c3, 04c3], [04c5, 04c5], [04c7, 04c7], [04c9, 04c9],
        [04cb, 04cb], [04cd, 04cd], [04d0, 04d0], [04d2, 04d2],
        [04d4, 04d4], [04d6, 04d6], [04d8, 04d8], [04da, 04da],
        [04dc, 04dc], [04de, 04de], [04e0, 04e0], [04e2, 04e2],
        [04e4, 04e4], [04e6, 04e6], [04e8, 04e8], [04ea, 04ea],
        [04ec, 04ec], [04ee, 04ee], [04f0, 04f0], [04f2, 04f2],
        [04f4, 04f4], [04f6, 04f6], [04f8, 04f8], [04fa, 04fa],
        [04fc, 04fc], [04fe, 04fe], [0500, 0500], [0502, 0502],
        [0504, 0504], [0506, 0506], [0508, 0508], [050a, 050a],
        [050c, 050c], [050e, 050e], [0510, 0510], [0512, 0512],
        [0514, 0514], [0516, 0516], [0518, 0518], [051a, 051a],
        [051c, 051c], [051e, 051e], [0520, 0520], [0522, 0522],
        [0524, 0524], [0526, 0526], [0528, 0528], [052a, 052a],
        [052c, 052c], [052e, 052e], [0531, 0556], [10a0, 10c5],
        [10c7, 10c7], [10cd, 10cd], [13a0, 13f5], [1c90, 1cba],
        [1cbd, 1cbf], [1e00, 1e00], [1e02, 1e02], [1e04, 1e04],
        [1e06, 1e06], [1e08, 1e08], [1e0a, 1e0a], [1e0c, 1e0c],
        [1e0e, 1e0e], [1e10, 1e10], [1e12, 1e12], [1e14, 1e14],
        [1e16, 1e16], [1e18, 1e18], [1e1a, 1e1a], [1e1c, 1e1c],
        [1e1e, 1e1e], [1e20, 1e20], [1e22, 1e22], [1e24, 1e24],
        [1e26, 1e26], [1e28, 1e28], [1e2a, 1e2a], [1e2c, 1e2c],
        [1e2e, 1e2e], [1e30, 1e30], [1e32, 1e32], [1e34, 1e34],
        [1e36, 1e36], [1e38, 1e38], [1e3a, 1e3a], [1e3c, 1e3c],
        [1e3e, 1e3e], [1e40, 1e40], [1e42, 1e42], [1e44, 1e44],
        [1e46, 1e46], [1e48, 1e48], [1e4a, 1e4a], [1e4c, 1e4c],
        [1e4e, 1e4e], [1e50, 1e50], [1e52, 1e52], [1e54, 1e54],
        [1e56, 1e56], [1e58, 1e58], [1e5a, 1e5a], [1e5c, 1e5c],
        [1e5e, 1e5e], [1e60, 1e60], [1e62, 1e62], [1e64, 1e64],
        [1e66, 1e66], [1e68, 1e68], [1e6a, 1e6a], [1e6c, 1e6c],
        [1e6e, 1e6e], [1e70, 1e70], [1e72, 1e72], [1e74, 1e74],
        [1e76, 1e76], [1e78, 1e78], [1e7a, 1e7a], [1e7c, 1e7c],
        [1e7e, 1e7e], [1e80, 1e80], [1e82, 1e82], [1e84, 1e84],
        [1e86, 1e86], [1e88, 1e88], [1e8a, 1e8a], [1e8c, 1e8c],
        [1e8e, 1e8e], [1e90, 1e90], [1e92, 1e92], [1e94, 1e94],
        [1e9e, 1e9e], [1ea0, 1ea0], [1ea2, 1ea2], [1ea4, 1ea4],
        [1ea6, 1ea6], [1ea8, 1ea8], [1eaa, 1eaa], [1eac, 1eac],
        [1eae, 1eae], [1eb0, 1eb0], [1eb2, 1eb2], [1eb4, 1eb4],
        [1eb6, 1eb6], [1eb8, 1eb8], [1eba, 1eba], [1ebc, 1ebc],
        [1ebe, 1ebe], [1ec0, 1ec0], [1ec2, 1ec2], [1ec4, 1ec4],
        [1ec6, 1ec6], [1ec8, 1ec8], [1eca, 1eca], [1ecc, 1ecc],
        [1ece, 1ece], [1ed0, 1ed0], [1ed2, 1ed2], [1ed4, 1ed4],
        [1ed6, 1ed6], [1ed8, 1ed8], [1eda, 1eda], [1edc, 1edc],
        [1ede, 1ede], [1ee0, 1ee0], [1ee2, 1ee2], [1ee4, 1ee4],
        [1ee6, 1ee6], [1ee8, 1ee8], [1eea, 1eea], [1eec, 1eec],
        [1eee, 1eee], [1ef0, 1ef0], [1ef2, 1ef2], [1ef4, 1ef4],
        [1ef6, 1ef6], [1ef8, 1ef8], [1efa, 1efa], [1efc, 1efc],
        [1efe, 1efe], [1f08, 1f0f], [1f18, 1f1d], [1f28, 1f2f],
        [1f38, 1f3f], [1f48, 1f4d], [1f59, 1f59], [1f5b, 1f5b],
        [1f5d, 1f5d], [1f5f, 1f5f], [1f68, 1f6f], [1f88, 1f8f],
        [1f98, 1f9f], [1fa8, 1faf], [1fb8, 1fbc], [1fc8, 1fcc],
        [1fd8, 1fdb], [1fe8, 1fec], [1ff8, 1ffc], [2126, 2126],
        [212a, 212b], [2132, 2132], [2160, 216f], [2183, 2183],
        [24b6, 24cf], [2c00, 2c2e], [2c60, 2c60], [2c62, 2c64],
        [2c67, 2c67], [2c69, 2c69], [2c6b, 2c6b], [2c6d, 2c70],
        [2c72, 2c72], [2c75, 2c75], [2c7e, 2c80], [2c82, 2c82],
        [2c84, 2c84], [2c86, 2c86], [2c88, 2c88], [2c8a, 2c8a],
        [2c8c, 2c8c], [2c8e, 2c8e], [2c90, 2c90], [2c92, 2c92],
        [2c94, 2c94], [2c96, 2c96], [2c98, 2c98], [2c9a, 2c9a],
        [2c9c, 2c9c], [2c9e, 2c9e], [2ca0, 2ca0], [2ca2, 2ca2],
        [2ca4, 2ca4], [2ca6, 2ca6], [2ca8, 2ca8], [2caa, 2caa],
        [2cac, 2cac], [2cae, 2cae], [2cb0, 2cb0], [2cb2, 2cb2],
        [2cb4, 2cb4], [2cb6, 2cb6], [2cb8, 2cb8], [2cba, 2cba],
        [2cbc, 2cbc], [2cbe, 2cbe], [2cc0, 2cc0], [2cc2, 2cc2],
        [2cc4, 2cc4], [2cc6, 2cc6], [2cc8, 2cc8], [2cca, 2cca],
        [2ccc, 2ccc], [2cce, 2cce], [2cd0, 2cd0], [2cd2, 2cd2],
        [2cd4, 2cd4], [2cd6, 2cd6], [2cd8, 2cd8], [2cda, 2cda],
        [2cdc, 2cdc], [2cde, 2cde], [2ce0, 2ce0], [2ce2, 2ce2],
        [2ceb, 2ceb], [2ced, 2ced], [2cf2, 2cf2], [a640, a640],
        [a642, a642], [a644, a644], [a646, a646], [a648, a648],
        [a64a, a64a], [a64c, a64c], [a64e, a64e], [a650, a650],
        [a652, a652], [a654, a654], [a656, a656], [a658, a658],
        [a65a, a65a], [a65c, a65c], [a65e, a65e], [a660, a660],
        [a662, a662], [a664, a664], [a666, a666], [a668, a668],
        [a66a, a66a], [a66c, a66c], [a680, a680], [a682, a682],
        [a684, a684], [a686, a686], [a688, a688], [a68a, a68a],
        [a68c, a68c], [a68e, a68e], [a690, a690], [a692, a692],
        [a694, a694], [a696, a696], [a698, a698], [a69a, a69a],
        [a722, a722], [a724, a724], [a726, a726], [a728, a728],
        [a72a, a72a], [a72c, a72c], [a72e, a72e], [a732, a732],
        [a734, a734], [a736, a736], [a738, a738], [a73a, a73a],
        [a73c, a73c], [a73e, a73e], [a740, a740], [a742, a742],
        [a744, a744], [a746, a746], [a748, a748], [a74a, a74a],
        [a74c, a74c], [a74e, a74e], [a750, a750], [a752, a752],
        [a754, a754], [a756, a756], [a758, a758], [a75a, a75a],
        [a75c, a75c], [a75e, a75e], [a760, a760], [a762, a762],
        [a764, a764], [a766, a766], [a768, a768], [a76a, a76a],
        [a76c, a76c], [a76e, a76e], [a779, a779], [a77b, a77b],
        [a77d, a77e], [a780, a780], [a782, a782], [a784, a784],
        [a786, a786], [a78b, a78b], [a78d, a78d], [a790, a790],
        [a792, a792], [a796, a796], [a798, a798], [a79a, a79a],
        [a79c, a79c], [a79e, a79e], [a7a0, a7a0], [a7a2, a7a2],
        [a7a4, a7a4], [a7a6, a7a6], [a7a8, a7a8], [a7aa, a7ae],
        [a7b0, a7b4], [a7b6, a7b6], [a7b8, a7b8], [a7ba, a7ba],
        [a7bc, a7bc], [a7be, a7be], [a7c2, a7c2], [a7c4, a7c7],
        [a7c9, a7c9], [a7f5, a7f5], [ff21, ff3a], [10400, 10427],
        [104b0, 104d3], [10c80, 10cb2], [118a0, 118bf], [16e40, 16e5f],
        [1e900, 1e921]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
        {Mixed, 11}, {Empty, 8}, {Mixed, 5}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 8}, {Empty, 90}, {Full, 1}, {Mixed, 1},
        {Empty, 22}, {Full, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 2},
        {Empty, 10}, {Mixed, 16}, {Empty, 9}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Empty, 24}, {Mixed, 2}, {Empty, 57}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 970}, {Mixed, 3},
        {Empty, 4}, {Mixed, 7}, {Empty, 697}, {Mixed, 1}, {Empty, 38},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 61},
        {Full, 1}, {Mixed, 1}, {Empty, 95}, {Full, 1}, {Empty, 684},
        {Full, 1}, {Empty, 981}, {Full, 1}, {Mixed, 1}, {Empty, 30902}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x7f7fffff, 0x55555555, 0xaa555555, 0x555554aa,
        0x2b555555, 0xb1dbced6, 0x11aed2d5, 0x4aaaadb0, 0x55d65555,
        0x55555555, 0x6c055555, 0x0000557a, 0x80450000, 0xfffed740,
        0x00000ffb, 0x55008000, 0xe6905555, 0x0000ffff, 0x55555555,
        0x55555401, 0x55555555, 0x55552aab, 0x55555555, 0x55555555,
        0xfffe5555, 0x007fffff, 0x000020bf, 0x003fffff, 0xffff0000,
        0xe7ffffff, 0x55555555, 0x55555555, 0x55555555, 0x55555555,
        0x40155555, 0x55555555, 0x55555555, 0x55555555, 0x3f00ff00,
        0xff00ff00, 0xaa003f00, 0x0000ff00, 0xff00ff00, 0x1f00ff00,
        0x0f001f00, 0x1f001f00, 0x00040c40, 0x0000ffff, 0x00000008,
        0xffc00000, 0x0000ffff, 0x00007fff, 0xc025ea9d, 0x55555555,
        0x55555555, 0x55555555, 0x00042805, 0x55555555, 0x00001555,
        0x05555555, 0x55545554, 0x55555555, 0x6a005555, 0x55452855,
        0x555f7d55, 0x000002f4, 0x00200000, 0x07fffffe, 0x000000ff,
        0xffff0000, 0x000fffff, 0x0007ffff, 0x00000003};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 55, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 74, 0};

        static BinaryPropertyObject property_object{CWL, std::move(codepoint_set)};
    }
PropertyObject * get_CWL_PropertyObject() {  return & CWL_ns::property_object; }
    namespace CWT_ns {
        /** Code Point Ranges for CWT
        [0061, 007a], [00b5, 00b5], [00df, 00f6], [00f8, 00ff],
        [0101, 0101], [0103, 0103], [0105, 0105], [0107, 0107],
        [0109, 0109], [010b, 010b], [010d, 010d], [010f, 010f],
        [0111, 0111], [0113, 0113], [0115, 0115], [0117, 0117],
        [0119, 0119], [011b, 011b], [011d, 011d], [011f, 011f],
        [0121, 0121], [0123, 0123], [0125, 0125], [0127, 0127],
        [0129, 0129], [012b, 012b], [012d, 012d], [012f, 012f],
        [0131, 0131], [0133, 0133], [0135, 0135], [0137, 0137],
        [013a, 013a], [013c, 013c], [013e, 013e], [0140, 0140],
        [0142, 0142], [0144, 0144], [0146, 0146], [0148, 0149],
        [014b, 014b], [014d, 014d], [014f, 014f], [0151, 0151],
        [0153, 0153], [0155, 0155], [0157, 0157], [0159, 0159],
        [015b, 015b], [015d, 015d], [015f, 015f], [0161, 0161],
        [0163, 0163], [0165, 0165], [0167, 0167], [0169, 0169],
        [016b, 016b], [016d, 016d], [016f, 016f], [0171, 0171],
        [0173, 0173], [0175, 0175], [0177, 0177], [017a, 017a],
        [017c, 017c], [017e, 0180], [0183, 0183], [0185, 0185],
        [0188, 0188], [018c, 018c], [0192, 0192], [0195, 0195],
        [0199, 019a], [019e, 019e], [01a1, 01a1], [01a3, 01a3],
        [01a5, 01a5], [01a8, 01a8], [01ad, 01ad], [01b0, 01b0],
        [01b4, 01b4], [01b6, 01b6], [01b9, 01b9], [01bd, 01bd],
        [01bf, 01bf], [01c4, 01c4], [01c6, 01c7], [01c9, 01ca],
        [01cc, 01cc], [01ce, 01ce], [01d0, 01d0], [01d2, 01d2],
        [01d4, 01d4], [01d6, 01d6], [01d8, 01d8], [01da, 01da],
        [01dc, 01dd], [01df, 01df], [01e1, 01e1], [01e3, 01e3],
        [01e5, 01e5], [01e7, 01e7], [01e9, 01e9], [01eb, 01eb],
        [01ed, 01ed], [01ef, 01f1], [01f3, 01f3], [01f5, 01f5],
        [01f9, 01f9], [01fb, 01fb], [01fd, 01fd], [01ff, 01ff],
        [0201, 0201], [0203, 0203], [0205, 0205], [0207, 0207],
        [0209, 0209], [020b, 020b], [020d, 020d], [020f, 020f],
        [0211, 0211], [0213, 0213], [0215, 0215], [0217, 0217],
        [0219, 0219], [021b, 021b], [021d, 021d], [021f, 021f],
        [0223, 0223], [0225, 0225], [0227, 0227], [0229, 0229],
        [022b, 022b], [022d, 022d], [022f, 022f], [0231, 0231],
        [0233, 0233], [023c, 023c], [023f, 0240], [0242, 0242],
        [0247, 0247], [0249, 0249], [024b, 024b], [024d, 024d],
        [024f, 0254], [0256, 0257], [0259, 0259], [025b, 025c],
        [0260, 0261], [0263, 0263], [0265, 0266], [0268, 026c],
        [026f, 026f], [0271, 0272], [0275, 0275], [027d, 027d],
        [0280, 0280], [0282, 0283], [0287, 028c], [0292, 0292],
        [029d, 029e], [0345, 0345], [0371, 0371], [0373, 0373],
        [0377, 0377], [037b, 037d], [0390, 0390], [03ac, 03ce],
        [03d0, 03d1], [03d5, 03d7], [03d9, 03d9], [03db, 03db],
        [03dd, 03dd], [03df, 03df], [03e1, 03e1], [03e3, 03e3],
        [03e5, 03e5], [03e7, 03e7], [03e9, 03e9], [03eb, 03eb],
        [03ed, 03ed], [03ef, 03f3], [03f5, 03f5], [03f8, 03f8],
        [03fb, 03fb], [0430, 045f], [0461, 0461], [0463, 0463],
        [0465, 0465], [0467, 0467], [0469, 0469], [046b, 046b],
        [046d, 046d], [046f, 046f], [0471, 0471], [0473, 0473],
        [0475, 0475], [0477, 0477], [0479, 0479], [047b, 047b],
        [047d, 047d], [047f, 047f], [0481, 0481], [048b, 048b],
        [048d, 048d], [048f, 048f], [0491, 0491], [0493, 0493],
        [0495, 0495], [0497, 0497], [0499, 0499], [049b, 049b],
        [049d, 049d], [049f, 049f], [04a1, 04a1], [04a3, 04a3],
        [04a5, 04a5], [04a7, 04a7], [04a9, 04a9], [04ab, 04ab],
        [04ad, 04ad], [04af, 04af], [04b1, 04b1], [04b3, 04b3],
        [04b5, 04b5], [04b7, 04b7], [04b9, 04b9], [04bb, 04bb],
        [04bd, 04bd], [04bf, 04bf], [04c2, 04c2], [04c4, 04c4],
        [04c6, 04c6], [04c8, 04c8], [04ca, 04ca], [04cc, 04cc],
        [04ce, 04cf], [04d1, 04d1], [04d3, 04d3], [04d5, 04d5],
        [04d7, 04d7], [04d9, 04d9], [04db, 04db], [04dd, 04dd],
        [04df, 04df], [04e1, 04e1], [04e3, 04e3], [04e5, 04e5],
        [04e7, 04e7], [04e9, 04e9], [04eb, 04eb], [04ed, 04ed],
        [04ef, 04ef], [04f1, 04f1], [04f3, 04f3], [04f5, 04f5],
        [04f7, 04f7], [04f9, 04f9], [04fb, 04fb], [04fd, 04fd],
        [04ff, 04ff], [0501, 0501], [0503, 0503], [0505, 0505],
        [0507, 0507], [0509, 0509], [050b, 050b], [050d, 050d],
        [050f, 050f], [0511, 0511], [0513, 0513], [0515, 0515],
        [0517, 0517], [0519, 0519], [051b, 051b], [051d, 051d],
        [051f, 051f], [0521, 0521], [0523, 0523], [0525, 0525],
        [0527, 0527], [0529, 0529], [052b, 052b], [052d, 052d],
        [052f, 052f], [0561, 0587], [13f8, 13fd], [1c80, 1c88],
        [1d79, 1d79], [1d7d, 1d7d], [1d8e, 1d8e], [1e01, 1e01],
        [1e03, 1e03], [1e05, 1e05], [1e07, 1e07], [1e09, 1e09],
        [1e0b, 1e0b], [1e0d, 1e0d], [1e0f, 1e0f], [1e11, 1e11],
        [1e13, 1e13], [1e15, 1e15], [1e17, 1e17], [1e19, 1e19],
        [1e1b, 1e1b], [1e1d, 1e1d], [1e1f, 1e1f], [1e21, 1e21],
        [1e23, 1e23], [1e25, 1e25], [1e27, 1e27], [1e29, 1e29],
        [1e2b, 1e2b], [1e2d, 1e2d], [1e2f, 1e2f], [1e31, 1e31],
        [1e33, 1e33], [1e35, 1e35], [1e37, 1e37], [1e39, 1e39],
        [1e3b, 1e3b], [1e3d, 1e3d], [1e3f, 1e3f], [1e41, 1e41],
        [1e43, 1e43], [1e45, 1e45], [1e47, 1e47], [1e49, 1e49],
        [1e4b, 1e4b], [1e4d, 1e4d], [1e4f, 1e4f], [1e51, 1e51],
        [1e53, 1e53], [1e55, 1e55], [1e57, 1e57], [1e59, 1e59],
        [1e5b, 1e5b], [1e5d, 1e5d], [1e5f, 1e5f], [1e61, 1e61],
        [1e63, 1e63], [1e65, 1e65], [1e67, 1e67], [1e69, 1e69],
        [1e6b, 1e6b], [1e6d, 1e6d], [1e6f, 1e6f], [1e71, 1e71],
        [1e73, 1e73], [1e75, 1e75], [1e77, 1e77], [1e79, 1e79],
        [1e7b, 1e7b], [1e7d, 1e7d], [1e7f, 1e7f], [1e81, 1e81],
        [1e83, 1e83], [1e85, 1e85], [1e87, 1e87], [1e89, 1e89],
        [1e8b, 1e8b], [1e8d, 1e8d], [1e8f, 1e8f], [1e91, 1e91],
        [1e93, 1e93], [1e95, 1e9b], [1ea1, 1ea1], [1ea3, 1ea3],
        [1ea5, 1ea5], [1ea7, 1ea7], [1ea9, 1ea9], [1eab, 1eab],
        [1ead, 1ead], [1eaf, 1eaf], [1eb1, 1eb1], [1eb3, 1eb3],
        [1eb5, 1eb5], [1eb7, 1eb7], [1eb9, 1eb9], [1ebb, 1ebb],
        [1ebd, 1ebd], [1ebf, 1ebf], [1ec1, 1ec1], [1ec3, 1ec3],
        [1ec5, 1ec5], [1ec7, 1ec7], [1ec9, 1ec9], [1ecb, 1ecb],
        [1ecd, 1ecd], [1ecf, 1ecf], [1ed1, 1ed1], [1ed3, 1ed3],
        [1ed5, 1ed5], [1ed7, 1ed7], [1ed9, 1ed9], [1edb, 1edb],
        [1edd, 1edd], [1edf, 1edf], [1ee1, 1ee1], [1ee3, 1ee3],
        [1ee5, 1ee5], [1ee7, 1ee7], [1ee9, 1ee9], [1eeb, 1eeb],
        [1eed, 1eed], [1eef, 1eef], [1ef1, 1ef1], [1ef3, 1ef3],
        [1ef5, 1ef5], [1ef7, 1ef7], [1ef9, 1ef9], [1efb, 1efb],
        [1efd, 1efd], [1eff, 1f07], [1f10, 1f15], [1f20, 1f27],
        [1f30, 1f37], [1f40, 1f45], [1f50, 1f57], [1f60, 1f67],
        [1f70, 1f7d], [1f80, 1f87], [1f90, 1f97], [1fa0, 1fa7],
        [1fb0, 1fb4], [1fb6, 1fb7], [1fbe, 1fbe], [1fc2, 1fc4],
        [1fc6, 1fc7], [1fd0, 1fd3], [1fd6, 1fd7], [1fe0, 1fe7],
        [1ff2, 1ff4], [1ff6, 1ff7], [214e, 214e], [2170, 217f],
        [2184, 2184], [24d0, 24e9], [2c30, 2c5e], [2c61, 2c61],
        [2c65, 2c66], [2c68, 2c68], [2c6a, 2c6a], [2c6c, 2c6c],
        [2c73, 2c73], [2c76, 2c76], [2c81, 2c81], [2c83, 2c83],
        [2c85, 2c85], [2c87, 2c87], [2c89, 2c89], [2c8b, 2c8b],
        [2c8d, 2c8d], [2c8f, 2c8f], [2c91, 2c91], [2c93, 2c93],
        [2c95, 2c95], [2c97, 2c97], [2c99, 2c99], [2c9b, 2c9b],
        [2c9d, 2c9d], [2c9f, 2c9f], [2ca1, 2ca1], [2ca3, 2ca3],
        [2ca5, 2ca5], [2ca7, 2ca7], [2ca9, 2ca9], [2cab, 2cab],
        [2cad, 2cad], [2caf, 2caf], [2cb1, 2cb1], [2cb3, 2cb3],
        [2cb5, 2cb5], [2cb7, 2cb7], [2cb9, 2cb9], [2cbb, 2cbb],
        [2cbd, 2cbd], [2cbf, 2cbf], [2cc1, 2cc1], [2cc3, 2cc3],
        [2cc5, 2cc5], [2cc7, 2cc7], [2cc9, 2cc9], [2ccb, 2ccb],
        [2ccd, 2ccd], [2ccf, 2ccf], [2cd1, 2cd1], [2cd3, 2cd3],
        [2cd5, 2cd5], [2cd7, 2cd7], [2cd9, 2cd9], [2cdb, 2cdb],
        [2cdd, 2cdd], [2cdf, 2cdf], [2ce1, 2ce1], [2ce3, 2ce3],
        [2cec, 2cec], [2cee, 2cee], [2cf3, 2cf3], [2d00, 2d25],
        [2d27, 2d27], [2d2d, 2d2d], [a641, a641], [a643, a643],
        [a645, a645], [a647, a647], [a649, a649], [a64b, a64b],
        [a64d, a64d], [a64f, a64f], [a651, a651], [a653, a653],
        [a655, a655], [a657, a657], [a659, a659], [a65b, a65b],
        [a65d, a65d], [a65f, a65f], [a661, a661], [a663, a663],
        [a665, a665], [a667, a667], [a669, a669], [a66b, a66b],
        [a66d, a66d], [a681, a681], [a683, a683], [a685, a685],
        [a687, a687], [a689, a689], [a68b, a68b], [a68d, a68d],
        [a68f, a68f], [a691, a691], [a693, a693], [a695, a695],
        [a697, a697], [a699, a699], [a69b, a69b], [a723, a723],
        [a725, a725], [a727, a727], [a729, a729], [a72b, a72b],
        [a72d, a72d], [a72f, a72f], [a733, a733], [a735, a735],
        [a737, a737], [a739, a739], [a73b, a73b], [a73d, a73d],
        [a73f, a73f], [a741, a741], [a743, a743], [a745, a745],
        [a747, a747], [a749, a749], [a74b, a74b], [a74d, a74d],
        [a74f, a74f], [a751, a751], [a753, a753], [a755, a755],
        [a757, a757], [a759, a759], [a75b, a75b], [a75d, a75d],
        [a75f, a75f], [a761, a761], [a763, a763], [a765, a765],
        [a767, a767], [a769, a769], [a76b, a76b], [a76d, a76d],
        [a76f, a76f], [a77a, a77a], [a77c, a77c], [a77f, a77f],
        [a781, a781], [a783, a783], [a785, a785], [a787, a787],
        [a78c, a78c], [a791, a791], [a793, a794], [a797, a797],
        [a799, a799], [a79b, a79b], [a79d, a79d], [a79f, a79f],
        [a7a1, a7a1], [a7a3, a7a3], [a7a5, a7a5], [a7a7, a7a7],
        [a7a9, a7a9], [a7b5, a7b5], [a7b7, a7b7], [a7b9, a7b9],
        [a7bb, a7bb], [a7bd, a7bd], [a7bf, a7bf], [a7c3, a7c3],
        [a7c8, a7c8], [a7ca, a7ca], [a7f6, a7f6], [ab53, ab53],
        [ab70, abbf], [fb00, fb06], [fb13, fb17], [ff41, ff5a],
        [10428, 1044f], [104d8, 104fb], [10cc0, 10cf2], [118c0, 118df],
        [16e60, 16e7f], [1e922, 1e943]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 16}, {Empty, 5},
        {Mixed, 6}, {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 7},
        {Empty, 1}, {Mixed, 2}, {Empty, 114}, {Mixed, 1}, {Empty, 68},
        {Mixed, 1}, {Empty, 6}, {Mixed, 2}, {Empty, 3}, {Mixed, 16},
        {Empty, 10}, {Mixed, 3}, {Empty, 25}, {Mixed, 2}, {Empty, 57},
        {Mixed, 7}, {Full, 1}, {Mixed, 1}, {Empty, 968}, {Mixed, 3},
        {Empty, 4}, {Mixed, 7}, {Empty, 26}, {Mixed, 2}, {Full, 2},
        {Empty, 634}, {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 38},
        {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 62}, {Full, 1},
        {Mixed, 1}, {Empty, 94}, {Full, 1}, {Empty, 684}, {Full, 1},
        {Empty, 981}, {Mixed, 2}, {Empty, 30901}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x00200000, 0x80000000, 0xff7fffff, 0xaaaaaaaa,
        0x54aaaaaa, 0xaaaaab55, 0xd4aaaaaa, 0x46241129, 0xa251212a,
        0xb55556d0, 0xaa2baaaa, 0xaaaaaaaa, 0x900aaaa8, 0x1adfaa85,
        0x20269f6b, 0x60041f8d, 0x00000020, 0x388a0000, 0x00010000,
        0xfffff000, 0xaae37fff, 0x092faaaa, 0xffff0000, 0xaaaaaaaa,
        0xaaaaa802, 0xaaaaaaaa, 0xaaaad554, 0xaaaaaaaa, 0xaaaaaaaa,
        0x0000aaaa, 0xfffffffe, 0x000000ff, 0x3f000000, 0x000001ff,
        0x22000000, 0x00004000, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa,
        0xaaaaaaaa, 0x0feaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa,
        0x003f00ff, 0x00ff00ff, 0x00ff003f, 0x3fff00ff, 0x00ff00ff,
        0x40df00ff, 0x00cf00dc, 0x00dc00ff, 0x00004000, 0xffff0000,
        0x00000010, 0xffff0000, 0x000003ff, 0xffff0000, 0x7fffffff,
        0x00481562, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0x0008500a,
        0x000020bf, 0xaaaaaaaa, 0x00002aaa, 0x0aaaaaaa, 0xaaa8aaa8,
        0xaaaaaaaa, 0x9400aaaa, 0xaa9a10aa, 0xaaa002aa, 0x00000508,
        0x00400000, 0x00080000, 0xffff0000, 0x00f8007f, 0x07fffffe,
        0xffffff00, 0x0000ffff, 0xff000000, 0x0fffffff, 0x0007ffff,
        0xfffffffc, 0x0000000f};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 53, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 87, 0};

        static BinaryPropertyObject property_object{CWT, std::move(codepoint_set)};
    }
PropertyObject * get_CWT_PropertyObject() {  return & CWT_ns::property_object; }
    namespace CWU_ns {
        /** Code Point Ranges for CWU
        [0061, 007a], [00b5, 00b5], [00df, 00f6], [00f8, 00ff],
        [0101, 0101], [0103, 0103], [0105, 0105], [0107, 0107],
        [0109, 0109], [010b, 010b], [010d, 010d], [010f, 010f],
        [0111, 0111], [0113, 0113], [0115, 0115], [0117, 0117],
        [0119, 0119], [011b, 011b], [011d, 011d], [011f, 011f],
        [0121, 0121], [0123, 0123], [0125, 0125], [0127, 0127],
        [0129, 0129], [012b, 012b], [012d, 012d], [012f, 012f],
        [0131, 0131], [0133, 0133], [0135, 0135], [0137, 0137],
        [013a, 013a], [013c, 013c], [013e, 013e], [0140, 0140],
        [0142, 0142], [0144, 0144], [0146, 0146], [0148, 0149],
        [014b, 014b], [014d, 014d], [014f, 014f], [0151, 0151],
        [0153, 0153], [0155, 0155], [0157, 0157], [0159, 0159],
        [015b, 015b], [015d, 015d], [015f, 015f], [0161, 0161],
        [0163, 0163], [0165, 0165], [0167, 0167], [0169, 0169],
        [016b, 016b], [016d, 016d], [016f, 016f], [0171, 0171],
        [0173, 0173], [0175, 0175], [0177, 0177], [017a, 017a],
        [017c, 017c], [017e, 0180], [0183, 0183], [0185, 0185],
        [0188, 0188], [018c, 018c], [0192, 0192], [0195, 0195],
        [0199, 019a], [019e, 019e], [01a1, 01a1], [01a3, 01a3],
        [01a5, 01a5], [01a8, 01a8], [01ad, 01ad], [01b0, 01b0],
        [01b4, 01b4], [01b6, 01b6], [01b9, 01b9], [01bd, 01bd],
        [01bf, 01bf], [01c5, 01c6], [01c8, 01c9], [01cb, 01cc],
        [01ce, 01ce], [01d0, 01d0], [01d2, 01d2], [01d4, 01d4],
        [01d6, 01d6], [01d8, 01d8], [01da, 01da], [01dc, 01dd],
        [01df, 01df], [01e1, 01e1], [01e3, 01e3], [01e5, 01e5],
        [01e7, 01e7], [01e9, 01e9], [01eb, 01eb], [01ed, 01ed],
        [01ef, 01f0], [01f2, 01f3], [01f5, 01f5], [01f9, 01f9],
        [01fb, 01fb], [01fd, 01fd], [01ff, 01ff], [0201, 0201],
        [0203, 0203], [0205, 0205], [0207, 0207], [0209, 0209],
        [020b, 020b], [020d, 020d], [020f, 020f], [0211, 0211],
        [0213, 0213], [0215, 0215], [0217, 0217], [0219, 0219],
        [021b, 021b], [021d, 021d], [021f, 021f], [0223, 0223],
        [0225, 0225], [0227, 0227], [0229, 0229], [022b, 022b],
        [022d, 022d], [022f, 022f], [0231, 0231], [0233, 0233],
        [023c, 023c], [023f, 0240], [0242, 0242], [0247, 0247],
        [0249, 0249], [024b, 024b], [024d, 024d], [024f, 0254],
        [0256, 0257], [0259, 0259], [025b, 025c], [0260, 0261],
        [0263, 0263], [0265, 0266], [0268, 026c], [026f, 026f],
        [0271, 0272], [0275, 0275], [027d, 027d], [0280, 0280],
        [0282, 0283], [0287, 028c], [0292, 0292], [029d, 029e],
        [0345, 0345], [0371, 0371], [0373, 0373], [0377, 0377],
        [037b, 037d], [0390, 0390], [03ac, 03ce], [03d0, 03d1],
        [03d5, 03d7], [03d9, 03d9], [03db, 03db], [03dd, 03dd],
        [03df, 03df], [03e1, 03e1], [03e3, 03e3], [03e5, 03e5],
        [03e7, 03e7], [03e9, 03e9], [03eb, 03eb], [03ed, 03ed],
        [03ef, 03f3], [03f5, 03f5], [03f8, 03f8], [03fb, 03fb],
        [0430, 045f], [0461, 0461], [0463, 0463], [0465, 0465],
        [0467, 0467], [0469, 0469], [046b, 046b], [046d, 046d],
        [046f, 046f], [0471, 0471], [0473, 0473], [0475, 0475],
        [0477, 0477], [0479, 0479], [047b, 047b], [047d, 047d],
        [047f, 047f], [0481, 0481], [048b, 048b], [048d, 048d],
        [048f, 048f], [0491, 0491], [0493, 0493], [0495, 0495],
        [0497, 0497], [0499, 0499], [049b, 049b], [049d, 049d],
        [049f, 049f], [04a1, 04a1], [04a3, 04a3], [04a5, 04a5],
        [04a7, 04a7], [04a9, 04a9], [04ab, 04ab], [04ad, 04ad],
        [04af, 04af], [04b1, 04b1], [04b3, 04b3], [04b5, 04b5],
        [04b7, 04b7], [04b9, 04b9], [04bb, 04bb], [04bd, 04bd],
        [04bf, 04bf], [04c2, 04c2], [04c4, 04c4], [04c6, 04c6],
        [04c8, 04c8], [04ca, 04ca], [04cc, 04cc], [04ce, 04cf],
        [04d1, 04d1], [04d3, 04d3], [04d5, 04d5], [04d7, 04d7],
        [04d9, 04d9], [04db, 04db], [04dd, 04dd], [04df, 04df],
        [04e1, 04e1], [04e3, 04e3], [04e5, 04e5], [04e7, 04e7],
        [04e9, 04e9], [04eb, 04eb], [04ed, 04ed], [04ef, 04ef],
        [04f1, 04f1], [04f3, 04f3], [04f5, 04f5], [04f7, 04f7],
        [04f9, 04f9], [04fb, 04fb], [04fd, 04fd], [04ff, 04ff],
        [0501, 0501], [0503, 0503], [0505, 0505], [0507, 0507],
        [0509, 0509], [050b, 050b], [050d, 050d], [050f, 050f],
        [0511, 0511], [0513, 0513], [0515, 0515], [0517, 0517],
        [0519, 0519], [051b, 051b], [051d, 051d], [051f, 051f],
        [0521, 0521], [0523, 0523], [0525, 0525], [0527, 0527],
        [0529, 0529], [052b, 052b], [052d, 052d], [052f, 052f],
        [0561, 0587], [10d0, 10fa], [10fd, 10ff], [13f8, 13fd],
        [1c80, 1c88], [1d79, 1d79], [1d7d, 1d7d], [1d8e, 1d8e],
        [1e01, 1e01], [1e03, 1e03], [1e05, 1e05], [1e07, 1e07],
        [1e09, 1e09], [1e0b, 1e0b], [1e0d, 1e0d], [1e0f, 1e0f],
        [1e11, 1e11], [1e13, 1e13], [1e15, 1e15], [1e17, 1e17],
        [1e19, 1e19], [1e1b, 1e1b], [1e1d, 1e1d], [1e1f, 1e1f],
        [1e21, 1e21], [1e23, 1e23], [1e25, 1e25], [1e27, 1e27],
        [1e29, 1e29], [1e2b, 1e2b], [1e2d, 1e2d], [1e2f, 1e2f],
        [1e31, 1e31], [1e33, 1e33], [1e35, 1e35], [1e37, 1e37],
        [1e39, 1e39], [1e3b, 1e3b], [1e3d, 1e3d], [1e3f, 1e3f],
        [1e41, 1e41], [1e43, 1e43], [1e45, 1e45], [1e47, 1e47],
        [1e49, 1e49], [1e4b, 1e4b], [1e4d, 1e4d], [1e4f, 1e4f],
        [1e51, 1e51], [1e53, 1e53], [1e55, 1e55], [1e57, 1e57],
        [1e59, 1e59], [1e5b, 1e5b], [1e5d, 1e5d], [1e5f, 1e5f],
        [1e61, 1e61], [1e63, 1e63], [1e65, 1e65], [1e67, 1e67],
        [1e69, 1e69], [1e6b, 1e6b], [1e6d, 1e6d], [1e6f, 1e6f],
        [1e71, 1e71], [1e73, 1e73], [1e75, 1e75], [1e77, 1e77],
        [1e79, 1e79], [1e7b, 1e7b], [1e7d, 1e7d], [1e7f, 1e7f],
        [1e81, 1e81], [1e83, 1e83], [1e85, 1e85], [1e87, 1e87],
        [1e89, 1e89], [1e8b, 1e8b], [1e8d, 1e8d], [1e8f, 1e8f],
        [1e91, 1e91], [1e93, 1e93], [1e95, 1e9b], [1ea1, 1ea1],
        [1ea3, 1ea3], [1ea5, 1ea5], [1ea7, 1ea7], [1ea9, 1ea9],
        [1eab, 1eab], [1ead, 1ead], [1eaf, 1eaf], [1eb1, 1eb1],
        [1eb3, 1eb3], [1eb5, 1eb5], [1eb7, 1eb7], [1eb9, 1eb9],
        [1ebb, 1ebb], [1ebd, 1ebd], [1ebf, 1ebf], [1ec1, 1ec1],
        [1ec3, 1ec3], [1ec5, 1ec5], [1ec7, 1ec7], [1ec9, 1ec9],
        [1ecb, 1ecb], [1ecd, 1ecd], [1ecf, 1ecf], [1ed1, 1ed1],
        [1ed3, 1ed3], [1ed5, 1ed5], [1ed7, 1ed7], [1ed9, 1ed9],
        [1edb, 1edb], [1edd, 1edd], [1edf, 1edf], [1ee1, 1ee1],
        [1ee3, 1ee3], [1ee5, 1ee5], [1ee7, 1ee7], [1ee9, 1ee9],
        [1eeb, 1eeb], [1eed, 1eed], [1eef, 1eef], [1ef1, 1ef1],
        [1ef3, 1ef3], [1ef5, 1ef5], [1ef7, 1ef7], [1ef9, 1ef9],
        [1efb, 1efb], [1efd, 1efd], [1eff, 1f07], [1f10, 1f15],
        [1f20, 1f27], [1f30, 1f37], [1f40, 1f45], [1f50, 1f57],
        [1f60, 1f67], [1f70, 1f7d], [1f80, 1fb4], [1fb6, 1fb7],
        [1fbc, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fc7],
        [1fcc, 1fcc], [1fd0, 1fd3], [1fd6, 1fd7], [1fe0, 1fe7],
        [1ff2, 1ff4], [1ff6, 1ff7], [1ffc, 1ffc], [214e, 214e],
        [2170, 217f], [2184, 2184], [24d0, 24e9], [2c30, 2c5e],
        [2c61, 2c61], [2c65, 2c66], [2c68, 2c68], [2c6a, 2c6a],
        [2c6c, 2c6c], [2c73, 2c73], [2c76, 2c76], [2c81, 2c81],
        [2c83, 2c83], [2c85, 2c85], [2c87, 2c87], [2c89, 2c89],
        [2c8b, 2c8b], [2c8d, 2c8d], [2c8f, 2c8f], [2c91, 2c91],
        [2c93, 2c93], [2c95, 2c95], [2c97, 2c97], [2c99, 2c99],
        [2c9b, 2c9b], [2c9d, 2c9d], [2c9f, 2c9f], [2ca1, 2ca1],
        [2ca3, 2ca3], [2ca5, 2ca5], [2ca7, 2ca7], [2ca9, 2ca9],
        [2cab, 2cab], [2cad, 2cad], [2caf, 2caf], [2cb1, 2cb1],
        [2cb3, 2cb3], [2cb5, 2cb5], [2cb7, 2cb7], [2cb9, 2cb9],
        [2cbb, 2cbb], [2cbd, 2cbd], [2cbf, 2cbf], [2cc1, 2cc1],
        [2cc3, 2cc3], [2cc5, 2cc5], [2cc7, 2cc7], [2cc9, 2cc9],
        [2ccb, 2ccb], [2ccd, 2ccd], [2ccf, 2ccf], [2cd1, 2cd1],
        [2cd3, 2cd3], [2cd5, 2cd5], [2cd7, 2cd7], [2cd9, 2cd9],
        [2cdb, 2cdb], [2cdd, 2cdd], [2cdf, 2cdf], [2ce1, 2ce1],
        [2ce3, 2ce3], [2cec, 2cec], [2cee, 2cee], [2cf3, 2cf3],
        [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d], [a641, a641],
        [a643, a643], [a645, a645], [a647, a647], [a649, a649],
        [a64b, a64b], [a64d, a64d], [a64f, a64f], [a651, a651],
        [a653, a653], [a655, a655], [a657, a657], [a659, a659],
        [a65b, a65b], [a65d, a65d], [a65f, a65f], [a661, a661],
        [a663, a663], [a665, a665], [a667, a667], [a669, a669],
        [a66b, a66b], [a66d, a66d], [a681, a681], [a683, a683],
        [a685, a685], [a687, a687], [a689, a689], [a68b, a68b],
        [a68d, a68d], [a68f, a68f], [a691, a691], [a693, a693],
        [a695, a695], [a697, a697], [a699, a699], [a69b, a69b],
        [a723, a723], [a725, a725], [a727, a727], [a729, a729],
        [a72b, a72b], [a72d, a72d], [a72f, a72f], [a733, a733],
        [a735, a735], [a737, a737], [a739, a739], [a73b, a73b],
        [a73d, a73d], [a73f, a73f], [a741, a741], [a743, a743],
        [a745, a745], [a747, a747], [a749, a749], [a74b, a74b],
        [a74d, a74d], [a74f, a74f], [a751, a751], [a753, a753],
        [a755, a755], [a757, a757], [a759, a759], [a75b, a75b],
        [a75d, a75d], [a75f, a75f], [a761, a761], [a763, a763],
        [a765, a765], [a767, a767], [a769, a769], [a76b, a76b],
        [a76d, a76d], [a76f, a76f], [a77a, a77a], [a77c, a77c],
        [a77f, a77f], [a781, a781], [a783, a783], [a785, a785],
        [a787, a787], [a78c, a78c], [a791, a791], [a793, a794],
        [a797, a797], [a799, a799], [a79b, a79b], [a79d, a79d],
        [a79f, a79f], [a7a1, a7a1], [a7a3, a7a3], [a7a5, a7a5],
        [a7a7, a7a7], [a7a9, a7a9], [a7b5, a7b5], [a7b7, a7b7],
        [a7b9, a7b9], [a7bb, a7bb], [a7bd, a7bd], [a7bf, a7bf],
        [a7c3, a7c3], [a7c8, a7c8], [a7ca, a7ca], [a7f6, a7f6],
        [ab53, ab53], [ab70, abbf], [fb00, fb06], [fb13, fb17],
        [ff41, ff5a], [10428, 1044f], [104d8, 104fb], [10cc0, 10cf2],
        [118c0, 118df], [16e60, 16e7f], [1e922, 1e943]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 16}, {Empty, 5},
        {Mixed, 6}, {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 7},
        {Empty, 1}, {Mixed, 2}, {Empty, 89}, {Mixed, 2}, {Empty, 23},
        {Mixed, 1}, {Empty, 68}, {Mixed, 1}, {Empty, 6}, {Mixed, 2},
        {Empty, 3}, {Mixed, 12}, {Full, 1}, {Mixed, 3}, {Empty, 10},
        {Mixed, 3}, {Empty, 25}, {Mixed, 2}, {Empty, 57}, {Mixed, 7},
        {Full, 1}, {Mixed, 1}, {Empty, 968}, {Mixed, 3}, {Empty, 4},
        {Mixed, 7}, {Empty, 26}, {Mixed, 2}, {Full, 2}, {Empty, 634},
        {Mixed, 1}, {Empty, 33}, {Mixed, 1}, {Empty, 38}, {Mixed, 2},
        {Empty, 3}, {Mixed, 2}, {Empty, 62}, {Full, 1}, {Mixed, 1},
        {Empty, 94}, {Full, 1}, {Empty, 684}, {Full, 1}, {Empty, 981},
        {Mixed, 2}, {Empty, 30901}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x00200000, 0x80000000, 0xff7fffff, 0xaaaaaaaa,
        0x54aaaaaa, 0xaaaaab55, 0xd4aaaaaa, 0x46241129, 0xa251212a,
        0xb5555b60, 0xaa2daaaa, 0xaaaaaaaa, 0x900aaaa8, 0x1adfaa85,
        0x20269f6b, 0x60041f8d, 0x00000020, 0x388a0000, 0x00010000,
        0xfffff000, 0xaae37fff, 0x092faaaa, 0xffff0000, 0xaaaaaaaa,
        0xaaaaa802, 0xaaaaaaaa, 0xaaaad554, 0xaaaaaaaa, 0xaaaaaaaa,
        0x0000aaaa, 0xfffffffe, 0x000000ff, 0xffff0000, 0xe7ffffff,
        0x3f000000, 0x000001ff, 0x22000000, 0x00004000, 0xaaaaaaaa,
        0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0x0feaaaaa, 0xaaaaaaaa,
        0xaaaaaaaa, 0xaaaaaaaa, 0x003f00ff, 0x00ff00ff, 0x00ff003f,
        0x3fff00ff, 0x50dfffff, 0x00cf10dc, 0x10dc00ff, 0x00004000,
        0xffff0000, 0x00000010, 0xffff0000, 0x000003ff, 0xffff0000,
        0x7fffffff, 0x00481562, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa,
        0x0008500a, 0x000020bf, 0xaaaaaaaa, 0x00002aaa, 0x0aaaaaaa,
        0xaaa8aaa8, 0xaaaaaaaa, 0x9400aaaa, 0xaa9a10aa, 0xaaa002aa,
        0x00000508, 0x00400000, 0x00080000, 0xffff0000, 0x00f8007f,
        0x07fffffe, 0xffffff00, 0x0000ffff, 0xff000000, 0x0fffffff,
        0x0007ffff, 0xfffffffc, 0x0000000f};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 57, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 88, 0};

        static BinaryPropertyObject property_object{CWU, std::move(codepoint_set)};
    }
PropertyObject * get_CWU_PropertyObject() {  return & CWU_ns::property_object; }
    namespace CASED_ns {
        /** Code Point Ranges for Cased
        [0041, 005a], [0061, 007a], [00aa, 00aa], [00b5, 00b5],
        [00ba, 00ba], [00c0, 00d6], [00d8, 00f6], [00f8, 01ba],
        [01bc, 01bf], [01c4, 0293], [0295, 02b8], [02c0, 02c1],
        [02e0, 02e4], [0345, 0345], [0370, 0373], [0376, 0377],
        [037a, 037d], [037f, 037f], [0386, 0386], [0388, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 03f5], [03f7, 0481],
        [048a, 052f], [0531, 0556], [0560, 0588], [10a0, 10c5],
        [10c7, 10c7], [10cd, 10cd], [10d0, 10fa], [10fd, 10ff],
        [13a0, 13f5], [13f8, 13fd], [1c80, 1c88], [1c90, 1cba],
        [1cbd, 1cbf], [1d00, 1dbf], [1e00, 1f15], [1f18, 1f1d],
        [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d], [1f80, 1fb4],
        [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fcc],
        [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec], [1ff2, 1ff4],
        [1ff6, 1ffc], [2071, 2071], [207f, 207f], [2090, 209c],
        [2102, 2102], [2107, 2107], [210a, 2113], [2115, 2115],
        [2119, 211d], [2124, 2124], [2126, 2126], [2128, 2128],
        [212a, 212d], [212f, 2134], [2139, 2139], [213c, 213f],
        [2145, 2149], [214e, 214e], [2160, 217f], [2183, 2184],
        [24b6, 24e9], [2c00, 2c2e], [2c30, 2c5e], [2c60, 2ce4],
        [2ceb, 2cee], [2cf2, 2cf3], [2d00, 2d25], [2d27, 2d27],
        [2d2d, 2d2d], [a640, a66d], [a680, a69d], [a722, a787],
        [a78b, a78e], [a790, a7bf], [a7c2, a7ca], [a7f5, a7f6],
        [a7f8, a7fa], [ab30, ab5a], [ab5c, ab68], [ab70, abbf],
        [fb00, fb06], [fb13, fb17], [ff21, ff3a], [ff41, ff5a],
        [10400, 1044f], [104b0, 104d3], [104d8, 104fb], [10c80, 10cb2],
        [10cc0, 10cf2], [118a0, 118df], [16e40, 16e7f], [1d400, 1d454],
        [1d456, 1d49c], [1d49e, 1d49f], [1d4a2, 1d4a2], [1d4a5, 1d4a6],
        [1d4a9, 1d4ac], [1d4ae, 1d4b9], [1d4bb, 1d4bb], [1d4bd, 1d4c3],
        [1d4c5, 1d505], [1d507, 1d50a], [1d50d, 1d514], [1d516, 1d51c],
        [1d51e, 1d539], [1d53b, 1d53e], [1d540, 1d544], [1d546, 1d546],
        [1d54a, 1d550], [1d552, 1d6a5], [1d6a8, 1d6c0], [1d6c2, 1d6da],
        [1d6dc, 1d6fa], [1d6fc, 1d714], [1d716, 1d734], [1d736, 1d74e],
        [1d750, 1d76e], [1d770, 1d788], [1d78a, 1d7a8], [1d7aa, 1d7c2],
        [1d7c4, 1d7cb], [1e900, 1e943], [1f130, 1f149], [1f150, 1f169],
        [1f170, 1f189]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Full, 5},
        {Mixed, 2}, {Full, 5}, {Mixed, 4}, {Empty, 2}, {Mixed, 4},
        {Full, 1}, {Mixed, 1}, {Full, 4}, {Mixed, 1}, {Full, 4}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Empty, 88}, {Full, 1}, {Mixed, 2},
        {Empty, 21}, {Full, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 2},
        {Empty, 2}, {Full, 6}, {Empty, 2}, {Full, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
        {Empty, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Empty, 24},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 56}, {Full, 1},
        {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 968}, {Full, 1}, {Mixed, 2}, {Empty, 4}, {Mixed, 1},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Empty, 25},
        {Mixed, 3}, {Full, 2}, {Empty, 634}, {Mixed, 1}, {Empty, 32},
        {Mixed, 2}, {Empty, 37}, {Full, 2}, {Mixed, 1}, {Empty, 2},
        {Mixed, 3}, {Empty, 60}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 93}, {Full, 2}, {Empty, 683}, {Full, 2},
        {Empty, 812}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 3}, {Full, 10}, {Mixed, 10}, {Empty, 137},
        {Full, 2}, {Mixed, 1}, {Empty, 62}, {Mixed, 4}, {Empty, 30835}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x07fffffe, 0x04200400, 0xff7fffff, 0xff7fffff,
        0xf7ffffff, 0xfffffff0, 0xffefffff, 0x01ffffff, 0x00000003,
        0x0000001f, 0x00000020, 0xbccf0000, 0xffffd740, 0xfffffffb,
        0xffbfffff, 0xfffffc03, 0xfffeffff, 0x007fffff, 0x000001ff,
        0xffff20bf, 0xe7ffffff, 0x3f3fffff, 0xffff01ff, 0xe7ffffff,
        0x3f3fffff, 0xaaff3f3f, 0x3fffffff, 0x5fdfffff, 0x0fcf1fdc,
        0x1fdc1fff, 0x80020000, 0x1fff0000, 0x3e2ffc84, 0xf21fbd50,
        0x000043e0, 0x00000018, 0xffc00000, 0x000003ff, 0xffff7fff,
        0x7fffffff, 0x000c781f, 0x000020bf, 0x00003fff, 0x3fffffff,
        0xfffffffc, 0xffff78ff, 0x000007fc, 0x07600000, 0xffff0000,
        0xf7ffffff, 0xffff01ff, 0x00f8007f, 0x07fffffe, 0x07fffffe,
        0x0000ffff, 0xffff0000, 0xff0fffff, 0x0fffffff, 0x0007ffff,
        0x0007ffff, 0xffdfffff, 0xdfffffff, 0xebffde64, 0xffffffef,
        0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffff3f, 0xf7fffffd,
        0xf7ffffff, 0xffdfffff, 0xffdfffff, 0xffff7fff, 0xffff7fff,
        0xfffffdff, 0xfffffdff, 0x00000ff7, 0x0000000f, 0xffff0000,
        0xffff03ff, 0xffff03ff, 0x000003ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 97, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 83, 0};

        static BinaryPropertyObject property_object{Cased, std::move(codepoint_set)};
    }
PropertyObject * get_CASED_PropertyObject() {  return & CASED_ns::property_object; }
    namespace DI_ns {
        /** Code Point Ranges for DI
        [00ad, 00ad], [034f, 034f], [061c, 061c], [115f, 1160],
        [17b4, 17b5], [180b, 180e], [200b, 200f], [202a, 202e],
        [2060, 206f], [3164, 3164], [fe00, fe0f], [feff, feff],
        [ffa0, ffa0], [fff0, fff8], [1bca0, 1bca3], [1d173, 1d17a],
        [e0000, e0fff]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 5}, {Mixed, 1}, {Empty, 20}, {Mixed, 1}, {Empty, 21},
        {Mixed, 1}, {Empty, 89}, {Mixed, 2}, {Empty, 49}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Empty, 63}, {Mixed, 2}, {Empty, 1},
        {Mixed, 1}, {Empty, 135}, {Mixed, 1}, {Empty, 1636}, {Mixed, 1},
        {Empty, 6}, {Mixed, 1}, {Empty, 5}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 1509}, {Mixed, 1}, {Empty, 165}, {Mixed, 1},
        {Empty, 24948}, {Full, 128}, {Empty, 6016}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x00002000, 0x00008000, 0x10000000, 0x80000000, 0x00000001,
        0x00300000, 0x00007800, 0x0000f800, 0x00007c00, 0x0000ffff,
        0x00000010, 0x0000ffff, 0x80000000, 0x00000001, 0x01ff0000,
        0x0000000f, 0x07f80000};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 33, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 17, 0};

        static BinaryPropertyObject property_object{DI, std::move(codepoint_set)};
    }
PropertyObject * get_DI_PropertyObject() {  return & DI_ns::property_object; }
    namespace GR_BASE_ns {
        /** Code Point Ranges for Gr_Base
        [0020, 007e], [00a0, 00ac], [00ae, 02ff], [0370, 0377],
        [037a, 037f], [0384, 038a], [038c, 038c], [038e, 03a1],
        [03a3, 0482], [048a, 052f], [0531, 0556], [0559, 058a],
        [058d, 058f], [05be, 05be], [05c0, 05c0], [05c3, 05c3],
        [05c6, 05c6], [05d0, 05ea], [05ef, 05f4], [0606, 060f],
        [061b, 061b], [061e, 064a], [0660, 066f], [0671, 06d5],
        [06de, 06de], [06e5, 06e6], [06e9, 06e9], [06ee, 070d],
        [0710, 0710], [0712, 072f], [074d, 07a5], [07b1, 07b1],
        [07c0, 07ea], [07f4, 07fa], [07fe, 0815], [081a, 081a],
        [0824, 0824], [0828, 0828], [0830, 083e], [0840, 0858],
        [085e, 085e], [0860, 086a], [08a0, 08b4], [08b6, 08c7],
        [0903, 0939], [093b, 093b], [093d, 0940], [0949, 094c],
        [094e, 0950], [0958, 0961], [0964, 0980], [0982, 0983],
        [0985, 098c], [098f, 0990], [0993, 09a8], [09aa, 09b0],
        [09b2, 09b2], [09b6, 09b9], [09bd, 09bd], [09bf, 09c0],
        [09c7, 09c8], [09cb, 09cc], [09ce, 09ce], [09dc, 09dd],
        [09df, 09e1], [09e6, 09fd], [0a03, 0a03], [0a05, 0a0a],
        [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30], [0a32, 0a33],
        [0a35, 0a36], [0a38, 0a39], [0a3e, 0a40], [0a59, 0a5c],
        [0a5e, 0a5e], [0a66, 0a6f], [0a72, 0a74], [0a76, 0a76],
        [0a83, 0a83], [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8],
        [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9], [0abd, 0ac0],
        [0ac9, 0ac9], [0acb, 0acc], [0ad0, 0ad0], [0ae0, 0ae1],
        [0ae6, 0af1], [0af9, 0af9], [0b02, 0b03], [0b05, 0b0c],
        [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33],
        [0b35, 0b39], [0b3d, 0b3d], [0b40, 0b40], [0b47, 0b48],
        [0b4b, 0b4c], [0b5c, 0b5d], [0b5f, 0b61], [0b66, 0b77],
        [0b83, 0b83], [0b85, 0b8a], [0b8e, 0b90], [0b92, 0b95],
        [0b99, 0b9a], [0b9c, 0b9c], [0b9e, 0b9f], [0ba3, 0ba4],
        [0ba8, 0baa], [0bae, 0bb9], [0bbf, 0bbf], [0bc1, 0bc2],
        [0bc6, 0bc8], [0bca, 0bcc], [0bd0, 0bd0], [0be6, 0bfa],
        [0c01, 0c03], [0c05, 0c0c], [0c0e, 0c10], [0c12, 0c28],
        [0c2a, 0c39], [0c3d, 0c3d], [0c41, 0c44], [0c58, 0c5a],
        [0c60, 0c61], [0c66, 0c6f], [0c77, 0c80], [0c82, 0c8c],
        [0c8e, 0c90], [0c92, 0ca8], [0caa, 0cb3], [0cb5, 0cb9],
        [0cbd, 0cbe], [0cc0, 0cc1], [0cc3, 0cc4], [0cc7, 0cc8],
        [0cca, 0ccb], [0cde, 0cde], [0ce0, 0ce1], [0ce6, 0cef],
        [0cf1, 0cf2], [0d02, 0d0c], [0d0e, 0d10], [0d12, 0d3a],
        [0d3d, 0d3d], [0d3f, 0d40], [0d46, 0d48], [0d4a, 0d4c],
        [0d4e, 0d4f], [0d54, 0d56], [0d58, 0d61], [0d66, 0d7f],
        [0d82, 0d83], [0d85, 0d96], [0d9a, 0db1], [0db3, 0dbb],
        [0dbd, 0dbd], [0dc0, 0dc6], [0dd0, 0dd1], [0dd8, 0dde],
        [0de6, 0def], [0df2, 0df4], [0e01, 0e30], [0e32, 0e33],
        [0e3f, 0e46], [0e4f, 0e5b], [0e81, 0e82], [0e84, 0e84],
        [0e86, 0e8a], [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0eb0],
        [0eb2, 0eb3], [0ebd, 0ebd], [0ec0, 0ec4], [0ec6, 0ec6],
        [0ed0, 0ed9], [0edc, 0edf], [0f00, 0f17], [0f1a, 0f34],
        [0f36, 0f36], [0f38, 0f38], [0f3a, 0f47], [0f49, 0f6c],
        [0f7f, 0f7f], [0f85, 0f85], [0f88, 0f8c], [0fbe, 0fc5],
        [0fc7, 0fcc], [0fce, 0fda], [1000, 102c], [1031, 1031],
        [1038, 1038], [103b, 103c], [103f, 1057], [105a, 105d],
        [1061, 1070], [1075, 1081], [1083, 1084], [1087, 108c],
        [108e, 109c], [109e, 10c5], [10c7, 10c7], [10cd, 10cd],
        [10d0, 1248], [124a, 124d], [1250, 1256], [1258, 1258],
        [125a, 125d], [1260, 1288], [128a, 128d], [1290, 12b0],
        [12b2, 12b5], [12b8, 12be], [12c0, 12c0], [12c2, 12c5],
        [12c8, 12d6], [12d8, 1310], [1312, 1315], [1318, 135a],
        [1360, 137c], [1380, 1399], [13a0, 13f5], [13f8, 13fd],
        [1400, 169c], [16a0, 16f8], [1700, 170c], [170e, 1711],
        [1720, 1731], [1735, 1736], [1740, 1751], [1760, 176c],
        [176e, 1770], [1780, 17b3], [17b6, 17b6], [17be, 17c5],
        [17c7, 17c8], [17d4, 17dc], [17e0, 17e9], [17f0, 17f9],
        [1800, 180a], [1810, 1819], [1820, 1878], [1880, 1884],
        [1887, 18a8], [18aa, 18aa], [18b0, 18f5], [1900, 191e],
        [1923, 1926], [1929, 192b], [1930, 1931], [1933, 1938],
        [1940, 1940], [1944, 196d], [1970, 1974], [1980, 19ab],
        [19b0, 19c9], [19d0, 19da], [19de, 1a16], [1a19, 1a1a],
        [1a1e, 1a55], [1a57, 1a57], [1a61, 1a61], [1a63, 1a64],
        [1a6d, 1a72], [1a80, 1a89], [1a90, 1a99], [1aa0, 1aad],
        [1b04, 1b33], [1b3b, 1b3b], [1b3d, 1b41], [1b43, 1b4b],
        [1b50, 1b6a], [1b74, 1b7c], [1b82, 1ba1], [1ba6, 1ba7],
        [1baa, 1baa], [1bae, 1be5], [1be7, 1be7], [1bea, 1bec],
        [1bee, 1bee], [1bf2, 1bf3], [1bfc, 1c2b], [1c34, 1c35],
        [1c3b, 1c49], [1c4d, 1c88], [1c90, 1cba], [1cbd, 1cc7],
        [1cd3, 1cd3], [1ce1, 1ce1], [1ce9, 1cec], [1cee, 1cf3],
        [1cf5, 1cf7], [1cfa, 1cfa], [1d00, 1dbf], [1e00, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fc4], [1fc6, 1fd3], [1fd6, 1fdb],
        [1fdd, 1fef], [1ff2, 1ff4], [1ff6, 1ffe], [2000, 200a],
        [2010, 2027], [202f, 205f], [2070, 2071], [2074, 208e],
        [2090, 209c], [20a0, 20bf], [2100, 218b], [2190, 2426],
        [2440, 244a], [2460, 2b73], [2b76, 2b95], [2b97, 2c2e],
        [2c30, 2c5e], [2c60, 2cee], [2cf2, 2cf3], [2cf9, 2d25],
        [2d27, 2d27], [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d70],
        [2d80, 2d96], [2da0, 2da6], [2da8, 2dae], [2db0, 2db6],
        [2db8, 2dbe], [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6],
        [2dd8, 2dde], [2e00, 2e52], [2e80, 2e99], [2e9b, 2ef3],
        [2f00, 2fd5], [2ff0, 2ffb], [3000, 3029], [3030, 303f],
        [3041, 3096], [309b, 30ff], [3105, 312f], [3131, 318e],
        [3190, 31e3], [31f0, 321e], [3220, 9ffc], [a000, a48c],
        [a490, a4c6], [a4d0, a62b], [a640, a66e], [a673, a673],
        [a67e, a69d], [a6a0, a6ef], [a6f2, a6f7], [a700, a7bf],
        [a7c2, a7ca], [a7f5, a801], [a803, a805], [a807, a80a],
        [a80c, a824], [a827, a82b], [a830, a839], [a840, a877],
        [a880, a8c3], [a8ce, a8d9], [a8f2, a8fe], [a900, a925],
        [a92e, a946], [a952, a953], [a95f, a97c], [a983, a9b2],
        [a9b4, a9b5], [a9ba, a9bb], [a9be, a9cd], [a9cf, a9d9],
        [a9de, a9e4], [a9e6, a9fe], [aa00, aa28], [aa2f, aa30],
        [aa33, aa34], [aa40, aa42], [aa44, aa4b], [aa4d, aa4d],
        [aa50, aa59], [aa5c, aa7b], [aa7d, aaaf], [aab1, aab1],
        [aab5, aab6], [aab9, aabd], [aac0, aac0], [aac2, aac2],
        [aadb, aaeb], [aaee, aaf5], [ab01, ab06], [ab09, ab0e],
        [ab11, ab16], [ab20, ab26], [ab28, ab2e], [ab30, ab6b],
        [ab70, abe4], [abe6, abe7], [abe9, abec], [abf0, abf9],
        [ac00, d7a3], [d7b0, d7c6], [d7cb, d7fb], [f900, fa6d],
        [fa70, fad9], [fb00, fb06], [fb13, fb17], [fb1d, fb1d],
        [fb1f, fb36], [fb38, fb3c], [fb3e, fb3e], [fb40, fb41],
        [fb43, fb44], [fb46, fbc1], [fbd3, fd3f], [fd50, fd8f],
        [fd92, fdc7], [fdf0, fdfd], [fe10, fe19], [fe30, fe52],
        [fe54, fe66], [fe68, fe6b], [fe70, fe74], [fe76, fefc],
        [ff01, ff9d], [ffa0, ffbe], [ffc2, ffc7], [ffca, ffcf],
        [ffd2, ffd7], [ffda, ffdc], [ffe0, ffe6], [ffe8, ffee],
        [fffc, fffd], [10000, 1000b], [1000d, 10026], [10028, 1003a],
        [1003c, 1003d], [1003f, 1004d], [10050, 1005d], [10080, 100fa],
        [10100, 10102], [10107, 10133], [10137, 1018e], [10190, 1019c],
        [101a0, 101a0], [101d0, 101fc], [10280, 1029c], [102a0, 102d0],
        [102e1, 102fb], [10300, 10323], [1032d, 1034a], [10350, 10375],
        [10380, 1039d], [1039f, 103c3], [103c8, 103d5], [10400, 1049d],
        [104a0, 104a9], [104b0, 104d3], [104d8, 104fb], [10500, 10527],
        [10530, 10563], [1056f, 1056f], [10600, 10736], [10740, 10755],
        [10760, 10767], [10800, 10805], [10808, 10808], [1080a, 10835],
        [10837, 10838], [1083c, 1083c], [1083f, 10855], [10857, 1089e],
        [108a7, 108af], [108e0, 108f2], [108f4, 108f5], [108fb, 1091b],
        [1091f, 10939], [1093f, 1093f], [10980, 109b7], [109bc, 109cf],
        [109d2, 10a00], [10a10, 10a13], [10a15, 10a17], [10a19, 10a35],
        [10a40, 10a48], [10a50, 10a58], [10a60, 10a9f], [10ac0, 10ae4],
        [10aeb, 10af6], [10b00, 10b35], [10b39, 10b55], [10b58, 10b72],
        [10b78, 10b91], [10b99, 10b9c], [10ba9, 10baf], [10c00, 10c48],
        [10c80, 10cb2], [10cc0, 10cf2], [10cfa, 10d23], [10d30, 10d39],
        [10e60, 10e7e], [10e80, 10ea9], [10ead, 10ead], [10eb0, 10eb1],
        [10f00, 10f27], [10f30, 10f45], [10f51, 10f59], [10fb0, 10fcb],
        [10fe0, 10ff6], [11000, 11000], [11002, 11037], [11047, 1104d],
        [11052, 1106f], [11082, 110b2], [110b7, 110b8], [110bb, 110bc],
        [110be, 110c1], [110d0, 110e8], [110f0, 110f9], [11103, 11126],
        [1112c, 1112c], [11136, 11147], [11150, 11172], [11174, 11176],
        [11182, 111b5], [111bf, 111c8], [111cd, 111ce], [111d0, 111df],
        [111e1, 111f4], [11200, 11211], [11213, 1122e], [11232, 11233],
        [11235, 11235], [11238, 1123d], [11280, 11286], [11288, 11288],
        [1128a, 1128d], [1128f, 1129d], [1129f, 112a9], [112b0, 112de],
        [112e0, 112e2], [112f0, 112f9], [11302, 11303], [11305, 1130c],
        [1130f, 11310], [11313, 11328], [1132a, 11330], [11332, 11333],
        [11335, 11339], [1133d, 1133d], [1133f, 1133f], [11341, 11344],
        [11347, 11348], [1134b, 1134d], [11350, 11350], [1135d, 11363],
        [11400, 11437], [11440, 11441], [11445, 11445], [11447, 1145b],
        [1145d, 1145d], [1145f, 11461], [11480, 114af], [114b1, 114b2],
        [114b9, 114b9], [114bb, 114bc], [114be, 114be], [114c1, 114c1],
        [114c4, 114c7], [114d0, 114d9], [11580, 115ae], [115b0, 115b1],
        [115b8, 115bb], [115be, 115be], [115c1, 115db], [11600, 11632],
        [1163b, 1163c], [1163e, 1163e], [11641, 11644], [11650, 11659],
        [11660, 1166c], [11680, 116aa], [116ac, 116ac], [116ae, 116af],
        [116b6, 116b6], [116b8, 116b8], [116c0, 116c9], [11700, 1171a],
        [11720, 11721], [11726, 11726], [11730, 1173f], [11800, 1182e],
        [11838, 11838], [1183b, 1183b], [118a0, 118f2], [118ff, 11906],
        [11909, 11909], [1190c, 11913], [11915, 11916], [11918, 1192f],
        [11931, 11935], [11937, 11938], [1193d, 1193d], [1193f, 11942],
        [11944, 11946], [11950, 11959], [119a0, 119a7], [119aa, 119d3],
        [119dc, 119df], [119e1, 119e4], [11a00, 11a00], [11a0b, 11a32],
        [11a39, 11a3a], [11a3f, 11a46], [11a50, 11a50], [11a57, 11a58],
        [11a5c, 11a89], [11a97, 11a97], [11a9a, 11aa2], [11ac0, 11af8],
        [11c00, 11c08], [11c0a, 11c2f], [11c3e, 11c3e], [11c40, 11c45],
        [11c50, 11c6c], [11c70, 11c8f], [11ca9, 11ca9], [11cb1, 11cb1],
        [11cb4, 11cb4], [11d00, 11d06], [11d08, 11d09], [11d0b, 11d30],
        [11d46, 11d46], [11d50, 11d59], [11d60, 11d65], [11d67, 11d68],
        [11d6a, 11d8e], [11d93, 11d94], [11d96, 11d96], [11d98, 11d98],
        [11da0, 11da9], [11ee0, 11ef2], [11ef5, 11ef8], [11fb0, 11fb0],
        [11fc0, 11ff1], [11fff, 12399], [12400, 1246e], [12470, 12474],
        [12480, 12543], [13000, 1342e], [14400, 14646], [16800, 16a38],
        [16a40, 16a5e], [16a60, 16a69], [16a6e, 16a6f], [16ad0, 16aed],
        [16af5, 16af5], [16b00, 16b2f], [16b37, 16b45], [16b50, 16b59],
        [16b5b, 16b61], [16b63, 16b77], [16b7d, 16b8f], [16e40, 16e9a],
        [16f00, 16f4a], [16f50, 16f87], [16f93, 16f9f], [16fe0, 16fe3],
        [16ff0, 16ff1], [17000, 187f7], [18800, 18cd5], [18d00, 18d08],
        [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167], [1b170, 1b2fb],
        [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88], [1bc90, 1bc99],
        [1bc9c, 1bc9c], [1bc9f, 1bc9f], [1d000, 1d0f5], [1d100, 1d126],
        [1d129, 1d164], [1d166, 1d166], [1d16a, 1d16d], [1d183, 1d184],
        [1d18c, 1d1a9], [1d1ae, 1d1e8], [1d200, 1d241], [1d245, 1d245],
        [1d2e0, 1d2f3], [1d300, 1d356], [1d360, 1d378], [1d400, 1d454],
        [1d456, 1d49c], [1d49e, 1d49f], [1d4a2, 1d4a2], [1d4a5, 1d4a6],
        [1d4a9, 1d4ac], [1d4ae, 1d4b9], [1d4bb, 1d4bb], [1d4bd, 1d4c3],
        [1d4c5, 1d505], [1d507, 1d50a], [1d50d, 1d514], [1d516, 1d51c],
        [1d51e, 1d539], [1d53b, 1d53e], [1d540, 1d544], [1d546, 1d546],
        [1d54a, 1d550], [1d552, 1d6a5], [1d6a8, 1d7cb], [1d7ce, 1d9ff],
        [1da37, 1da3a], [1da6d, 1da74], [1da76, 1da83], [1da85, 1da8b],
        [1e100, 1e12c], [1e137, 1e13d], [1e140, 1e149], [1e14e, 1e14f],
        [1e2c0, 1e2eb], [1e2f0, 1e2f9], [1e2ff, 1e2ff], [1e800, 1e8c4],
        [1e8c7, 1e8cf], [1e900, 1e943], [1e94b, 1e94b], [1e950, 1e959],
        [1e95e, 1e95f], [1ec71, 1ecb4], [1ed01, 1ed3d], [1ee00, 1ee03],
        [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24], [1ee27, 1ee27],
        [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39], [1ee3b, 1ee3b],
        [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49], [1ee4b, 1ee4b],
        [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54], [1ee57, 1ee57],
        [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d], [1ee5f, 1ee5f],
        [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a], [1ee6c, 1ee72],
        [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e], [1ee80, 1ee89],
        [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9], [1eeab, 1eebb],
        [1eef0, 1eef1], [1f000, 1f02b], [1f030, 1f093], [1f0a0, 1f0ae],
        [1f0b1, 1f0bf], [1f0c1, 1f0cf], [1f0d1, 1f0f5], [1f100, 1f1ad],
        [1f1e6, 1f202], [1f210, 1f23b], [1f240, 1f248], [1f250, 1f251],
        [1f260, 1f265], [1f300, 1f6d7], [1f6e0, 1f6ec], [1f6f0, 1f6fc],
        [1f700, 1f773], [1f780, 1f7d8], [1f7e0, 1f7eb], [1f800, 1f80b],
        [1f810, 1f847], [1f850, 1f859], [1f860, 1f887], [1f890, 1f8ad],
        [1f8b0, 1f8b1], [1f900, 1f978], [1f97a, 1f9cb], [1f9cd, 1fa53],
        [1fa60, 1fa6d], [1fa70, 1fa74], [1fa78, 1fa7a], [1fa80, 1fa86],
        [1fa90, 1faa8], [1fab0, 1fab6], [1fac0, 1fac2], [1fad0, 1fad6],
        [1fb00, 1fb92], [1fb94, 1fbca], [1fbf0, 1fbf9], [20000, 2a6dd],
        [2a700, 2b734], [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0],
        [2f800, 2fa1d], [30000, 3134a]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Full, 18}, {Empty, 3}, {Mixed, 3}, {Full, 6}, {Mixed, 1},
        {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Full, 1}, {Mixed, 2},
        {Full, 2}, {Mixed, 5}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 5},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 43}, {Empty, 1},
        {Mixed, 3}, {Empty, 1}, {Mixed, 7}, {Empty, 1}, {Full, 1},
        {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 11}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Full, 20}, {Mixed, 1}, {Full, 2},
        {Mixed, 5}, {Full, 1}, {Mixed, 4}, {Full, 2}, {Mixed, 3}, {Full, 1},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 4}, {Empty, 2}, {Mixed, 6}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 6}, {Empty, 2},
        {Full, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 5},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Empty, 2}, {Full, 4}, {Mixed, 1},
        {Full, 20}, {Mixed, 2}, {Full, 56}, {Mixed, 2}, {Full, 4},
        {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 4}, {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 6}, {Mixed, 2}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 2}, {Full, 2},
        {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 878}, {Mixed, 1},
        {Full, 36}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 10},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Full, 6},
        {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 1},
        {Mixed, 7}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 5}, {Full, 1},
        {Mixed, 1}, {Full, 3}, {Mixed, 1}, {Full, 349}, {Mixed, 3},
        {Empty, 264}, {Full, 11}, {Mixed, 1}, {Full, 2}, {Mixed, 1},
        {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 1}, {Full, 11},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 6}, {Full, 3},
        {Mixed, 2}, {Full, 3}, {Mixed, 7}, {Empty, 1}, {Full, 3},
        {Mixed, 3}, {Full, 2}, {Mixed, 4}, {Empty, 4}, {Mixed, 1},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4},
        {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3},
        {Empty, 2}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2},
        {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5},
        {Empty, 2}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 9}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Full, 1}, {Mixed, 2}, {Empty, 2}, {Mixed, 21}, {Empty, 2},
        {Mixed, 8}, {Empty, 4}, {Full, 1}, {Mixed, 3}, {Full, 1},
        {Mixed, 2}, {Empty, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 2}, {Empty, 6}, {Full, 1}, {Mixed, 1}, {Empty, 3},
        {Full, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 6}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 6},
        {Empty, 2}, {Mixed, 6}, {Empty, 9}, {Mixed, 1}, {Empty, 5},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 3}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1},
        {Full, 38}, {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279},
        {Full, 8}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11},
        {Mixed, 1}, {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 155},
        {Full, 7}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 4},
        {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Empty, 4}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 10}, {Mixed, 1}, {Full, 8}, {Mixed, 1}, {Full, 17},
        {Empty, 1}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 51},
        {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1},
        {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 24}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 6}, {Empty, 1},
        {Mixed, 1}, {Empty, 8}, {Full, 1}, {Mixed, 1}, {Full, 2},
        {Mixed, 4}, {Full, 5}, {Mixed, 1}, {Empty, 1}, {Mixed, 5},
        {Empty, 4}, {Full, 30}, {Mixed, 2}, {Full, 3}, {Mixed, 1},
        {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 2},
        {Empty, 2}, {Full, 3}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Full, 3},
        {Mixed, 5}, {Empty, 1}, {Full, 4}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Empty, 32}, {Full, 1334}, {Mixed, 1}, {Empty, 1},
        {Full, 129}, {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180},
        {Mixed, 1}, {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16},
        {Mixed, 1}, {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 28517}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x7fffffff, 0xffffdfff, 0xfcff0000, 0xffffd7f0, 0xfffffffb,
        0xfffffc07, 0xfffeffff, 0xfe7fffff, 0x0000e7ff, 0x40000000,
        0xffff0049, 0x001f87ff, 0xc800ffc0, 0x000007ff, 0xfffeffff,
        0x403fffff, 0xffffc260, 0xfffd3fff, 0x0000ffff, 0xffffe000,
        0x0002003f, 0xc7f007ff, 0x043fffff, 0x7fff0110, 0x41ffffff,
        0x000007ff, 0xffdfffff, 0x000000ff, 0xfffffff8, 0xebffffff,
        0xff01de01, 0xfffffff3, 0xfff99fed, 0xa3c5fdff, 0xb0005981,
        0x3fffffc3, 0xfff987e8, 0xc36dfdff, 0x5e000001, 0x005cffc0,
        0xfffbbfe8, 0xe3edfdff, 0x00011a01, 0x0203ffc3, 0xfff99fec,
        0x23edfdff, 0xb0001981, 0x00ffffc3, 0xd63dc7e8, 0x83ffc718,
        0x00011dc6, 0x07ffffc0, 0xfffddfee, 0x23fffdff, 0x0700001e,
        0xff80ffc3, 0xfffddffd, 0x63effdff, 0x40000d9b, 0x0006ffc3,
        0xfffddffc, 0xa7ffffff, 0xff70ddc1, 0xffffffc3, 0xfc7fffec,
        0x2ffbffff, 0x7f03007f, 0x001cffc0, 0xfffffffe, 0x800dffff,
        0x0fff807f, 0xfffff7d6, 0x200dffaf, 0xf3ff005f, 0xfcffffff,
        0xfd5fffff, 0xfffffeff, 0x80001fff, 0x00001f20, 0xc0000000,
        0x07ffdfbf, 0x99021fff, 0x3cffffff, 0xffe1fffe, 0xdfffdf9b,
        0xffff20bf, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d,
        0xff3dffff, 0x07ffffff, 0x1fffffff, 0x03ffffff, 0x3f3fffff,
        0x1fffffff, 0x01ffffff, 0x0003dfff, 0x0063ffff, 0x0003ffff,
        0x0001dfff, 0xc04fffff, 0x1ff001bf, 0x03ff03ff, 0x03ff07ff,
        0x01ffffff, 0xffffff9f, 0xffff05ff, 0x003fffff, 0x7fffffff,
        0x01fb0e78, 0xfffffff1, 0x001f3fff, 0xffff0fff, 0xc7ff03ff,
        0xc67fffff, 0x00bfffff, 0x0007e01a, 0x03ff03ff, 0x00003fff,
        0xfffffff0, 0xe80fffff, 0xffff0ffb, 0x1ff007ff, 0xfffffffc,
        0xffffc4c3, 0xf00c5cbf, 0xf8300fff, 0xffffe3ff, 0xffff01ff,
        0xe7ffffff, 0x000800ff, 0x04efde02, 0x3f3fffff, 0xaaff3f3f,
        0x3fffffff, 0xffdfffff, 0xefcfffdf, 0x7fdcffff, 0xffff07ff,
        0xffff80ff, 0xfff30000, 0x1fff7fff, 0xffff0fff, 0x0000007f,
        0x000007ff, 0xffcfffff, 0xffbfffff, 0xffff7fff, 0x7fffffff,
        0xfe0c7fff, 0xffff20bf, 0x000180ff, 0x007fffff, 0x7f7f7f7f,
        0x7f7f7f7f, 0x0007ffff, 0xfbffffff, 0x000fffff, 0x003fffff,
        0x0fff0000, 0xffff03ff, 0xfffffffe, 0xf87fffff, 0xffffffe0,
        0xfffeffff, 0xffff7fff, 0xffff000f, 0x7fffffff, 0x1fffffff,
        0xffff1fff, 0xffff007f, 0x00000fff, 0xc0087fff, 0x3fffffff,
        0x00fcffff, 0x000007fc, 0xffe00000, 0xfffff7bb, 0x03ff0f9f,
        0x00ffffff, 0x03ffc00f, 0x7ffc0000, 0xffffc03f, 0x800c007f,
        0x1fffffff, 0xfffffff8, 0xcc37ffff, 0xc3ffbfff, 0x7fffffdf,
        0x001981ff, 0xf3ff2ff7, 0xefffffff, 0x3e62ffff, 0xf8000005,
        0x003fcfff, 0x007e7e7e, 0xffff7f7f, 0xffff0fff, 0x03ff1edf,
        0xffff000f, 0xfffff87f, 0x0fffffff, 0xffff3fff, 0x03ffffff,
        0xa0f8007f, 0x5f7fffff, 0xffffffdb, 0xfff80003, 0xffff0000,
        0xfffcffff, 0x000000ff, 0x3fff0000, 0x03ff0000, 0xffff0000,
        0xfff7ffff, 0xffdf0f7f, 0x1fffffff, 0xfffffffe, 0x3fffffff,
        0x7fffffff, 0x1cfcfcfc, 0x30007f7f, 0xffffefff, 0xb7ffff7f,
        0x3fff3fff, 0x07ffffff, 0xffffff87, 0xff8fffff, 0x1fff7fff,
        0x00000001, 0xffff0000, 0x1fffffff, 0x1fffffff, 0x0001ffff,
        0x0ffffffe, 0xffffe00f, 0xffff07ff, 0x003fffff, 0xbfffffff,
        0x003fff0f, 0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000800f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0xffbfffff, 0x7fffffff, 0x0000ff80,
        0xf837ffff, 0x8fffffff, 0x83ffffff, 0xf0ffffff, 0xfffcffff,
        0xfeef0001, 0x003fffff, 0x01ff01ff, 0x007ff81f, 0xfe3fffff,
        0xff3fffff, 0xff07ffff, 0x1e03ffff, 0x0000fe00, 0x000001ff,
        0x0007ffff, 0xfc07ffff, 0x03ff000f, 0x7fffffff, 0x000323ff,
        0xffff00ff, 0x03fe003f, 0xffff0000, 0x00000fff, 0x007fffff,
        0xfffffffd, 0x00ffffff, 0xfffc3f80, 0x0000ffff, 0xfffffffc,
        0xd987ffff, 0xffff0003, 0x03ff01ff, 0xfffffff8, 0xffc0107f,
        0xffff00ff, 0x0077ffff, 0xfffffffc, 0x803fffff, 0xffff61ff,
        0x001ffffe, 0xfffbffff, 0x3f2c7fff, 0xbfffbd7f, 0xffff03ff,
        0x7fffffff, 0x03ff0007, 0xfff99fec, 0xa3edfdff, 0xe001399e,
        0x0000000f, 0x00ffffff, 0xafffffa3, 0x00000003, 0x5a06ffff,
        0x03ff00f2, 0x4f037fff, 0x0ffffffe, 0x5807ffff, 0x03ff001e,
        0x00001fff, 0x0140d7ff, 0x000003ff, 0x07ffffff, 0xffff0043,
        0x09007fff, 0x8007ffff, 0xff6ff27f, 0xa1beffff, 0x03ff0077,
        0xfffffcff, 0xf00fffff, 0x0000001e, 0xfffff801, 0x8607ffff,
        0xf181007f, 0xfc8003ff, 0x00000007, 0x01ffffff, 0xfffffdff,
        0x4000ffff, 0xffff003f, 0xffff1fff, 0x0000ffff, 0x00120200,
        0xfffffb7f, 0x0001ffff, 0x03ff0040, 0xfffffdbf, 0x01587fff,
        0x000003ff, 0x01e7ffff, 0x00010000, 0x8003ffff, 0x03ffffff,
        0x001f7fff, 0x0000000f, 0x00007fff, 0x0000007f, 0x01ffffff,
        0x7fffffff, 0x0000c3ff, 0xffff0000, 0x00203fff, 0xff80ffff,
        0xfbff003f, 0xe0fffffb, 0x0000ffff, 0x07ffffff, 0xffff07ff,
        0xfff800ff, 0x0003000f, 0x00ffffff, 0x003fffff, 0x000001ff,
        0x7fffffff, 0x00070000, 0xffff00f0, 0x0fffffff, 0x1fff07ff,
        0x93ff01ff, 0x003fffff, 0xfffffe7f, 0x00003c5f, 0xfffff018,
        0xffffc3ff, 0x000001ff, 0x00000023, 0x000fffff, 0x007fffff,
        0x01ffffff, 0xffdfffff, 0xdfffffff, 0xebffde64, 0xffffffef,
        0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffff3f, 0xffffcfff,
        0x07800000, 0xffdfe000, 0x00000fef, 0x3f801fff, 0x0000c3ff,
        0x83ff0fff, 0x0000ff9f, 0xc3ff080f, 0xfffe0000, 0x001fffff,
        0xfffffffe, 0x3fffffff, 0xffffffef, 0x0af7fe96, 0xaa96ea84,
        0x5ef7f796, 0x0ffffbff, 0x0ffffbee, 0x00030000, 0xffff0fff,
        0x000fffff, 0xfffe7fff, 0xfffefffe, 0x003fffff, 0x00003fff,
        0xffffffc0, 0xffff0007, 0x0fffffff, 0x000301ff, 0x0000003f,
        0x00ffffff, 0x1fff1fff, 0x000fffff, 0x01ffffff, 0x00000fff,
        0xffff0fff, 0x03ff00ff, 0xffff00ff, 0x00033fff, 0xfdffffff,
        0xffffefff, 0x000fffff, 0x071f3fff, 0xffff007f, 0x007f01ff,
        0x007f0007, 0xfff7ffff, 0x000007ff, 0x03ff0000, 0x3fffffff,
        0x001fffff, 0x3fffffff, 0xffff0003, 0x00000001, 0x3fffffff,
        0x000007ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 411, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 451, 0};

        static BinaryPropertyObject property_object{Gr_Base, std::move(codepoint_set)};
    }
PropertyObject * get_GR_BASE_PropertyObject() {  return & GR_BASE_ns::property_object; }
    namespace GR_EXT_ns {
        /** Code Point Ranges for Gr_Ext
        [0300, 036f], [0483, 0489], [0591, 05bd], [05bf, 05bf],
        [05c1, 05c2], [05c4, 05c5], [05c7, 05c7], [0610, 061a],
        [064b, 065f], [0670, 0670], [06d6, 06dc], [06df, 06e4],
        [06e7, 06e8], [06ea, 06ed], [0711, 0711], [0730, 074a],
        [07a6, 07b0], [07eb, 07f3], [07fd, 07fd], [0816, 0819],
        [081b, 0823], [0825, 0827], [0829, 082d], [0859, 085b],
        [08d3, 08e1], [08e3, 0902], [093a, 093a], [093c, 093c],
        [0941, 0948], [094d, 094d], [0951, 0957], [0962, 0963],
        [0981, 0981], [09bc, 09bc], [09be, 09be], [09c1, 09c4],
        [09cd, 09cd], [09d7, 09d7], [09e2, 09e3], [09fe, 09fe],
        [0a01, 0a02], [0a3c, 0a3c], [0a41, 0a42], [0a47, 0a48],
        [0a4b, 0a4d], [0a51, 0a51], [0a70, 0a71], [0a75, 0a75],
        [0a81, 0a82], [0abc, 0abc], [0ac1, 0ac5], [0ac7, 0ac8],
        [0acd, 0acd], [0ae2, 0ae3], [0afa, 0aff], [0b01, 0b01],
        [0b3c, 0b3c], [0b3e, 0b3f], [0b41, 0b44], [0b4d, 0b4d],
        [0b55, 0b57], [0b62, 0b63], [0b82, 0b82], [0bbe, 0bbe],
        [0bc0, 0bc0], [0bcd, 0bcd], [0bd7, 0bd7], [0c00, 0c00],
        [0c04, 0c04], [0c3e, 0c40], [0c46, 0c48], [0c4a, 0c4d],
        [0c55, 0c56], [0c62, 0c63], [0c81, 0c81], [0cbc, 0cbc],
        [0cbf, 0cbf], [0cc2, 0cc2], [0cc6, 0cc6], [0ccc, 0ccd],
        [0cd5, 0cd6], [0ce2, 0ce3], [0d00, 0d01], [0d3b, 0d3c],
        [0d3e, 0d3e], [0d41, 0d44], [0d4d, 0d4d], [0d57, 0d57],
        [0d62, 0d63], [0d81, 0d81], [0dca, 0dca], [0dcf, 0dcf],
        [0dd2, 0dd4], [0dd6, 0dd6], [0ddf, 0ddf], [0e31, 0e31],
        [0e34, 0e3a], [0e47, 0e4e], [0eb1, 0eb1], [0eb4, 0ebc],
        [0ec8, 0ecd], [0f18, 0f19], [0f35, 0f35], [0f37, 0f37],
        [0f39, 0f39], [0f71, 0f7e], [0f80, 0f84], [0f86, 0f87],
        [0f8d, 0f97], [0f99, 0fbc], [0fc6, 0fc6], [102d, 1030],
        [1032, 1037], [1039, 103a], [103d, 103e], [1058, 1059],
        [105e, 1060], [1071, 1074], [1082, 1082], [1085, 1086],
        [108d, 108d], [109d, 109d], [135d, 135f], [1712, 1714],
        [1732, 1734], [1752, 1753], [1772, 1773], [17b4, 17b5],
        [17b7, 17bd], [17c6, 17c6], [17c9, 17d3], [17dd, 17dd],
        [180b, 180d], [1885, 1886], [18a9, 18a9], [1920, 1922],
        [1927, 1928], [1932, 1932], [1939, 193b], [1a17, 1a18],
        [1a1b, 1a1b], [1a56, 1a56], [1a58, 1a5e], [1a60, 1a60],
        [1a62, 1a62], [1a65, 1a6c], [1a73, 1a7c], [1a7f, 1a7f],
        [1ab0, 1ac0], [1b00, 1b03], [1b34, 1b3a], [1b3c, 1b3c],
        [1b42, 1b42], [1b6b, 1b73], [1b80, 1b81], [1ba2, 1ba5],
        [1ba8, 1ba9], [1bab, 1bad], [1be6, 1be6], [1be8, 1be9],
        [1bed, 1bed], [1bef, 1bf1], [1c2c, 1c33], [1c36, 1c37],
        [1cd0, 1cd2], [1cd4, 1ce0], [1ce2, 1ce8], [1ced, 1ced],
        [1cf4, 1cf4], [1cf8, 1cf9], [1dc0, 1df9], [1dfb, 1dff],
        [200c, 200c], [20d0, 20f0], [2cef, 2cf1], [2d7f, 2d7f],
        [2de0, 2dff], [302a, 302f], [3099, 309a], [a66f, a672],
        [a674, a67d], [a69e, a69f], [a6f0, a6f1], [a802, a802],
        [a806, a806], [a80b, a80b], [a825, a826], [a82c, a82c],
        [a8c4, a8c5], [a8e0, a8f1], [a8ff, a8ff], [a926, a92d],
        [a947, a951], [a980, a982], [a9b3, a9b3], [a9b6, a9b9],
        [a9bc, a9bd], [a9e5, a9e5], [aa29, aa2e], [aa31, aa32],
        [aa35, aa36], [aa43, aa43], [aa4c, aa4c], [aa7c, aa7c],
        [aab0, aab0], [aab2, aab4], [aab7, aab8], [aabe, aabf],
        [aac1, aac1], [aaec, aaed], [aaf6, aaf6], [abe5, abe5],
        [abe8, abe8], [abed, abed], [fb1e, fb1e], [fe00, fe0f],
        [fe20, fe2f], [ff9e, ff9f], [101fd, 101fd], [102e0, 102e0],
        [10376, 1037a], [10a01, 10a03], [10a05, 10a06], [10a0c, 10a0f],
        [10a38, 10a3a], [10a3f, 10a3f], [10ae5, 10ae6], [10d24, 10d27],
        [10eab, 10eac], [10f46, 10f50], [11001, 11001], [11038, 11046],
        [1107f, 11081], [110b3, 110b6], [110b9, 110ba], [11100, 11102],
        [11127, 1112b], [1112d, 11134], [11173, 11173], [11180, 11181],
        [111b6, 111be], [111c9, 111cc], [111cf, 111cf], [1122f, 11231],
        [11234, 11234], [11236, 11237], [1123e, 1123e], [112df, 112df],
        [112e3, 112ea], [11300, 11301], [1133b, 1133c], [1133e, 1133e],
        [11340, 11340], [11357, 11357], [11366, 1136c], [11370, 11374],
        [11438, 1143f], [11442, 11444], [11446, 11446], [1145e, 1145e],
        [114b0, 114b0], [114b3, 114b8], [114ba, 114ba], [114bd, 114bd],
        [114bf, 114c0], [114c2, 114c3], [115af, 115af], [115b2, 115b5],
        [115bc, 115bd], [115bf, 115c0], [115dc, 115dd], [11633, 1163a],
        [1163d, 1163d], [1163f, 11640], [116ab, 116ab], [116ad, 116ad],
        [116b0, 116b5], [116b7, 116b7], [1171d, 1171f], [11722, 11725],
        [11727, 1172b], [1182f, 11837], [11839, 1183a], [11930, 11930],
        [1193b, 1193c], [1193e, 1193e], [11943, 11943], [119d4, 119d7],
        [119da, 119db], [119e0, 119e0], [11a01, 11a0a], [11a33, 11a38],
        [11a3b, 11a3e], [11a47, 11a47], [11a51, 11a56], [11a59, 11a5b],
        [11a8a, 11a96], [11a98, 11a99], [11c30, 11c36], [11c38, 11c3d],
        [11c3f, 11c3f], [11c92, 11ca7], [11caa, 11cb0], [11cb2, 11cb3],
        [11cb5, 11cb6], [11d31, 11d36], [11d3a, 11d3a], [11d3c, 11d3d],
        [11d3f, 11d45], [11d47, 11d47], [11d90, 11d91], [11d95, 11d95],
        [11d97, 11d97], [11ef3, 11ef4], [16af0, 16af4], [16b30, 16b36],
        [16f4f, 16f4f], [16f8f, 16f92], [16fe4, 16fe4], [1bc9d, 1bc9e],
        [1d165, 1d165], [1d167, 1d169], [1d16e, 1d172], [1d17b, 1d182],
        [1d185, 1d18b], [1d1aa, 1d1ad], [1d242, 1d244], [1da00, 1da36],
        [1da3b, 1da6c], [1da75, 1da75], [1da84, 1da84], [1da9b, 1da9f],
        [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021],
        [1e023, 1e024], [1e026, 1e02a], [1e130, 1e136], [1e2ec, 1e2ef],
        [1e8d0, 1e8d6], [1e944, 1e94a], [e0020, e007f], [e0100, e01ef]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 24}, {Full, 3}, {Mixed, 1}, {Empty, 8}, {Mixed, 1},
        {Empty, 7}, {Mixed, 3}, {Empty, 1}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Empty, 2}, {Mixed, 5}, {Empty, 2}, {Mixed, 1},
        {Empty, 1}, {Mixed, 4}, {Empty, 3}, {Mixed, 25}, {Empty, 1},
        {Mixed, 13}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 4}, {Empty, 2}, {Mixed, 4}, {Empty, 21}, {Mixed, 1},
        {Empty, 29}, {Mixed, 4}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 1},
        {Empty, 6}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 6}, {Empty, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 4}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 1}, {Empty, 16}, {Mixed, 1}, {Empty, 5},
        {Mixed, 2}, {Empty, 95}, {Mixed, 1}, {Empty, 3}, {Mixed, 1},
        {Empty, 3}, {Full, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Empty, 942}, {Mixed, 2}, {Empty, 2}, {Mixed, 1},
        {Empty, 8}, {Mixed, 2}, {Empty, 4}, {Mixed, 2}, {Empty, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 7},
        {Mixed, 1}, {Empty, 632}, {Mixed, 1}, {Empty, 23}, {Mixed, 2},
        {Empty, 10}, {Mixed, 1}, {Empty, 18}, {Mixed, 1}, {Empty, 7},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 52}, {Mixed, 2},
        {Empty, 5}, {Mixed, 1}, {Empty, 17}, {Mixed, 1}, {Empty, 11},
        {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Empty, 5}, {Mixed, 6},
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 4}, {Empty, 2},
        {Mixed, 1}, {Empty, 4}, {Mixed, 6}, {Empty, 5}, {Mixed, 2},
        {Empty, 2}, {Mixed, 2}, {Empty, 6}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Empty, 2}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 7}, {Mixed, 1}, {Empty, 7}, {Mixed, 2}, {Empty, 3},
        {Mixed, 5}, {Empty, 1}, {Mixed, 1}, {Empty, 12}, {Mixed, 1},
        {Empty, 2}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Empty, 1},
        {Mixed, 1}, {Empty, 10}, {Mixed, 1}, {Empty, 607}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 32}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 612}, {Mixed, 1},
        {Empty, 166}, {Mixed, 3}, {Empty, 4}, {Mixed, 1}, {Empty, 61},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Empty, 42},
        {Mixed, 2}, {Empty, 7}, {Mixed, 1}, {Empty, 13}, {Mixed, 1},
        {Empty, 46}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 24758},
        {Full, 3}, {Empty, 4}, {Full, 7}, {Mixed, 1}, {Empty, 6128}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x0000ffff, 0x000003f8, 0xfffe0000, 0xbfffffff, 0x000000b6,
        0x07ff0000, 0xfffff800, 0x00010000, 0x9fc00000, 0x00003d9f,
        0x00020000, 0xffff0000, 0x000007ff, 0x0001ffc0, 0x200ff800,
        0xfbc00000, 0x00003eef, 0x0e000000, 0xfff80000, 0xfffffffb,
        0x00000007, 0x14000000, 0x00fe21fe, 0x0000000c, 0x00000002,
        0x50000000, 0x0080201e, 0x4000000c, 0x00000006, 0x10000000,
        0x00023986, 0x00230000, 0x00000006, 0x10000000, 0x000021be,
        0xfc00000c, 0x00000002, 0xd0000000, 0x00e0201e, 0x0000000c,
        0x00000004, 0x40000000, 0x00802001, 0x00000011, 0xc0000000,
        0x00603dc1, 0x0000000c, 0x00000002, 0x90000000, 0x00603044,
        0x0000000c, 0x00000003, 0x58000000, 0x0080201e, 0x0000000c,
        0x00000002, 0x805c8400, 0x07f20000, 0x00007f80, 0x1ff20000,
        0x00003f00, 0x03000000, 0x02a00000, 0x7ffe0000, 0xfeffe0df,
        0x1fffffff, 0x00000040, 0x66fde000, 0xc3000000, 0x001e0001,
        0x20002064, 0xe0000000, 0x001c0000, 0x001c0000, 0x000c0000,
        0x000c0000, 0x3fb00000, 0x200ffe40, 0x00003800, 0x00000060,
        0x00000200, 0x0e040187, 0x09800000, 0x7f400000, 0x9ff81fe5,
        0xffff0000, 0x00000001, 0x0000000f, 0x17f00000, 0x00000004,
        0x000ff800, 0x00000003, 0x00003b3c, 0x0003a340, 0x00cff000,
        0xfff70000, 0x031021fd, 0xfbffffff, 0x00001000, 0xffff0000,
        0x0001ffff, 0x00038000, 0x80000000, 0x0000fc00, 0x06000000,
        0x3ff78000, 0xc0000000, 0x00030000, 0x00000844, 0x00001060,
        0x00000030, 0x8003ffff, 0x00003fc0, 0x0003ff80, 0x00000007,
        0x33c80000, 0x00000020, 0x00667e00, 0x00001008, 0x10000000,
        0xc19d0000, 0x00000002, 0x00403000, 0x00002120, 0x40000000,
        0x0000ffff, 0x0000ffff, 0xc0000000, 0x20000000, 0x00000001,
        0x07c00000, 0x0000f06e, 0x87000000, 0x00000060, 0x000000f0,
        0x00001800, 0x0001ffc0, 0x00000002, 0xff000000, 0x0000007f,
        0x80000000, 0x00000003, 0x06780000, 0x00000007, 0x001fef80,
        0x00080000, 0x00000003, 0x7fc00000, 0x00009e00, 0x40d38000,
        0x80000000, 0x000007f8, 0x00000003, 0x58000000, 0x00800001,
        0x001f1fc0, 0xff000000, 0x4000005c, 0xa5f90000, 0x0000000d,
        0xb03c8000, 0x30000001, 0xa7f80000, 0x00000001, 0x00bf2800,
        0xe0000000, 0x00000fbc, 0x06ff8000, 0x58010000, 0x00000008,
        0x0cf00000, 0x00000001, 0x000007fe, 0x79f80000, 0x0e7e0080,
        0x037ffc00, 0xbf7f0000, 0xfffc0000, 0x006dfcff, 0xb47e0000,
        0x000000bf, 0x00a30000, 0x00180000, 0x001f0000, 0x007f0000,
        0x00008000, 0x00078000, 0x00000010, 0x60000000, 0xf807c3a0,
        0x00000fe7, 0x00003c00, 0x0000001c, 0xf87fffff, 0x00201fff,
        0xf8000010, 0x0000fffe, 0xf9ffff7f, 0x000007db, 0x007f0000,
        0x0000f000, 0x007f0000, 0x000007f0, 0x0000ffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 195, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 204, 0};

        static BinaryPropertyObject property_object{Gr_Ext, std::move(codepoint_set)};
    }
PropertyObject * get_GR_EXT_PropertyObject() {  return & GR_EXT_ns::property_object; }
    namespace GR_LINK_ns {
        static ObsoletePropertyObject property_object(Gr_Link);
    }
PropertyObject * get_GR_LINK_PropertyObject() {  return & GR_LINK_ns::property_object; }
    namespace IDC_ns {
        /** Code Point Ranges for IDC
        [0030, 0039], [0041, 005a], [005f, 005f], [0061, 007a],
        [00aa, 00aa], [00b5, 00b5], [00b7, 00b7], [00ba, 00ba],
        [00c0, 00d6], [00d8, 00f6], [00f8, 02c1], [02c6, 02d1],
        [02e0, 02e4], [02ec, 02ec], [02ee, 02ee], [0300, 0374],
        [0376, 0377], [037a, 037d], [037f, 037f], [0386, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 03f5], [03f7, 0481],
        [0483, 0487], [048a, 052f], [0531, 0556], [0559, 0559],
        [0560, 0588], [0591, 05bd], [05bf, 05bf], [05c1, 05c2],
        [05c4, 05c5], [05c7, 05c7], [05d0, 05ea], [05ef, 05f2],
        [0610, 061a], [0620, 0669], [066e, 06d3], [06d5, 06dc],
        [06df, 06e8], [06ea, 06fc], [06ff, 06ff], [0710, 074a],
        [074d, 07b1], [07c0, 07f5], [07fa, 07fa], [07fd, 07fd],
        [0800, 082d], [0840, 085b], [0860, 086a], [08a0, 08b4],
        [08b6, 08c7], [08d3, 08e1], [08e3, 0963], [0966, 096f],
        [0971, 0983], [0985, 098c], [098f, 0990], [0993, 09a8],
        [09aa, 09b0], [09b2, 09b2], [09b6, 09b9], [09bc, 09c4],
        [09c7, 09c8], [09cb, 09ce], [09d7, 09d7], [09dc, 09dd],
        [09df, 09e3], [09e6, 09f1], [09fc, 09fc], [09fe, 09fe],
        [0a01, 0a03], [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28],
        [0a2a, 0a30], [0a32, 0a33], [0a35, 0a36], [0a38, 0a39],
        [0a3c, 0a3c], [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4d],
        [0a51, 0a51], [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a75],
        [0a81, 0a83], [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8],
        [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9], [0abc, 0ac5],
        [0ac7, 0ac9], [0acb, 0acd], [0ad0, 0ad0], [0ae0, 0ae3],
        [0ae6, 0aef], [0af9, 0aff], [0b01, 0b03], [0b05, 0b0c],
        [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33],
        [0b35, 0b39], [0b3c, 0b44], [0b47, 0b48], [0b4b, 0b4d],
        [0b55, 0b57], [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b6f],
        [0b71, 0b71], [0b82, 0b83], [0b85, 0b8a], [0b8e, 0b90],
        [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c], [0b9e, 0b9f],
        [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9], [0bbe, 0bc2],
        [0bc6, 0bc8], [0bca, 0bcd], [0bd0, 0bd0], [0bd7, 0bd7],
        [0be6, 0bef], [0c00, 0c0c], [0c0e, 0c10], [0c12, 0c28],
        [0c2a, 0c39], [0c3d, 0c44], [0c46, 0c48], [0c4a, 0c4d],
        [0c55, 0c56], [0c58, 0c5a], [0c60, 0c63], [0c66, 0c6f],
        [0c80, 0c83], [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8],
        [0caa, 0cb3], [0cb5, 0cb9], [0cbc, 0cc4], [0cc6, 0cc8],
        [0cca, 0ccd], [0cd5, 0cd6], [0cde, 0cde], [0ce0, 0ce3],
        [0ce6, 0cef], [0cf1, 0cf2], [0d00, 0d0c], [0d0e, 0d10],
        [0d12, 0d44], [0d46, 0d48], [0d4a, 0d4e], [0d54, 0d57],
        [0d5f, 0d63], [0d66, 0d6f], [0d7a, 0d7f], [0d81, 0d83],
        [0d85, 0d96], [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd],
        [0dc0, 0dc6], [0dca, 0dca], [0dcf, 0dd4], [0dd6, 0dd6],
        [0dd8, 0ddf], [0de6, 0def], [0df2, 0df3], [0e01, 0e3a],
        [0e40, 0e4e], [0e50, 0e59], [0e81, 0e82], [0e84, 0e84],
        [0e86, 0e8a], [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0ebd],
        [0ec0, 0ec4], [0ec6, 0ec6], [0ec8, 0ecd], [0ed0, 0ed9],
        [0edc, 0edf], [0f00, 0f00], [0f18, 0f19], [0f20, 0f29],
        [0f35, 0f35], [0f37, 0f37], [0f39, 0f39], [0f3e, 0f47],
        [0f49, 0f6c], [0f71, 0f84], [0f86, 0f97], [0f99, 0fbc],
        [0fc6, 0fc6], [1000, 1049], [1050, 109d], [10a0, 10c5],
        [10c7, 10c7], [10cd, 10cd], [10d0, 10fa], [10fc, 1248],
        [124a, 124d], [1250, 1256], [1258, 1258], [125a, 125d],
        [1260, 1288], [128a, 128d], [1290, 12b0], [12b2, 12b5],
        [12b8, 12be], [12c0, 12c0], [12c2, 12c5], [12c8, 12d6],
        [12d8, 1310], [1312, 1315], [1318, 135a], [135d, 135f],
        [1369, 1371], [1380, 138f], [13a0, 13f5], [13f8, 13fd],
        [1401, 166c], [166f, 167f], [1681, 169a], [16a0, 16ea],
        [16ee, 16f8], [1700, 170c], [170e, 1714], [1720, 1734],
        [1740, 1753], [1760, 176c], [176e, 1770], [1772, 1773],
        [1780, 17d3], [17d7, 17d7], [17dc, 17dd], [17e0, 17e9],
        [180b, 180d], [1810, 1819], [1820, 1878], [1880, 18aa],
        [18b0, 18f5], [1900, 191e], [1920, 192b], [1930, 193b],
        [1946, 196d], [1970, 1974], [1980, 19ab], [19b0, 19c9],
        [19d0, 19da], [1a00, 1a1b], [1a20, 1a5e], [1a60, 1a7c],
        [1a7f, 1a89], [1a90, 1a99], [1aa7, 1aa7], [1ab0, 1abd],
        [1abf, 1ac0], [1b00, 1b4b], [1b50, 1b59], [1b6b, 1b73],
        [1b80, 1bf3], [1c00, 1c37], [1c40, 1c49], [1c4d, 1c7d],
        [1c80, 1c88], [1c90, 1cba], [1cbd, 1cbf], [1cd0, 1cd2],
        [1cd4, 1cfa], [1d00, 1df9], [1dfb, 1f15], [1f18, 1f1d],
        [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d], [1f80, 1fb4],
        [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fcc],
        [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec], [1ff2, 1ff4],
        [1ff6, 1ffc], [203f, 2040], [2054, 2054], [2071, 2071],
        [207f, 207f], [2090, 209c], [20d0, 20dc], [20e1, 20e1],
        [20e5, 20f0], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2118, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 2139], [213c, 213f], [2145, 2149],
        [214e, 214e], [2160, 2188], [2c00, 2c2e], [2c30, 2c5e],
        [2c60, 2ce4], [2ceb, 2cf3], [2d00, 2d25], [2d27, 2d27],
        [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d6f], [2d7f, 2d96],
        [2da0, 2da6], [2da8, 2dae], [2db0, 2db6], [2db8, 2dbe],
        [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6], [2dd8, 2dde],
        [2de0, 2dff], [3005, 3007], [3021, 302f], [3031, 3035],
        [3038, 303c], [3041, 3096], [3099, 309f], [30a1, 30fa],
        [30fc, 30ff], [3105, 312f], [3131, 318e], [31a0, 31bf],
        [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc], [a000, a48c],
        [a4d0, a4fd], [a500, a60c], [a610, a62b], [a640, a66f],
        [a674, a67d], [a67f, a6f1], [a717, a71f], [a722, a788],
        [a78b, a7bf], [a7c2, a7ca], [a7f5, a827], [a82c, a82c],
        [a840, a873], [a880, a8c5], [a8d0, a8d9], [a8e0, a8f7],
        [a8fb, a8fb], [a8fd, a92d], [a930, a953], [a960, a97c],
        [a980, a9c0], [a9cf, a9d9], [a9e0, a9fe], [aa00, aa36],
        [aa40, aa4d], [aa50, aa59], [aa60, aa76], [aa7a, aac2],
        [aadb, aadd], [aae0, aaef], [aaf2, aaf6], [ab01, ab06],
        [ab09, ab0e], [ab11, ab16], [ab20, ab26], [ab28, ab2e],
        [ab30, ab5a], [ab5c, ab69], [ab70, abea], [abec, abed],
        [abf0, abf9], [ac00, d7a3], [d7b0, d7c6], [d7cb, d7fb],
        [f900, fa6d], [fa70, fad9], [fb00, fb06], [fb13, fb17],
        [fb1d, fb28], [fb2a, fb36], [fb38, fb3c], [fb3e, fb3e],
        [fb40, fb41], [fb43, fb44], [fb46, fbb1], [fbd3, fd3d],
        [fd50, fd8f], [fd92, fdc7], [fdf0, fdfb], [fe00, fe0f],
        [fe20, fe2f], [fe33, fe34], [fe4d, fe4f], [fe70, fe74],
        [fe76, fefc], [ff10, ff19], [ff21, ff3a], [ff3f, ff3f],
        [ff41, ff5a], [ff66, ffbe], [ffc2, ffc7], [ffca, ffcf],
        [ffd2, ffd7], [ffda, ffdc], [10000, 1000b], [1000d, 10026],
        [10028, 1003a], [1003c, 1003d], [1003f, 1004d], [10050, 1005d],
        [10080, 100fa], [10140, 10174], [101fd, 101fd], [10280, 1029c],
        [102a0, 102d0], [102e0, 102e0], [10300, 1031f], [1032d, 1034a],
        [10350, 1037a], [10380, 1039d], [103a0, 103c3], [103c8, 103cf],
        [103d1, 103d5], [10400, 1049d], [104a0, 104a9], [104b0, 104d3],
        [104d8, 104fb], [10500, 10527], [10530, 10563], [10600, 10736],
        [10740, 10755], [10760, 10767], [10800, 10805], [10808, 10808],
        [1080a, 10835], [10837, 10838], [1083c, 1083c], [1083f, 10855],
        [10860, 10876], [10880, 1089e], [108e0, 108f2], [108f4, 108f5],
        [10900, 10915], [10920, 10939], [10980, 109b7], [109be, 109bf],
        [10a00, 10a03], [10a05, 10a06], [10a0c, 10a13], [10a15, 10a17],
        [10a19, 10a35], [10a38, 10a3a], [10a3f, 10a3f], [10a60, 10a7c],
        [10a80, 10a9c], [10ac0, 10ac7], [10ac9, 10ae6], [10b00, 10b35],
        [10b40, 10b55], [10b60, 10b72], [10b80, 10b91], [10c00, 10c48],
        [10c80, 10cb2], [10cc0, 10cf2], [10d00, 10d27], [10d30, 10d39],
        [10e80, 10ea9], [10eab, 10eac], [10eb0, 10eb1], [10f00, 10f1c],
        [10f27, 10f27], [10f30, 10f50], [10fb0, 10fc4], [10fe0, 10ff6],
        [11000, 11046], [11066, 1106f], [1107f, 110ba], [110d0, 110e8],
        [110f0, 110f9], [11100, 11134], [11136, 1113f], [11144, 11147],
        [11150, 11173], [11176, 11176], [11180, 111c4], [111c9, 111cc],
        [111ce, 111da], [111dc, 111dc], [11200, 11211], [11213, 11237],
        [1123e, 1123e], [11280, 11286], [11288, 11288], [1128a, 1128d],
        [1128f, 1129d], [1129f, 112a8], [112b0, 112ea], [112f0, 112f9],
        [11300, 11303], [11305, 1130c], [1130f, 11310], [11313, 11328],
        [1132a, 11330], [11332, 11333], [11335, 11339], [1133b, 11344],
        [11347, 11348], [1134b, 1134d], [11350, 11350], [11357, 11357],
        [1135d, 11363], [11366, 1136c], [11370, 11374], [11400, 1144a],
        [11450, 11459], [1145e, 11461], [11480, 114c5], [114c7, 114c7],
        [114d0, 114d9], [11580, 115b5], [115b8, 115c0], [115d8, 115dd],
        [11600, 11640], [11644, 11644], [11650, 11659], [11680, 116b8],
        [116c0, 116c9], [11700, 1171a], [1171d, 1172b], [11730, 11739],
        [11800, 1183a], [118a0, 118e9], [118ff, 11906], [11909, 11909],
        [1190c, 11913], [11915, 11916], [11918, 11935], [11937, 11938],
        [1193b, 11943], [11950, 11959], [119a0, 119a7], [119aa, 119d7],
        [119da, 119e1], [119e3, 119e4], [11a00, 11a3e], [11a47, 11a47],
        [11a50, 11a99], [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08],
        [11c0a, 11c36], [11c38, 11c40], [11c50, 11c59], [11c72, 11c8f],
        [11c92, 11ca7], [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d36], [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d47],
        [11d50, 11d59], [11d60, 11d65], [11d67, 11d68], [11d6a, 11d8e],
        [11d90, 11d91], [11d93, 11d98], [11da0, 11da9], [11ee0, 11ef6],
        [11fb0, 11fb0], [12000, 12399], [12400, 1246e], [12480, 12543],
        [13000, 1342e], [14400, 14646], [16800, 16a38], [16a40, 16a5e],
        [16a60, 16a69], [16ad0, 16aed], [16af0, 16af4], [16b00, 16b36],
        [16b40, 16b43], [16b50, 16b59], [16b63, 16b77], [16b7d, 16b8f],
        [16e40, 16e7f], [16f00, 16f4a], [16f4f, 16f87], [16f8f, 16f9f],
        [16fe0, 16fe1], [16fe3, 16fe4], [16ff0, 16ff1], [17000, 187f7],
        [18800, 18cd5], [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152],
        [1b164, 1b167], [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c],
        [1bc80, 1bc88], [1bc90, 1bc99], [1bc9d, 1bc9e], [1d165, 1d169],
        [1d16d, 1d172], [1d17b, 1d182], [1d185, 1d18b], [1d1aa, 1d1ad],
        [1d242, 1d244], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d6c0], [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714],
        [1d716, 1d734], [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788],
        [1d78a, 1d7a8], [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1d7ce, 1d7ff],
        [1da00, 1da36], [1da3b, 1da6c], [1da75, 1da75], [1da84, 1da84],
        [1da9b, 1da9f], [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018],
        [1e01b, 1e021], [1e023, 1e024], [1e026, 1e02a], [1e100, 1e12c],
        [1e130, 1e13d], [1e140, 1e149], [1e14e, 1e14e], [1e2c0, 1e2f9],
        [1e800, 1e8c4], [1e8d0, 1e8d6], [1e900, 1e94b], [1e950, 1e959],
        [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24],
        [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39],
        [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49],
        [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54],
        [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d],
        [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a],
        [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e],
        [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9],
        [1eeab, 1eebb], [1fbf0, 1fbf9], [20000, 2a6dd], [2a700, 2b734],
        [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d],
        [30000, 3134a], [e0100, e01ef]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Full, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 4},
        {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Full, 2},
        {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 30}, {Full, 1},
        {Mixed, 9}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 7},
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 10}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 2},
        {Full, 18}, {Mixed, 2}, {Full, 2}, {Mixed, 5}, {Full, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 5}, {Empty, 1}, {Full, 2}, {Mixed, 2}, {Full, 3},
        {Mixed, 1}, {Full, 1}, {Mixed, 7}, {Full, 7}, {Mixed, 1}, {Full, 8},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 4}, {Empty, 1}, {Mixed, 5}, {Full, 1},
        {Mixed, 1}, {Empty, 83}, {Full, 1}, {Mixed, 2}, {Full, 4},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Empty, 16}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2}, {Full, 655},
        {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
        {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 6},
        {Full, 3}, {Mixed, 1}, {Full, 349}, {Mixed, 3}, {Empty, 264},
        {Full, 11}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 2}, {Full, 10}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 6}, {Full, 3}, {Mixed, 5},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
        {Full, 3}, {Mixed, 1}, {Empty, 2}, {Full, 1}, {Mixed, 1},
        {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4},
        {Mixed, 5}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 10}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4}, {Full, 2},
        {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 8},
        {Mixed, 6}, {Empty, 2}, {Mixed, 6}, {Empty, 9}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 3}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Empty, 4}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1},
        {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 166}, {Mixed, 3},
        {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 10},
        {Mixed, 10}, {Full, 1}, {Empty, 16}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Empty, 42}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1},
        {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 37}, {Mixed, 6}, {Empty, 105}, {Mixed, 1},
        {Empty, 32}, {Full, 1334}, {Mixed, 1}, {Empty, 1}, {Full, 129},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180}, {Mixed, 1},
        {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16}, {Mixed, 1},
        {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 22381}, {Full, 7},
        {Mixed, 1}, {Empty, 6128}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x03ff0000, 0x87fffffe, 0x07fffffe, 0x04a00400, 0xff7fffff,
        0xff7fffff, 0x0003ffc3, 0x0000501f, 0xbcdfffff, 0xffffd7c0,
        0xfffffffb, 0xffbfffff, 0xfffffcfb, 0xfffeffff, 0x027fffff,
        0xfffe01ff, 0xbfffffff, 0xffff00b6, 0x000787ff, 0x07ff0000,
        0xffffc3ff, 0x9fefffff, 0x9ffffdff, 0xffff0000, 0xffffe7ff,
        0x0003ffff, 0x243fffff, 0x00003fff, 0x0fffffff, 0x000007ff,
        0xffdfffff, 0xfff800ff, 0xfffffffb, 0xfffeffcf, 0xfff99fef,
        0xf3c5fdff, 0xb080799f, 0x5003ffcf, 0xfff987ee, 0xd36dfdff,
        0x5e023987, 0x003fffc0, 0xfffbbfee, 0xf3edfdff, 0x00013bbf,
        0xfe00ffcf, 0xfff99fee, 0xf3edfdff, 0xb0e0399f, 0x0002ffcf,
        0xd63dc7ec, 0xc3ffc718, 0x00813dc7, 0x0000ffc0, 0xfffddfff,
        0xe3fffdff, 0x07603ddf, 0x0000ffcf, 0xfffddfef, 0xf3effdff,
        0x40603ddf, 0x0006ffcf, 0xfffddfff, 0x80f07ddf, 0xfc00ffcf,
        0xfc7fffee, 0x2ffbffff, 0xff5f847f, 0x000cffc0, 0xfffffffe,
        0x07ffffff, 0x03ff7fff, 0xfffff7d6, 0x3fffffaf, 0xf3ff3f5f,
        0x03000001, 0xc2a003ff, 0xfffffeff, 0xfffe1fff, 0xfeffffdf,
        0x1fffffff, 0x00000040, 0xffff03ff, 0x3fffffff, 0xffff20bf,
        0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d,
        0xff3dffff, 0xe7ffffff, 0x0003fe00, 0x0000ffff, 0x3f3fffff,
        0xfffffffe, 0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x001fdfff,
        0x001fffff, 0x000fffff, 0x000ddfff, 0x308fffff, 0x000003ff,
        0x03ff3800, 0x01ffffff, 0xffff07ff, 0x003fffff, 0x7fffffff,
        0x0fff0fff, 0xffffffc0, 0x001f3fff, 0xffff0fff, 0x07ff03ff,
        0x0fffffff, 0x7fffffff, 0x9fffffff, 0x03ff03ff, 0xbfff0080,
        0x00000001, 0x03ff0fff, 0x000ff800, 0x000fffff, 0x00ffffff,
        0xffffe3ff, 0x3fffffff, 0xffff01ff, 0xe7ffffff, 0xfff70000,
        0x07ffffff, 0xfbffffff, 0x3f3fffff, 0xaaff3f3f, 0x3fffffff,
        0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80000000, 0x00100001,
        0x80020000, 0x1fff0000, 0x1fff0000, 0x0001ffe2, 0x3f2ffc84,
        0xf3fffd50, 0x000043e0, 0x000001ff, 0xffff7fff, 0x7fffffff,
        0x000ff81f, 0xffff20bf, 0x800080ff, 0x007fffff, 0x7f7f7f7f,
        0x7f7f7f7f, 0x000000e0, 0x1f3efffe, 0xfffffffe, 0xfe7fffff,
        0xfffffffe, 0xf7ffffff, 0xffffffe0, 0xfffeffff, 0x00007fff,
        0xffff0000, 0x1fffffff, 0x00001fff, 0xffff0000, 0x3fffffff,
        0xffff1fff, 0x00000fff, 0xbff0ffff, 0x0003ffff, 0xff800000,
        0xfffffffc, 0xfffff9ff, 0x000007fc, 0xffe00000, 0x000010ff,
        0x000fffff, 0x03ff003f, 0xe8ffffff, 0xffff3fff, 0x000fffff,
        0x1fffffff, 0x03ff8001, 0x7fffffff, 0x007fffff, 0x03ff3fff,
        0xfc7fffff, 0x38000007, 0x007cffff, 0x007e7e7e, 0xffff7f7f,
        0xf7ffffff, 0xffff03ff, 0x03ff37ff, 0xffff000f, 0xfffff87f,
        0x0fffffff, 0xffff3fff, 0x03ffffff, 0xe0f8007f, 0x5f7ffdff,
        0xffffffdb, 0x0003ffff, 0xfff80000, 0x3fffffff, 0xffff0000,
        0xfffcffff, 0x000000ff, 0x0fff0000, 0x0000ffff, 0x0018ffff,
        0x0000e000, 0xffdf0000, 0x1fffffff, 0x03ff0000, 0x87fffffe,
        0x07fffffe, 0xffffffc0, 0x7fffffff, 0x1cfcfcfc, 0xffffefff,
        0xb7ffff7f, 0x3fff3fff, 0x07ffffff, 0x001fffff, 0x20000000,
        0x1fffffff, 0x0001ffff, 0x00000001, 0xffffe000, 0xffff07ff,
        0x07ffffff, 0x3fffffff, 0x003eff0f, 0x3fffffff, 0xffff03ff,
        0xff0fffff, 0x0fffffff, 0xffff00ff, 0x0000000f, 0x007fffff,
        0x003fffff, 0x000000ff, 0xfffffd3f, 0x91bfffff, 0x003fffff,
        0x007fffff, 0x7fffffff, 0x0037ffff, 0x003fffff, 0x03ffffff,
        0xc0ffffff, 0xfeeff06f, 0x873fffff, 0x1fffffff, 0x1fffffff,
        0xfffffeff, 0x0000007f, 0x003fffff, 0x003fffff, 0x0007ffff,
        0x0003ffff, 0x000001ff, 0x0007ffff, 0x0007ffff, 0x03ff00ff,
        0x00031bff, 0x1fffffff, 0xffff0080, 0x0001ffff, 0xffff0000,
        0x0000001f, 0x007fffff, 0x0000007f, 0x8000ffc0, 0x07ffffff,
        0xffff0000, 0x03ff01ff, 0xffdfffff, 0xffff00f0, 0x004fffff,
        0x17ffde1f, 0xfffbffff, 0x40ffffff, 0xbfffbd7f, 0xffff01ff,
        0x03ff07ff, 0xfff99fef, 0xfbedfdff, 0xe081399f, 0x001f1fcf,
        0xc3ff07ff, 0x00000003, 0x03ff00bf, 0xff3fffff, 0x3f000001,
        0x03ff0011, 0x01ffffff, 0x000003ff, 0xe7ffffff, 0x03ff0fff,
        0x07ffffff, 0x800003ff, 0xff6ff27f, 0xf9bfffff, 0x03ff000f,
        0xfffffcff, 0xfcffffff, 0x0000001b, 0x7fffffff, 0xffff0080,
        0x23ffffff, 0x01ffffff, 0xfffffdff, 0xff7fffff, 0x03ff0001,
        0xfffc0000, 0xfffcffff, 0x007ffeff, 0xfffffb7f, 0xb47fffff,
        0x03ff00ff, 0xfffffdbf, 0x01fb7fff, 0x000003ff, 0x007fffff,
        0x00010000, 0x03ffffff, 0x00007fff, 0x0000000f, 0x00007fff,
        0x0000007f, 0x01ffffff, 0x7fffffff, 0x000003ff, 0xffff0000,
        0x001f3fff, 0x007fffff, 0x03ff000f, 0xe0fffff8, 0x0000ffff,
        0xffff87ff, 0xffff80ff, 0x0003001b, 0x00ffffff, 0x003fffff,
        0x000001ff, 0x7fffffff, 0x00070000, 0xffff00f0, 0x0fffffff,
        0x1fff07ff, 0x63ff01ff, 0xf807e3e0, 0x00000fe7, 0x00003c00,
        0x0000001c, 0xffdfffff, 0xdfffffff, 0xebffde64, 0xffffffef,
        0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffff3f, 0xf7fffffd,
        0xf7ffffff, 0xffdfffff, 0xffdfffff, 0xffff7fff, 0xffff7fff,
        0xfffffdff, 0xfffffdff, 0xffffcff7, 0xf87fffff, 0x00201fff,
        0xf8000010, 0x0000fffe, 0xf9ffff7f, 0x000007db, 0x3fff1fff,
        0x000043ff, 0x03ffffff, 0x007f001f, 0x03ff0fff, 0xffffffef,
        0x0af7fe96, 0xaa96ea84, 0x5ef7f796, 0x0ffffbff, 0x0ffffbee,
        0x03ff0000, 0x3fffffff, 0x001fffff, 0x3fffffff, 0xffff0003,
        0x00000001, 0x3fffffff, 0x000007ff, 0x0000ffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 389, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 404, 0};

        static BinaryPropertyObject property_object{IDC, std::move(codepoint_set)};
    }
PropertyObject * get_IDC_PropertyObject() {  return & IDC_ns::property_object; }
    namespace IDS_ns {
        /** Code Point Ranges for IDS
        [0041, 005a], [0061, 007a], [00aa, 00aa], [00b5, 00b5],
        [00ba, 00ba], [00c0, 00d6], [00d8, 00f6], [00f8, 02c1],
        [02c6, 02d1], [02e0, 02e4], [02ec, 02ec], [02ee, 02ee],
        [0370, 0374], [0376, 0377], [037a, 037d], [037f, 037f],
        [0386, 0386], [0388, 038a], [038c, 038c], [038e, 03a1],
        [03a3, 03f5], [03f7, 0481], [048a, 052f], [0531, 0556],
        [0559, 0559], [0560, 0588], [05d0, 05ea], [05ef, 05f2],
        [0620, 064a], [066e, 066f], [0671, 06d3], [06d5, 06d5],
        [06e5, 06e6], [06ee, 06ef], [06fa, 06fc], [06ff, 06ff],
        [0710, 0710], [0712, 072f], [074d, 07a5], [07b1, 07b1],
        [07ca, 07ea], [07f4, 07f5], [07fa, 07fa], [0800, 0815],
        [081a, 081a], [0824, 0824], [0828, 0828], [0840, 0858],
        [0860, 086a], [08a0, 08b4], [08b6, 08c7], [0904, 0939],
        [093d, 093d], [0950, 0950], [0958, 0961], [0971, 0980],
        [0985, 098c], [098f, 0990], [0993, 09a8], [09aa, 09b0],
        [09b2, 09b2], [09b6, 09b9], [09bd, 09bd], [09ce, 09ce],
        [09dc, 09dd], [09df, 09e1], [09f0, 09f1], [09fc, 09fc],
        [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30],
        [0a32, 0a33], [0a35, 0a36], [0a38, 0a39], [0a59, 0a5c],
        [0a5e, 0a5e], [0a72, 0a74], [0a85, 0a8d], [0a8f, 0a91],
        [0a93, 0aa8], [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9],
        [0abd, 0abd], [0ad0, 0ad0], [0ae0, 0ae1], [0af9, 0af9],
        [0b05, 0b0c], [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30],
        [0b32, 0b33], [0b35, 0b39], [0b3d, 0b3d], [0b5c, 0b5d],
        [0b5f, 0b61], [0b71, 0b71], [0b83, 0b83], [0b85, 0b8a],
        [0b8e, 0b90], [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c],
        [0b9e, 0b9f], [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9],
        [0bd0, 0bd0], [0c05, 0c0c], [0c0e, 0c10], [0c12, 0c28],
        [0c2a, 0c39], [0c3d, 0c3d], [0c58, 0c5a], [0c60, 0c61],
        [0c80, 0c80], [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8],
        [0caa, 0cb3], [0cb5, 0cb9], [0cbd, 0cbd], [0cde, 0cde],
        [0ce0, 0ce1], [0cf1, 0cf2], [0d04, 0d0c], [0d0e, 0d10],
        [0d12, 0d3a], [0d3d, 0d3d], [0d4e, 0d4e], [0d54, 0d56],
        [0d5f, 0d61], [0d7a, 0d7f], [0d85, 0d96], [0d9a, 0db1],
        [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6], [0e01, 0e30],
        [0e32, 0e33], [0e40, 0e46], [0e81, 0e82], [0e84, 0e84],
        [0e86, 0e8a], [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0eb0],
        [0eb2, 0eb3], [0ebd, 0ebd], [0ec0, 0ec4], [0ec6, 0ec6],
        [0edc, 0edf], [0f00, 0f00], [0f40, 0f47], [0f49, 0f6c],
        [0f88, 0f8c], [1000, 102a], [103f, 103f], [1050, 1055],
        [105a, 105d], [1061, 1061], [1065, 1066], [106e, 1070],
        [1075, 1081], [108e, 108e], [10a0, 10c5], [10c7, 10c7],
        [10cd, 10cd], [10d0, 10fa], [10fc, 1248], [124a, 124d],
        [1250, 1256], [1258, 1258], [125a, 125d], [1260, 1288],
        [128a, 128d], [1290, 12b0], [12b2, 12b5], [12b8, 12be],
        [12c0, 12c0], [12c2, 12c5], [12c8, 12d6], [12d8, 1310],
        [1312, 1315], [1318, 135a], [1380, 138f], [13a0, 13f5],
        [13f8, 13fd], [1401, 166c], [166f, 167f], [1681, 169a],
        [16a0, 16ea], [16ee, 16f8], [1700, 170c], [170e, 1711],
        [1720, 1731], [1740, 1751], [1760, 176c], [176e, 1770],
        [1780, 17b3], [17d7, 17d7], [17dc, 17dc], [1820, 1878],
        [1880, 18a8], [18aa, 18aa], [18b0, 18f5], [1900, 191e],
        [1950, 196d], [1970, 1974], [1980, 19ab], [19b0, 19c9],
        [1a00, 1a16], [1a20, 1a54], [1aa7, 1aa7], [1b05, 1b33],
        [1b45, 1b4b], [1b83, 1ba0], [1bae, 1baf], [1bba, 1be5],
        [1c00, 1c23], [1c4d, 1c4f], [1c5a, 1c7d], [1c80, 1c88],
        [1c90, 1cba], [1cbd, 1cbf], [1ce9, 1cec], [1cee, 1cf3],
        [1cf5, 1cf6], [1cfa, 1cfa], [1d00, 1dbf], [1e00, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4],
        [1fc6, 1fcc], [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec],
        [1ff2, 1ff4], [1ff6, 1ffc], [2071, 2071], [207f, 207f],
        [2090, 209c], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2118, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 2139], [213c, 213f], [2145, 2149],
        [214e, 214e], [2160, 2188], [2c00, 2c2e], [2c30, 2c5e],
        [2c60, 2ce4], [2ceb, 2cee], [2cf2, 2cf3], [2d00, 2d25],
        [2d27, 2d27], [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d6f],
        [2d80, 2d96], [2da0, 2da6], [2da8, 2dae], [2db0, 2db6],
        [2db8, 2dbe], [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6],
        [2dd8, 2dde], [3005, 3007], [3021, 3029], [3031, 3035],
        [3038, 303c], [3041, 3096], [309b, 309f], [30a1, 30fa],
        [30fc, 30ff], [3105, 312f], [3131, 318e], [31a0, 31bf],
        [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc], [a000, a48c],
        [a4d0, a4fd], [a500, a60c], [a610, a61f], [a62a, a62b],
        [a640, a66e], [a67f, a69d], [a6a0, a6ef], [a717, a71f],
        [a722, a788], [a78b, a7bf], [a7c2, a7ca], [a7f5, a801],
        [a803, a805], [a807, a80a], [a80c, a822], [a840, a873],
        [a882, a8b3], [a8f2, a8f7], [a8fb, a8fb], [a8fd, a8fe],
        [a90a, a925], [a930, a946], [a960, a97c], [a984, a9b2],
        [a9cf, a9cf], [a9e0, a9e4], [a9e6, a9ef], [a9fa, a9fe],
        [aa00, aa28], [aa40, aa42], [aa44, aa4b], [aa60, aa76],
        [aa7a, aa7a], [aa7e, aaaf], [aab1, aab1], [aab5, aab6],
        [aab9, aabd], [aac0, aac0], [aac2, aac2], [aadb, aadd],
        [aae0, aaea], [aaf2, aaf4], [ab01, ab06], [ab09, ab0e],
        [ab11, ab16], [ab20, ab26], [ab28, ab2e], [ab30, ab5a],
        [ab5c, ab69], [ab70, abe2], [ac00, d7a3], [d7b0, d7c6],
        [d7cb, d7fb], [f900, fa6d], [fa70, fad9], [fb00, fb06],
        [fb13, fb17], [fb1d, fb1d], [fb1f, fb28], [fb2a, fb36],
        [fb38, fb3c], [fb3e, fb3e], [fb40, fb41], [fb43, fb44],
        [fb46, fbb1], [fbd3, fd3d], [fd50, fd8f], [fd92, fdc7],
        [fdf0, fdfb], [fe70, fe74], [fe76, fefc], [ff21, ff3a],
        [ff41, ff5a], [ff66, ffbe], [ffc2, ffc7], [ffca, ffcf],
        [ffd2, ffd7], [ffda, ffdc], [10000, 1000b], [1000d, 10026],
        [10028, 1003a], [1003c, 1003d], [1003f, 1004d], [10050, 1005d],
        [10080, 100fa], [10140, 10174], [10280, 1029c], [102a0, 102d0],
        [10300, 1031f], [1032d, 1034a], [10350, 10375], [10380, 1039d],
        [103a0, 103c3], [103c8, 103cf], [103d1, 103d5], [10400, 1049d],
        [104b0, 104d3], [104d8, 104fb], [10500, 10527], [10530, 10563],
        [10600, 10736], [10740, 10755], [10760, 10767], [10800, 10805],
        [10808, 10808], [1080a, 10835], [10837, 10838], [1083c, 1083c],
        [1083f, 10855], [10860, 10876], [10880, 1089e], [108e0, 108f2],
        [108f4, 108f5], [10900, 10915], [10920, 10939], [10980, 109b7],
        [109be, 109bf], [10a00, 10a00], [10a10, 10a13], [10a15, 10a17],
        [10a19, 10a35], [10a60, 10a7c], [10a80, 10a9c], [10ac0, 10ac7],
        [10ac9, 10ae4], [10b00, 10b35], [10b40, 10b55], [10b60, 10b72],
        [10b80, 10b91], [10c00, 10c48], [10c80, 10cb2], [10cc0, 10cf2],
        [10d00, 10d23], [10e80, 10ea9], [10eb0, 10eb1], [10f00, 10f1c],
        [10f27, 10f27], [10f30, 10f45], [10fb0, 10fc4], [10fe0, 10ff6],
        [11003, 11037], [11083, 110af], [110d0, 110e8], [11103, 11126],
        [11144, 11144], [11147, 11147], [11150, 11172], [11176, 11176],
        [11183, 111b2], [111c1, 111c4], [111da, 111da], [111dc, 111dc],
        [11200, 11211], [11213, 1122b], [11280, 11286], [11288, 11288],
        [1128a, 1128d], [1128f, 1129d], [1129f, 112a8], [112b0, 112de],
        [11305, 1130c], [1130f, 11310], [11313, 11328], [1132a, 11330],
        [11332, 11333], [11335, 11339], [1133d, 1133d], [11350, 11350],
        [1135d, 11361], [11400, 11434], [11447, 1144a], [1145f, 11461],
        [11480, 114af], [114c4, 114c5], [114c7, 114c7], [11580, 115ae],
        [115d8, 115db], [11600, 1162f], [11644, 11644], [11680, 116aa],
        [116b8, 116b8], [11700, 1171a], [11800, 1182b], [118a0, 118df],
        [118ff, 11906], [11909, 11909], [1190c, 11913], [11915, 11916],
        [11918, 1192f], [1193f, 1193f], [11941, 11941], [119a0, 119a7],
        [119aa, 119d0], [119e1, 119e1], [119e3, 119e3], [11a00, 11a00],
        [11a0b, 11a32], [11a3a, 11a3a], [11a50, 11a50], [11a5c, 11a89],
        [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08], [11c0a, 11c2e],
        [11c40, 11c40], [11c72, 11c8f], [11d00, 11d06], [11d08, 11d09],
        [11d0b, 11d30], [11d46, 11d46], [11d60, 11d65], [11d67, 11d68],
        [11d6a, 11d89], [11d98, 11d98], [11ee0, 11ef2], [11fb0, 11fb0],
        [12000, 12399], [12400, 1246e], [12480, 12543], [13000, 1342e],
        [14400, 14646], [16800, 16a38], [16a40, 16a5e], [16ad0, 16aed],
        [16b00, 16b2f], [16b40, 16b43], [16b63, 16b77], [16b7d, 16b8f],
        [16e40, 16e7f], [16f00, 16f4a], [16f50, 16f50], [16f93, 16f9f],
        [16fe0, 16fe1], [16fe3, 16fe3], [17000, 187f7], [18800, 18cd5],
        [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167],
        [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88],
        [1bc90, 1bc99], [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f],
        [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5],
        [1d6a8, 1d6c0], [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714],
        [1d716, 1d734], [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788],
        [1d78a, 1d7a8], [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1e100, 1e12c],
        [1e137, 1e13d], [1e14e, 1e14e], [1e2c0, 1e2eb], [1e800, 1e8c4],
        [1e900, 1e943], [1e94b, 1e94b], [1ee00, 1ee03], [1ee05, 1ee1f],
        [1ee21, 1ee22], [1ee24, 1ee24], [1ee27, 1ee27], [1ee29, 1ee32],
        [1ee34, 1ee37], [1ee39, 1ee39], [1ee3b, 1ee3b], [1ee42, 1ee42],
        [1ee47, 1ee47], [1ee49, 1ee49], [1ee4b, 1ee4b], [1ee4d, 1ee4f],
        [1ee51, 1ee52], [1ee54, 1ee54], [1ee57, 1ee57], [1ee59, 1ee59],
        [1ee5b, 1ee5b], [1ee5d, 1ee5d], [1ee5f, 1ee5f], [1ee61, 1ee62],
        [1ee64, 1ee64], [1ee67, 1ee6a], [1ee6c, 1ee72], [1ee74, 1ee77],
        [1ee79, 1ee7c], [1ee7e, 1ee7e], [1ee80, 1ee89], [1ee8b, 1ee9b],
        [1eea1, 1eea3], [1eea5, 1eea9], [1eeab, 1eebb], [20000, 2a6dd],
        [2a700, 2b734], [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0],
        [2f800, 2fa1d], [30000, 3134a]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1},
        {Full, 4}, {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 2},
        {Full, 2}, {Mixed, 5}, {Full, 2}, {Mixed, 7}, {Empty, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 23}, {Empty, 1}, {Mixed, 15},
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Full, 1},
        {Mixed, 4}, {Full, 1}, {Mixed, 2}, {Full, 10}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 18},
        {Mixed, 2}, {Full, 2}, {Mixed, 5}, {Full, 1}, {Mixed, 2},
        {Empty, 2}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1},
        {Mixed, 1}, {Full, 6}, {Empty, 2}, {Full, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
        {Empty, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Empty, 83},
        {Full, 1}, {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 4}, {Empty, 17}, {Mixed, 3}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2},
        {Full, 655}, {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 3}, {Empty, 1}, {Mixed, 9}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 7}, {Full, 3}, {Mixed, 1}, {Full, 349},
        {Mixed, 3}, {Empty, 264}, {Full, 11}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 2},
        {Full, 10}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Full, 3}, {Mixed, 1},
        {Empty, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Mixed, 3}, {Empty, 1}, {Full, 3}, {Mixed, 1}, {Empty, 2},
        {Full, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 4}, {Full, 9},
        {Mixed, 3}, {Empty, 4}, {Mixed, 5}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 4}, {Empty, 3}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 10}, {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 3},
        {Empty, 2}, {Mixed, 5}, {Empty, 2}, {Mixed, 11}, {Empty, 1},
        {Mixed, 2}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 4},
        {Empty, 4}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 2},
        {Empty, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Empty, 7}, {Full, 1}, {Mixed, 1}, {Empty, 3},
        {Full, 2}, {Mixed, 4}, {Empty, 2}, {Mixed, 6}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 8},
        {Mixed, 5}, {Empty, 3}, {Mixed, 5}, {Empty, 10}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 2}, {Empty, 3},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Empty, 4}, {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1},
        {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 187}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 10}, {Mixed, 10}, {Empty, 73}, {Full, 1}, {Mixed, 2},
        {Empty, 11}, {Full, 1}, {Mixed, 1}, {Empty, 40}, {Full, 6},
        {Mixed, 1}, {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 37},
        {Mixed, 6}, {Empty, 138}, {Full, 1334}, {Mixed, 1}, {Empty, 1},
        {Full, 129}, {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180},
        {Mixed, 1}, {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16},
        {Mixed, 1}, {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 28517}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x07fffffe, 0x04200400, 0xff7fffff, 0xff7fffff,
        0x0003ffc3, 0x0000501f, 0xbcdf0000, 0xffffd740, 0xfffffffb,
        0xffbfffff, 0xfffffc03, 0xfffeffff, 0x027fffff, 0x000001ff,
        0xffff0000, 0x000787ff, 0x000007ff, 0xfffec000, 0x002fffff,
        0x9c00c060, 0xfffd0000, 0x0000ffff, 0xffffe000, 0x0002003f,
        0xfffffc00, 0x043007ff, 0x043fffff, 0x00000110, 0x01ffffff,
        0x000007ff, 0xffdfffff, 0x000000ff, 0xfffffff0, 0x23ffffff,
        0xff010000, 0xfffe0003, 0xfff99fe1, 0x23c5fdff, 0xb0004000,
        0x10030003, 0xfff987e0, 0x036dfdff, 0x5e000000, 0x001c0000,
        0xfffbbfe0, 0x23edfdff, 0x00010000, 0x02000003, 0xfff99fe0,
        0x23edfdff, 0xb0000000, 0x00020003, 0xd63dc7e8, 0x03ffc718,
        0x00010000, 0xfffddfe0, 0x23fffdff, 0x07000000, 0x00000003,
        0xfffddfe1, 0x23effdff, 0x40000000, 0x00060003, 0xfffddff0,
        0x27ffffff, 0x80704000, 0xfc000003, 0xfc7fffe0, 0x2ffbffff,
        0x0000007f, 0xfffffffe, 0x000dffff, 0x0000007f, 0xfffff7d6,
        0x200dffaf, 0xf000005f, 0x00000001, 0xfffffeff, 0x00001fff,
        0x00001f00, 0x800007ff, 0x3c3f0000, 0xffe1c062, 0x00004003,
        0xffff20bf, 0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff,
        0xff7fff3d, 0xff3dffff, 0x07ffffff, 0x0000ffff, 0x3f3fffff,
        0xfffffffe, 0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x0003dfff,
        0x0003ffff, 0x0003ffff, 0x0001dfff, 0x000fffff, 0x10800000,
        0x01ffffff, 0xffff05ff, 0x003fffff, 0x7fffffff, 0xffff0000,
        0x001f3fff, 0xffff0fff, 0x000003ff, 0x007fffff, 0x001fffff,
        0x00000080, 0xffffffe0, 0x000fffff, 0x00000fe0, 0xfffffff8,
        0xfc00c001, 0x0000003f, 0x0000000f, 0xfc00e000, 0x3fffffff,
        0xffff01ff, 0xe7ffffff, 0x046fde00, 0x3f3fffff, 0xaaff3f3f,
        0x3fffffff, 0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80020000,
        0x1fff0000, 0x3f2ffc84, 0xf3fffd50, 0x000043e0, 0x000001ff,
        0xffff7fff, 0x7fffffff, 0x000c781f, 0xffff20bf, 0x000080ff,
        0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f, 0x000000e0, 0x1f3e03fe,
        0xfffffffe, 0xf87fffff, 0xfffffffe, 0xf7ffffff, 0xffffffe0,
        0xfffeffff, 0x00007fff, 0xffff0000, 0x1fffffff, 0x00001fff,
        0xffff0000, 0x3fffffff, 0xffff1fff, 0x00000c00, 0x80007fff,
        0x3fffffff, 0x0000ffff, 0xff800000, 0xfffffffc, 0xfffff9ff,
        0x000007fc, 0xffe00000, 0xfffff7bb, 0x00000007, 0x000fffff,
        0xfffffffc, 0x000fffff, 0x68fc0000, 0xfffffc00, 0xffff003f,
        0x0000007f, 0x1fffffff, 0xfffffff0, 0x0007ffff, 0x00008000,
        0x7c00ffdf, 0x000001ff, 0x00000ff7, 0xc47fffff, 0x3e62ffff,
        0x38000005, 0x001c07ff, 0x007e7e7e, 0xffff7f7f, 0xf7ffffff,
        0xffff03ff, 0x00000007, 0xffff000f, 0xfffff87f, 0x0fffffff,
        0xffff3fff, 0x03ffffff, 0xa0f8007f, 0x5f7ffdff, 0xffffffdb,
        0x0003ffff, 0xfff80000, 0x3fffffff, 0xffff0000, 0xfffcffff,
        0x000000ff, 0x0fff0000, 0xffdf0000, 0x1fffffff, 0x07fffffe,
        0x07fffffe, 0xffffffc0, 0x7fffffff, 0x1cfcfcfc, 0xffffefff,
        0xb7ffff7f, 0x3fff3fff, 0x07ffffff, 0x001fffff, 0x1fffffff,
        0x0001ffff, 0xffffe000, 0xffff07ff, 0x003fffff, 0x3fffffff,
        0x003eff0f, 0x3fffffff, 0xffff0000, 0xff0fffff, 0x0fffffff,
        0xffff00ff, 0x0000000f, 0x007fffff, 0x003fffff, 0x000000ff,
        0xfffffd3f, 0x91bfffff, 0x003fffff, 0x007fffff, 0x7fffffff,
        0x0037ffff, 0x003fffff, 0x03ffffff, 0xc0ffffff, 0xfeef0001,
        0x003fffff, 0x1fffffff, 0x1fffffff, 0xfffffeff, 0x0000001f,
        0x003fffff, 0x003fffff, 0x0007ffff, 0x0003ffff, 0x000001ff,
        0x0007ffff, 0x0007ffff, 0x0000000f, 0x000303ff, 0x1fffffff,
        0xffff0080, 0x0000003f, 0xffff0000, 0x0000001f, 0x007fffff,
        0xfffffff8, 0x00ffffff, 0xfffffff8, 0x0000ffff, 0xffff0000,
        0x000001ff, 0xfffffff8, 0x0000007f, 0xffff0090, 0x0047ffff,
        0xfffffff8, 0x0007ffff, 0x1400001e, 0xfffbffff, 0x00000fff,
        0xbfffbd7f, 0xffff01ff, 0x7fffffff, 0xfff99fe0, 0x23edfdff,
        0xe0010000, 0x00000003, 0x001fffff, 0x80000780, 0x00000003,
        0x0000ffff, 0x000000b0, 0x00007fff, 0x0f000000, 0x0000ffff,
        0x00000010, 0x010007ff, 0x07ffffff, 0x00000fff, 0x80000000,
        0xff6ff27f, 0x8000ffff, 0x00000002, 0xfffffcff, 0x0001ffff,
        0x0000000a, 0xfffff801, 0x0407ffff, 0xf0010000, 0x200003ff,
        0x01ffffff, 0xfffffdff, 0x00007fff, 0x00000001, 0xfffc0000,
        0x0000ffff, 0xfffffb7f, 0x0001ffff, 0x00000040, 0xfffffdbf,
        0x010003ff, 0x0007ffff, 0x00010000, 0x03ffffff, 0x00007fff,
        0x0000000f, 0x00007fff, 0x0000007f, 0x01ffffff, 0x7fffffff,
        0xffff0000, 0x00003fff, 0x0000ffff, 0x0000000f, 0xe0fffff8,
        0x0000ffff, 0x000107ff, 0xfff80000, 0x0000000b, 0x00ffffff,
        0x003fffff, 0x000001ff, 0x7fffffff, 0x00070000, 0xffff00f0,
        0x0fffffff, 0x1fff07ff, 0x03ff01ff, 0xffdfffff, 0xdfffffff,
        0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,
        0xffffff3f, 0xf7fffffd, 0xf7ffffff, 0xffdfffff, 0xffdfffff,
        0xffff7fff, 0xffff7fff, 0xfffffdff, 0xfffffdff, 0x00000ff7,
        0x3f801fff, 0x00004000, 0x00000fff, 0x0000001f, 0x0000080f,
        0xffffffef, 0x0af7fe96, 0xaa96ea84, 0x5ef7f796, 0x0ffffbff,
        0x0ffffbee, 0x3fffffff, 0x001fffff, 0x3fffffff, 0xffff0003,
        0x00000001, 0x3fffffff, 0x000007ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 369, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 388, 0};

        static BinaryPropertyObject property_object{IDS, std::move(codepoint_set)};
    }
PropertyObject * get_IDS_PropertyObject() {  return & IDS_ns::property_object; }
    namespace LOWER_ns {
        /** Code Point Ranges for Lower
        [0061, 007a], [00aa, 00aa], [00b5, 00b5], [00ba, 00ba],
        [00df, 00f6], [00f8, 00ff], [0101, 0101], [0103, 0103],
        [0105, 0105], [0107, 0107], [0109, 0109], [010b, 010b],
        [010d, 010d], [010f, 010f], [0111, 0111], [0113, 0113],
        [0115, 0115], [0117, 0117], [0119, 0119], [011b, 011b],
        [011d, 011d], [011f, 011f], [0121, 0121], [0123, 0123],
        [0125, 0125], [0127, 0127], [0129, 0129], [012b, 012b],
        [012d, 012d], [012f, 012f], [0131, 0131], [0133, 0133],
        [0135, 0135], [0137, 0138], [013a, 013a], [013c, 013c],
        [013e, 013e], [0140, 0140], [0142, 0142], [0144, 0144],
        [0146, 0146], [0148, 0149], [014b, 014b], [014d, 014d],
        [014f, 014f], [0151, 0151], [0153, 0153], [0155, 0155],
        [0157, 0157], [0159, 0159], [015b, 015b], [015d, 015d],
        [015f, 015f], [0161, 0161], [0163, 0163], [0165, 0165],
        [0167, 0167], [0169, 0169], [016b, 016b], [016d, 016d],
        [016f, 016f], [0171, 0171], [0173, 0173], [0175, 0175],
        [0177, 0177], [017a, 017a], [017c, 017c], [017e, 0180],
        [0183, 0183], [0185, 0185], [0188, 0188], [018c, 018d],
        [0192, 0192], [0195, 0195], [0199, 019b], [019e, 019e],
        [01a1, 01a1], [01a3, 01a3], [01a5, 01a5], [01a8, 01a8],
        [01aa, 01ab], [01ad, 01ad], [01b0, 01b0], [01b4, 01b4],
        [01b6, 01b6], [01b9, 01ba], [01bd, 01bf], [01c6, 01c6],
        [01c9, 01c9], [01cc, 01cc], [01ce, 01ce], [01d0, 01d0],
        [01d2, 01d2], [01d4, 01d4], [01d6, 01d6], [01d8, 01d8],
        [01da, 01da], [01dc, 01dd], [01df, 01df], [01e1, 01e1],
        [01e3, 01e3], [01e5, 01e5], [01e7, 01e7], [01e9, 01e9],
        [01eb, 01eb], [01ed, 01ed], [01ef, 01f0], [01f3, 01f3],
        [01f5, 01f5], [01f9, 01f9], [01fb, 01fb], [01fd, 01fd],
        [01ff, 01ff], [0201, 0201], [0203, 0203], [0205, 0205],
        [0207, 0207], [0209, 0209], [020b, 020b], [020d, 020d],
        [020f, 020f], [0211, 0211], [0213, 0213], [0215, 0215],
        [0217, 0217], [0219, 0219], [021b, 021b], [021d, 021d],
        [021f, 021f], [0221, 0221], [0223, 0223], [0225, 0225],
        [0227, 0227], [0229, 0229], [022b, 022b], [022d, 022d],
        [022f, 022f], [0231, 0231], [0233, 0239], [023c, 023c],
        [023f, 0240], [0242, 0242], [0247, 0247], [0249, 0249],
        [024b, 024b], [024d, 024d], [024f, 0293], [0295, 02b8],
        [02c0, 02c1], [02e0, 02e4], [0345, 0345], [0371, 0371],
        [0373, 0373], [0377, 0377], [037a, 037d], [0390, 0390],
        [03ac, 03ce], [03d0, 03d1], [03d5, 03d7], [03d9, 03d9],
        [03db, 03db], [03dd, 03dd], [03df, 03df], [03e1, 03e1],
        [03e3, 03e3], [03e5, 03e5], [03e7, 03e7], [03e9, 03e9],
        [03eb, 03eb], [03ed, 03ed], [03ef, 03f3], [03f5, 03f5],
        [03f8, 03f8], [03fb, 03fc], [0430, 045f], [0461, 0461],
        [0463, 0463], [0465, 0465], [0467, 0467], [0469, 0469],
        [046b, 046b], [046d, 046d], [046f, 046f], [0471, 0471],
        [0473, 0473], [0475, 0475], [0477, 0477], [0479, 0479],
        [047b, 047b], [047d, 047d], [047f, 047f], [0481, 0481],
        [048b, 048b], [048d, 048d], [048f, 048f], [0491, 0491],
        [0493, 0493], [0495, 0495], [0497, 0497], [0499, 0499],
        [049b, 049b], [049d, 049d], [049f, 049f], [04a1, 04a1],
        [04a3, 04a3], [04a5, 04a5], [04a7, 04a7], [04a9, 04a9],
        [04ab, 04ab], [04ad, 04ad], [04af, 04af], [04b1, 04b1],
        [04b3, 04b3], [04b5, 04b5], [04b7, 04b7], [04b9, 04b9],
        [04bb, 04bb], [04bd, 04bd], [04bf, 04bf], [04c2, 04c2],
        [04c4, 04c4], [04c6, 04c6], [04c8, 04c8], [04ca, 04ca],
        [04cc, 04cc], [04ce, 04cf], [04d1, 04d1], [04d3, 04d3],
        [04d5, 04d5], [04d7, 04d7], [04d9, 04d9], [04db, 04db],
        [04dd, 04dd], [04df, 04df], [04e1, 04e1], [04e3, 04e3],
        [04e5, 04e5], [04e7, 04e7], [04e9, 04e9], [04eb, 04eb],
        [04ed, 04ed], [04ef, 04ef], [04f1, 04f1], [04f3, 04f3],
        [04f5, 04f5], [04f7, 04f7], [04f9, 04f9], [04fb, 04fb],
        [04fd, 04fd], [04ff, 04ff], [0501, 0501], [0503, 0503],
        [0505, 0505], [0507, 0507], [0509, 0509], [050b, 050b],
        [050d, 050d], [050f, 050f], [0511, 0511], [0513, 0513],
        [0515, 0515], [0517, 0517], [0519, 0519], [051b, 051b],
        [051d, 051d], [051f, 051f], [0521, 0521], [0523, 0523],
        [0525, 0525], [0527, 0527], [0529, 0529], [052b, 052b],
        [052d, 052d], [052f, 052f], [0560, 0588], [10d0, 10fa],
        [10fd, 10ff], [13f8, 13fd], [1c80, 1c88], [1d00, 1dbf],
        [1e01, 1e01], [1e03, 1e03], [1e05, 1e05], [1e07, 1e07],
        [1e09, 1e09], [1e0b, 1e0b], [1e0d, 1e0d], [1e0f, 1e0f],
        [1e11, 1e11], [1e13, 1e13], [1e15, 1e15], [1e17, 1e17],
        [1e19, 1e19], [1e1b, 1e1b], [1e1d, 1e1d], [1e1f, 1e1f],
        [1e21, 1e21], [1e23, 1e23], [1e25, 1e25], [1e27, 1e27],
        [1e29, 1e29], [1e2b, 1e2b], [1e2d, 1e2d], [1e2f, 1e2f],
        [1e31, 1e31], [1e33, 1e33], [1e35, 1e35], [1e37, 1e37],
        [1e39, 1e39], [1e3b, 1e3b], [1e3d, 1e3d], [1e3f, 1e3f],
        [1e41, 1e41], [1e43, 1e43], [1e45, 1e45], [1e47, 1e47],
        [1e49, 1e49], [1e4b, 1e4b], [1e4d, 1e4d], [1e4f, 1e4f],
        [1e51, 1e51], [1e53, 1e53], [1e55, 1e55], [1e57, 1e57],
        [1e59, 1e59], [1e5b, 1e5b], [1e5d, 1e5d], [1e5f, 1e5f],
        [1e61, 1e61], [1e63, 1e63], [1e65, 1e65], [1e67, 1e67],
        [1e69, 1e69], [1e6b, 1e6b], [1e6d, 1e6d], [1e6f, 1e6f],
        [1e71, 1e71], [1e73, 1e73], [1e75, 1e75], [1e77, 1e77],
        [1e79, 1e79], [1e7b, 1e7b], [1e7d, 1e7d], [1e7f, 1e7f],
        [1e81, 1e81], [1e83, 1e83], [1e85, 1e85], [1e87, 1e87],
        [1e89, 1e89], [1e8b, 1e8b], [1e8d, 1e8d], [1e8f, 1e8f],
        [1e91, 1e91], [1e93, 1e93], [1e95, 1e9d], [1e9f, 1e9f],
        [1ea1, 1ea1], [1ea3, 1ea3], [1ea5, 1ea5], [1ea7, 1ea7],
        [1ea9, 1ea9], [1eab, 1eab], [1ead, 1ead], [1eaf, 1eaf],
        [1eb1, 1eb1], [1eb3, 1eb3], [1eb5, 1eb5], [1eb7, 1eb7],
        [1eb9, 1eb9], [1ebb, 1ebb], [1ebd, 1ebd], [1ebf, 1ebf],
        [1ec1, 1ec1], [1ec3, 1ec3], [1ec5, 1ec5], [1ec7, 1ec7],
        [1ec9, 1ec9], [1ecb, 1ecb], [1ecd, 1ecd], [1ecf, 1ecf],
        [1ed1, 1ed1], [1ed3, 1ed3], [1ed5, 1ed5], [1ed7, 1ed7],
        [1ed9, 1ed9], [1edb, 1edb], [1edd, 1edd], [1edf, 1edf],
        [1ee1, 1ee1], [1ee3, 1ee3], [1ee5, 1ee5], [1ee7, 1ee7],
        [1ee9, 1ee9], [1eeb, 1eeb], [1eed, 1eed], [1eef, 1eef],
        [1ef1, 1ef1], [1ef3, 1ef3], [1ef5, 1ef5], [1ef7, 1ef7],
        [1ef9, 1ef9], [1efb, 1efb], [1efd, 1efd], [1eff, 1f07],
        [1f10, 1f15], [1f20, 1f27], [1f30, 1f37], [1f40, 1f45],
        [1f50, 1f57], [1f60, 1f67], [1f70, 1f7d], [1f80, 1f87],
        [1f90, 1f97], [1fa0, 1fa7], [1fb0, 1fb4], [1fb6, 1fb7],
        [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fc7], [1fd0, 1fd3],
        [1fd6, 1fd7], [1fe0, 1fe7], [1ff2, 1ff4], [1ff6, 1ff7],
        [2071, 2071], [207f, 207f], [2090, 209c], [210a, 210a],
        [210e, 210f], [2113, 2113], [212f, 212f], [2134, 2134],
        [2139, 2139], [213c, 213d], [2146, 2149], [214e, 214e],
        [2170, 217f], [2184, 2184], [24d0, 24e9], [2c30, 2c5e],
        [2c61, 2c61], [2c65, 2c66], [2c68, 2c68], [2c6a, 2c6a],
        [2c6c, 2c6c], [2c71, 2c71], [2c73, 2c74], [2c76, 2c7d],
        [2c81, 2c81], [2c83, 2c83], [2c85, 2c85], [2c87, 2c87],
        [2c89, 2c89], [2c8b, 2c8b], [2c8d, 2c8d], [2c8f, 2c8f],
        [2c91, 2c91], [2c93, 2c93], [2c95, 2c95], [2c97, 2c97],
        [2c99, 2c99], [2c9b, 2c9b], [2c9d, 2c9d], [2c9f, 2c9f],
        [2ca1, 2ca1], [2ca3, 2ca3], [2ca5, 2ca5], [2ca7, 2ca7],
        [2ca9, 2ca9], [2cab, 2cab], [2cad, 2cad], [2caf, 2caf],
        [2cb1, 2cb1], [2cb3, 2cb3], [2cb5, 2cb5], [2cb7, 2cb7],
        [2cb9, 2cb9], [2cbb, 2cbb], [2cbd, 2cbd], [2cbf, 2cbf],
        [2cc1, 2cc1], [2cc3, 2cc3], [2cc5, 2cc5], [2cc7, 2cc7],
        [2cc9, 2cc9], [2ccb, 2ccb], [2ccd, 2ccd], [2ccf, 2ccf],
        [2cd1, 2cd1], [2cd3, 2cd3], [2cd5, 2cd5], [2cd7, 2cd7],
        [2cd9, 2cd9], [2cdb, 2cdb], [2cdd, 2cdd], [2cdf, 2cdf],
        [2ce1, 2ce1], [2ce3, 2ce4], [2cec, 2cec], [2cee, 2cee],
        [2cf3, 2cf3], [2d00, 2d25], [2d27, 2d27], [2d2d, 2d2d],
        [a641, a641], [a643, a643], [a645, a645], [a647, a647],
        [a649, a649], [a64b, a64b], [a64d, a64d], [a64f, a64f],
        [a651, a651], [a653, a653], [a655, a655], [a657, a657],
        [a659, a659], [a65b, a65b], [a65d, a65d], [a65f, a65f],
        [a661, a661], [a663, a663], [a665, a665], [a667, a667],
        [a669, a669], [a66b, a66b], [a66d, a66d], [a681, a681],
        [a683, a683], [a685, a685], [a687, a687], [a689, a689],
        [a68b, a68b], [a68d, a68d], [a68f, a68f], [a691, a691],
        [a693, a693], [a695, a695], [a697, a697], [a699, a699],
        [a69b, a69d], [a723, a723], [a725, a725], [a727, a727],
        [a729, a729], [a72b, a72b], [a72d, a72d], [a72f, a731],
        [a733, a733], [a735, a735], [a737, a737], [a739, a739],
        [a73b, a73b], [a73d, a73d], [a73f, a73f], [a741, a741],
        [a743, a743], [a745, a745], [a747, a747], [a749, a749],
        [a74b, a74b], [a74d, a74d], [a74f, a74f], [a751, a751],
        [a753, a753], [a755, a755], [a757, a757], [a759, a759],
        [a75b, a75b], [a75d, a75d], [a75f, a75f], [a761, a761],
        [a763, a763], [a765, a765], [a767, a767], [a769, a769],
        [a76b, a76b], [a76d, a76d], [a76f, a778], [a77a, a77a],
        [a77c, a77c], [a77f, a77f], [a781, a781], [a783, a783],
        [a785, a785], [a787, a787], [a78c, a78c], [a78e, a78e],
        [a791, a791], [a793, a795], [a797, a797], [a799, a799],
        [a79b, a79b], [a79d, a79d], [a79f, a79f], [a7a1, a7a1],
        [a7a3, a7a3], [a7a5, a7a5], [a7a7, a7a7], [a7a9, a7a9],
        [a7af, a7af], [a7b5, a7b5], [a7b7, a7b7], [a7b9, a7b9],
        [a7bb, a7bb], [a7bd, a7bd], [a7bf, a7bf], [a7c3, a7c3],
        [a7c8, a7c8], [a7ca, a7ca], [a7f6, a7f6], [a7f8, a7fa],
        [ab30, ab5a], [ab5c, ab68], [ab70, abbf], [fb00, fb06],
        [fb13, fb17], [ff41, ff5a], [10428, 1044f], [104d8, 104fb],
        [10cc0, 10cf2], [118c0, 118df], [16e60, 16e7f], [1d41a, 1d433],
        [1d44e, 1d454], [1d456, 1d467], [1d482, 1d49b], [1d4b6, 1d4b9],
        [1d4bb, 1d4bb], [1d4bd, 1d4c3], [1d4c5, 1d4cf], [1d4ea, 1d503],
        [1d51e, 1d537], [1d552, 1d56b], [1d586, 1d59f], [1d5ba, 1d5d3],
        [1d5ee, 1d607], [1d622, 1d63b], [1d656, 1d66f], [1d68a, 1d6a5],
        [1d6c2, 1d6da], [1d6dc, 1d6e1], [1d6fc, 1d714], [1d716, 1d71b],
        [1d736, 1d74e], [1d750, 1d755], [1d770, 1d788], [1d78a, 1d78f],
        [1d7aa, 1d7c2], [1d7c4, 1d7c9], [1d7cb, 1d7cb], [1e922, 1e943]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 3}, {Mixed, 1}, {Empty, 1}, {Mixed, 14}, {Full, 1},
        {Mixed, 4}, {Empty, 2}, {Mixed, 6}, {Empty, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 7}, {Empty, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 89}, {Mixed, 2}, {Empty, 23}, {Mixed, 1}, {Empty, 68},
        {Mixed, 1}, {Empty, 3}, {Full, 6}, {Empty, 2}, {Mixed, 16},
        {Empty, 3}, {Mixed, 2}, {Empty, 3}, {Mixed, 5}, {Empty, 25},
        {Mixed, 2}, {Empty, 57}, {Mixed, 7}, {Full, 1}, {Mixed, 1},
        {Empty, 968}, {Mixed, 3}, {Empty, 4}, {Mixed, 7}, {Empty, 25},
        {Mixed, 3}, {Full, 2}, {Empty, 634}, {Mixed, 1}, {Empty, 33},
        {Mixed, 1}, {Empty, 38}, {Mixed, 2}, {Empty, 3}, {Mixed, 2},
        {Empty, 62}, {Full, 1}, {Mixed, 1}, {Empty, 94}, {Full, 1},
        {Empty, 684}, {Full, 1}, {Empty, 812}, {Mixed, 31}, {Empty, 138},
        {Mixed, 2}, {Empty, 30901}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x04200400, 0x80000000, 0xff7fffff, 0xaaaaaaaa,
        0x55aaaaaa, 0xaaaaab55, 0xd4aaaaaa, 0x4e243129, 0xe6512d2a,
        0xb5555240, 0xaa29aaaa, 0xaaaaaaaa, 0x93faaaaa, 0xffffaa85,
        0xffefffff, 0x01ffffff, 0x00000003, 0x0000001f, 0x00000020,
        0x3c8a0000, 0x00010000, 0xfffff000, 0xaae37fff, 0x192faaaa,
        0xffff0000, 0xaaaaaaaa, 0xaaaaa802, 0xaaaaaaaa, 0xaaaad554,
        0xaaaaaaaa, 0xaaaaaaaa, 0x0000aaaa, 0x000001ff, 0xffff0000,
        0xe7ffffff, 0x3f000000, 0x000001ff, 0xaaaaaaaa, 0xaaaaaaaa,
        0xaaaaaaaa, 0xaaaaaaaa, 0xbfeaaaaa, 0xaaaaaaaa, 0xaaaaaaaa,
        0xaaaaaaaa, 0x003f00ff, 0x00ff00ff, 0x00ff003f, 0x3fff00ff,
        0x00ff00ff, 0x40df00ff, 0x00cf00dc, 0x00dc00ff, 0x80020000,
        0x1fff0000, 0x0008c400, 0x32108000, 0x000043c0, 0xffff0000,
        0x00000010, 0xffff0000, 0x000003ff, 0xffff0000, 0x7fffffff,
        0x3fda1562, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0x0008501a,
        0x000020bf, 0xaaaaaaaa, 0x00002aaa, 0x3aaaaaaa, 0xaaabaaa8,
        0xaaaaaaaa, 0x95ffaaaa, 0xaaba50aa, 0xaaa082aa, 0x00000508,
        0x07400000, 0xffff0000, 0xf7ffffff, 0xffff01ff, 0x00f8007f,
        0x07fffffe, 0xffffff00, 0x0000ffff, 0xff000000, 0x0fffffff,
        0x0007ffff, 0xfc000000, 0x000fffff, 0xffdfc000, 0x000000ff,
        0x0ffffffc, 0xebc00000, 0x0000ffef, 0xfffffc00, 0xc000000f,
        0x00ffffff, 0xfffc0000, 0x00000fff, 0xffffffc0, 0xfc000000,
        0x000fffff, 0xffffc000, 0x000000ff, 0x0ffffffc, 0xffc00000,
        0x0000ffff, 0xfffffc00, 0x0000003f, 0xf7fffffc, 0xf0000003,
        0x0fdfffff, 0xffc00000, 0x003f7fff, 0xffff0000, 0x0000fdff,
        0xfffffc00, 0x00000bf7, 0xfffffffc, 0x0000000f};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 62, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 124, 0};

        static BinaryPropertyObject property_object{Lower, std::move(codepoint_set)};
    }
PropertyObject * get_LOWER_PropertyObject() {  return & LOWER_ns::property_object; }
    namespace MATH_ns {
        /** Code Point Ranges for Math
        [002b, 002b], [003c, 003e], [005e, 005e], [007c, 007c],
        [007e, 007e], [00ac, 00ac], [00b1, 00b1], [00d7, 00d7],
        [00f7, 00f7], [03d0, 03d2], [03d5, 03d5], [03f0, 03f1],
        [03f4, 03f6], [0606, 0608], [2016, 2016], [2032, 2034],
        [2040, 2040], [2044, 2044], [2052, 2052], [2061, 2064],
        [207a, 207e], [208a, 208e], [20d0, 20dc], [20e1, 20e1],
        [20e5, 20e6], [20eb, 20ef], [2102, 2102], [2107, 2107],
        [210a, 2113], [2115, 2115], [2118, 211d], [2124, 2124],
        [2128, 2129], [212c, 212d], [212f, 2131], [2133, 2138],
        [213c, 2149], [214b, 214b], [2190, 21a7], [21a9, 21ae],
        [21b0, 21b1], [21b6, 21b7], [21bc, 21db], [21dd, 21dd],
        [21e4, 21e5], [21f4, 22ff], [2308, 230b], [2320, 2321],
        [237c, 237c], [239b, 23b5], [23b7, 23b7], [23d0, 23d0],
        [23dc, 23e2], [25a0, 25a1], [25ae, 25b7], [25bc, 25c1],
        [25c6, 25c7], [25ca, 25cb], [25cf, 25d3], [25e2, 25e2],
        [25e4, 25e4], [25e7, 25ec], [25f8, 25ff], [2605, 2606],
        [2640, 2640], [2642, 2642], [2660, 2663], [266d, 266f],
        [27c0, 27ff], [2900, 2aff], [2b30, 2b44], [2b47, 2b4c],
        [fb29, fb29], [fe61, fe66], [fe68, fe68], [ff0b, ff0b],
        [ff1c, ff1e], [ff3c, ff3c], [ff3e, ff3e], [ff5c, ff5c],
        [ff5e, ff5e], [ffe2, ffe2], [ffe9, ffec], [1d400, 1d454],
        [1d456, 1d49c], [1d49e, 1d49f], [1d4a2, 1d4a2], [1d4a5, 1d4a6],
        [1d4a9, 1d4ac], [1d4ae, 1d4b9], [1d4bb, 1d4bb], [1d4bd, 1d4c3],
        [1d4c5, 1d505], [1d507, 1d50a], [1d50d, 1d514], [1d516, 1d51c],
        [1d51e, 1d539], [1d53b, 1d53e], [1d540, 1d544], [1d546, 1d546],
        [1d54a, 1d550], [1d552, 1d6a5], [1d6a8, 1d7cb], [1d7ce, 1d7ff],
        [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24],
        [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39],
        [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49],
        [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54],
        [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d],
        [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a],
        [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e],
        [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9],
        [1eeab, 1eebb], [1eef0, 1eef1]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 22},
        {Mixed, 2}, {Empty, 16}, {Mixed, 1}, {Empty, 207}, {Mixed, 5},
        {Empty, 1}, {Mixed, 5}, {Empty, 1}, {Mixed, 4}, {Full, 8},
        {Mixed, 2}, {Empty, 1}, {Mixed, 5}, {Empty, 13}, {Mixed, 4},
        {Empty, 1}, {Mixed, 2}, {Empty, 10}, {Full, 2}, {Empty, 8},
        {Full, 16}, {Empty, 1}, {Mixed, 2}, {Empty, 1662}, {Mixed, 1},
        {Empty, 25}, {Mixed, 1}, {Empty, 4}, {Mixed, 3}, {Empty, 4},
        {Mixed, 1}, {Empty, 1696}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 10}, {Mixed, 1},
        {Full, 8}, {Mixed, 1}, {Full, 1}, {Empty, 176}, {Mixed, 6},
        {Empty, 1}, {Mixed, 1}, {Empty, 30856}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x70000800, 0x40000000, 0x50000000, 0x00021000, 0x00800000,
        0x00800000, 0x00270000, 0x00730000, 0x000001c0, 0x00400000,
        0x001c0000, 0x00040011, 0x7c00001e, 0x00007c00, 0x1fff0000,
        0x0000f862, 0x3f2ffc84, 0xf1fbb310, 0x00000bff, 0xffff0000,
        0xf0c37eff, 0x2fffffff, 0xfff00030, 0x00000f00, 0x00000003,
        0x10000000, 0xf8000000, 0x00bfffff, 0xf0010000, 0x00000007,
        0xf0ffc003, 0x000f8cc3, 0xff001f94, 0x00000060, 0x00000005,
        0x0000e00f, 0xffff0000, 0x00001f9f, 0x00000200, 0x0000017e,
        0x70000800, 0x50000000, 0x50000000, 0x00001e04, 0xffdfffff,
        0xdfffffff, 0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff,
        0xfffdfc5f, 0xffffff3f, 0xffffcfff, 0xffffffef, 0x0af7fe96,
        0xaa96ea84, 0x5ef7f796, 0x0ffffbff, 0x0ffffbee, 0x00030000};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 53, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 60, 0};

        static BinaryPropertyObject property_object{Math, std::move(codepoint_set)};
    }
PropertyObject * get_MATH_PropertyObject() {  return & MATH_ns::property_object; }
    namespace UPPER_ns {
        /** Code Point Ranges for Upper
        [0041, 005a], [00c0, 00d6], [00d8, 00de], [0100, 0100],
        [0102, 0102], [0104, 0104], [0106, 0106], [0108, 0108],
        [010a, 010a], [010c, 010c], [010e, 010e], [0110, 0110],
        [0112, 0112], [0114, 0114], [0116, 0116], [0118, 0118],
        [011a, 011a], [011c, 011c], [011e, 011e], [0120, 0120],
        [0122, 0122], [0124, 0124], [0126, 0126], [0128, 0128],
        [012a, 012a], [012c, 012c], [012e, 012e], [0130, 0130],
        [0132, 0132], [0134, 0134], [0136, 0136], [0139, 0139],
        [013b, 013b], [013d, 013d], [013f, 013f], [0141, 0141],
        [0143, 0143], [0145, 0145], [0147, 0147], [014a, 014a],
        [014c, 014c], [014e, 014e], [0150, 0150], [0152, 0152],
        [0154, 0154], [0156, 0156], [0158, 0158], [015a, 015a],
        [015c, 015c], [015e, 015e], [0160, 0160], [0162, 0162],
        [0164, 0164], [0166, 0166], [0168, 0168], [016a, 016a],
        [016c, 016c], [016e, 016e], [0170, 0170], [0172, 0172],
        [0174, 0174], [0176, 0176], [0178, 0179], [017b, 017b],
        [017d, 017d], [0181, 0182], [0184, 0184], [0186, 0187],
        [0189, 018b], [018e, 0191], [0193, 0194], [0196, 0198],
        [019c, 019d], [019f, 01a0], [01a2, 01a2], [01a4, 01a4],
        [01a6, 01a7], [01a9, 01a9], [01ac, 01ac], [01ae, 01af],
        [01b1, 01b3], [01b5, 01b5], [01b7, 01b8], [01bc, 01bc],
        [01c4, 01c4], [01c7, 01c7], [01ca, 01ca], [01cd, 01cd],
        [01cf, 01cf], [01d1, 01d1], [01d3, 01d3], [01d5, 01d5],
        [01d7, 01d7], [01d9, 01d9], [01db, 01db], [01de, 01de],
        [01e0, 01e0], [01e2, 01e2], [01e4, 01e4], [01e6, 01e6],
        [01e8, 01e8], [01ea, 01ea], [01ec, 01ec], [01ee, 01ee],
        [01f1, 01f1], [01f4, 01f4], [01f6, 01f8], [01fa, 01fa],
        [01fc, 01fc], [01fe, 01fe], [0200, 0200], [0202, 0202],
        [0204, 0204], [0206, 0206], [0208, 0208], [020a, 020a],
        [020c, 020c], [020e, 020e], [0210, 0210], [0212, 0212],
        [0214, 0214], [0216, 0216], [0218, 0218], [021a, 021a],
        [021c, 021c], [021e, 021e], [0220, 0220], [0222, 0222],
        [0224, 0224], [0226, 0226], [0228, 0228], [022a, 022a],
        [022c, 022c], [022e, 022e], [0230, 0230], [0232, 0232],
        [023a, 023b], [023d, 023e], [0241, 0241], [0243, 0246],
        [0248, 0248], [024a, 024a], [024c, 024c], [024e, 024e],
        [0370, 0370], [0372, 0372], [0376, 0376], [037f, 037f],
        [0386, 0386], [0388, 038a], [038c, 038c], [038e, 038f],
        [0391, 03a1], [03a3, 03ab], [03cf, 03cf], [03d2, 03d4],
        [03d8, 03d8], [03da, 03da], [03dc, 03dc], [03de, 03de],
        [03e0, 03e0], [03e2, 03e2], [03e4, 03e4], [03e6, 03e6],
        [03e8, 03e8], [03ea, 03ea], [03ec, 03ec], [03ee, 03ee],
        [03f4, 03f4], [03f7, 03f7], [03f9, 03fa], [03fd, 042f],
        [0460, 0460], [0462, 0462], [0464, 0464], [0466, 0466],
        [0468, 0468], [046a, 046a], [046c, 046c], [046e, 046e],
        [0470, 0470], [0472, 0472], [0474, 0474], [0476, 0476],
        [0478, 0478], [047a, 047a], [047c, 047c], [047e, 047e],
        [0480, 0480], [048a, 048a], [048c, 048c], [048e, 048e],
        [0490, 0490], [0492, 0492], [0494, 0494], [0496, 0496],
        [0498, 0498], [049a, 049a], [049c, 049c], [049e, 049e],
        [04a0, 04a0], [04a2, 04a2], [04a4, 04a4], [04a6, 04a6],
        [04a8, 04a8], [04aa, 04aa], [04ac, 04ac], [04ae, 04ae],
        [04b0, 04b0], [04b2, 04b2], [04b4, 04b4], [04b6, 04b6],
        [04b8, 04b8], [04ba, 04ba], [04bc, 04bc], [04be, 04be],
        [04c0, 04c1], [04c3, 04c3], [04c5, 04c5], [04c7, 04c7],
        [04c9, 04c9], [04cb, 04cb], [04cd, 04cd], [04d0, 04d0],
        [04d2, 04d2], [04d4, 04d4], [04d6, 04d6], [04d8, 04d8],
        [04da, 04da], [04dc, 04dc], [04de, 04de], [04e0, 04e0],
        [04e2, 04e2], [04e4, 04e4], [04e6, 04e6], [04e8, 04e8],
        [04ea, 04ea], [04ec, 04ec], [04ee, 04ee], [04f0, 04f0],
        [04f2, 04f2], [04f4, 04f4], [04f6, 04f6], [04f8, 04f8],
        [04fa, 04fa], [04fc, 04fc], [04fe, 04fe], [0500, 0500],
        [0502, 0502], [0504, 0504], [0506, 0506], [0508, 0508],
        [050a, 050a], [050c, 050c], [050e, 050e], [0510, 0510],
        [0512, 0512], [0514, 0514], [0516, 0516], [0518, 0518],
        [051a, 051a], [051c, 051c], [051e, 051e], [0520, 0520],
        [0522, 0522], [0524, 0524], [0526, 0526], [0528, 0528],
        [052a, 052a], [052c, 052c], [052e, 052e], [0531, 0556],
        [10a0, 10c5], [10c7, 10c7], [10cd, 10cd], [13a0, 13f5],
        [1c90, 1cba], [1cbd, 1cbf], [1e00, 1e00], [1e02, 1e02],
        [1e04, 1e04], [1e06, 1e06], [1e08, 1e08], [1e0a, 1e0a],
        [1e0c, 1e0c], [1e0e, 1e0e], [1e10, 1e10], [1e12, 1e12],
        [1e14, 1e14], [1e16, 1e16], [1e18, 1e18], [1e1a, 1e1a],
        [1e1c, 1e1c], [1e1e, 1e1e], [1e20, 1e20], [1e22, 1e22],
        [1e24, 1e24], [1e26, 1e26], [1e28, 1e28], [1e2a, 1e2a],
        [1e2c, 1e2c], [1e2e, 1e2e], [1e30, 1e30], [1e32, 1e32],
        [1e34, 1e34], [1e36, 1e36], [1e38, 1e38], [1e3a, 1e3a],
        [1e3c, 1e3c], [1e3e, 1e3e], [1e40, 1e40], [1e42, 1e42],
        [1e44, 1e44], [1e46, 1e46], [1e48, 1e48], [1e4a, 1e4a],
        [1e4c, 1e4c], [1e4e, 1e4e], [1e50, 1e50], [1e52, 1e52],
        [1e54, 1e54], [1e56, 1e56], [1e58, 1e58], [1e5a, 1e5a],
        [1e5c, 1e5c], [1e5e, 1e5e], [1e60, 1e60], [1e62, 1e62],
        [1e64, 1e64], [1e66, 1e66], [1e68, 1e68], [1e6a, 1e6a],
        [1e6c, 1e6c], [1e6e, 1e6e], [1e70, 1e70], [1e72, 1e72],
        [1e74, 1e74], [1e76, 1e76], [1e78, 1e78], [1e7a, 1e7a],
        [1e7c, 1e7c], [1e7e, 1e7e], [1e80, 1e80], [1e82, 1e82],
        [1e84, 1e84], [1e86, 1e86], [1e88, 1e88], [1e8a, 1e8a],
        [1e8c, 1e8c], [1e8e, 1e8e], [1e90, 1e90], [1e92, 1e92],
        [1e94, 1e94], [1e9e, 1e9e], [1ea0, 1ea0], [1ea2, 1ea2],
        [1ea4, 1ea4], [1ea6, 1ea6], [1ea8, 1ea8], [1eaa, 1eaa],
        [1eac, 1eac], [1eae, 1eae], [1eb0, 1eb0], [1eb2, 1eb2],
        [1eb4, 1eb4], [1eb6, 1eb6], [1eb8, 1eb8], [1eba, 1eba],
        [1ebc, 1ebc], [1ebe, 1ebe], [1ec0, 1ec0], [1ec2, 1ec2],
        [1ec4, 1ec4], [1ec6, 1ec6], [1ec8, 1ec8], [1eca, 1eca],
        [1ecc, 1ecc], [1ece, 1ece], [1ed0, 1ed0], [1ed2, 1ed2],
        [1ed4, 1ed4], [1ed6, 1ed6], [1ed8, 1ed8], [1eda, 1eda],
        [1edc, 1edc], [1ede, 1ede], [1ee0, 1ee0], [1ee2, 1ee2],
        [1ee4, 1ee4], [1ee6, 1ee6], [1ee8, 1ee8], [1eea, 1eea],
        [1eec, 1eec], [1eee, 1eee], [1ef0, 1ef0], [1ef2, 1ef2],
        [1ef4, 1ef4], [1ef6, 1ef6], [1ef8, 1ef8], [1efa, 1efa],
        [1efc, 1efc], [1efe, 1efe], [1f08, 1f0f], [1f18, 1f1d],
        [1f28, 1f2f], [1f38, 1f3f], [1f48, 1f4d], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f5f], [1f68, 1f6f],
        [1fb8, 1fbb], [1fc8, 1fcb], [1fd8, 1fdb], [1fe8, 1fec],
        [1ff8, 1ffb], [2102, 2102], [2107, 2107], [210b, 210d],
        [2110, 2112], [2115, 2115], [2119, 211d], [2124, 2124],
        [2126, 2126], [2128, 2128], [212a, 212d], [2130, 2133],
        [213e, 213f], [2145, 2145], [2160, 216f], [2183, 2183],
        [24b6, 24cf], [2c00, 2c2e], [2c60, 2c60], [2c62, 2c64],
        [2c67, 2c67], [2c69, 2c69], [2c6b, 2c6b], [2c6d, 2c70],
        [2c72, 2c72], [2c75, 2c75], [2c7e, 2c80], [2c82, 2c82],
        [2c84, 2c84], [2c86, 2c86], [2c88, 2c88], [2c8a, 2c8a],
        [2c8c, 2c8c], [2c8e, 2c8e], [2c90, 2c90], [2c92, 2c92],
        [2c94, 2c94], [2c96, 2c96], [2c98, 2c98], [2c9a, 2c9a],
        [2c9c, 2c9c], [2c9e, 2c9e], [2ca0, 2ca0], [2ca2, 2ca2],
        [2ca4, 2ca4], [2ca6, 2ca6], [2ca8, 2ca8], [2caa, 2caa],
        [2cac, 2cac], [2cae, 2cae], [2cb0, 2cb0], [2cb2, 2cb2],
        [2cb4, 2cb4], [2cb6, 2cb6], [2cb8, 2cb8], [2cba, 2cba],
        [2cbc, 2cbc], [2cbe, 2cbe], [2cc0, 2cc0], [2cc2, 2cc2],
        [2cc4, 2cc4], [2cc6, 2cc6], [2cc8, 2cc8], [2cca, 2cca],
        [2ccc, 2ccc], [2cce, 2cce], [2cd0, 2cd0], [2cd2, 2cd2],
        [2cd4, 2cd4], [2cd6, 2cd6], [2cd8, 2cd8], [2cda, 2cda],
        [2cdc, 2cdc], [2cde, 2cde], [2ce0, 2ce0], [2ce2, 2ce2],
        [2ceb, 2ceb], [2ced, 2ced], [2cf2, 2cf2], [a640, a640],
        [a642, a642], [a644, a644], [a646, a646], [a648, a648],
        [a64a, a64a], [a64c, a64c], [a64e, a64e], [a650, a650],
        [a652, a652], [a654, a654], [a656, a656], [a658, a658],
        [a65a, a65a], [a65c, a65c], [a65e, a65e], [a660, a660],
        [a662, a662], [a664, a664], [a666, a666], [a668, a668],
        [a66a, a66a], [a66c, a66c], [a680, a680], [a682, a682],
        [a684, a684], [a686, a686], [a688, a688], [a68a, a68a],
        [a68c, a68c], [a68e, a68e], [a690, a690], [a692, a692],
        [a694, a694], [a696, a696], [a698, a698], [a69a, a69a],
        [a722, a722], [a724, a724], [a726, a726], [a728, a728],
        [a72a, a72a], [a72c, a72c], [a72e, a72e], [a732, a732],
        [a734, a734], [a736, a736], [a738, a738], [a73a, a73a],
        [a73c, a73c], [a73e, a73e], [a740, a740], [a742, a742],
        [a744, a744], [a746, a746], [a748, a748], [a74a, a74a],
        [a74c, a74c], [a74e, a74e], [a750, a750], [a752, a752],
        [a754, a754], [a756, a756], [a758, a758], [a75a, a75a],
        [a75c, a75c], [a75e, a75e], [a760, a760], [a762, a762],
        [a764, a764], [a766, a766], [a768, a768], [a76a, a76a],
        [a76c, a76c], [a76e, a76e], [a779, a779], [a77b, a77b],
        [a77d, a77e], [a780, a780], [a782, a782], [a784, a784],
        [a786, a786], [a78b, a78b], [a78d, a78d], [a790, a790],
        [a792, a792], [a796, a796], [a798, a798], [a79a, a79a],
        [a79c, a79c], [a79e, a79e], [a7a0, a7a0], [a7a2, a7a2],
        [a7a4, a7a4], [a7a6, a7a6], [a7a8, a7a8], [a7aa, a7ae],
        [a7b0, a7b4], [a7b6, a7b6], [a7b8, a7b8], [a7ba, a7ba],
        [a7bc, a7bc], [a7be, a7be], [a7c2, a7c2], [a7c4, a7c7],
        [a7c9, a7c9], [a7f5, a7f5], [ff21, ff3a], [10400, 10427],
        [104b0, 104d3], [10c80, 10cb2], [118a0, 118bf], [16e40, 16e5f],
        [1d400, 1d419], [1d434, 1d44d], [1d468, 1d481], [1d49c, 1d49c],
        [1d49e, 1d49f], [1d4a2, 1d4a2], [1d4a5, 1d4a6], [1d4a9, 1d4ac],
        [1d4ae, 1d4b5], [1d4d0, 1d4e9], [1d504, 1d505], [1d507, 1d50a],
        [1d50d, 1d514], [1d516, 1d51c], [1d538, 1d539], [1d53b, 1d53e],
        [1d540, 1d544], [1d546, 1d546], [1d54a, 1d550], [1d56c, 1d585],
        [1d5a0, 1d5b9], [1d5d4, 1d5ed], [1d608, 1d621], [1d63c, 1d655],
        [1d670, 1d689], [1d6a8, 1d6c0], [1d6e2, 1d6fa], [1d71c, 1d734],
        [1d756, 1d76e], [1d790, 1d7a8], [1d7ca, 1d7ca], [1e900, 1e921],
        [1f130, 1f149], [1f150, 1f169], [1f170, 1f189]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 1},
        {Mixed, 11}, {Empty, 8}, {Mixed, 5}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 8}, {Empty, 90}, {Full, 1}, {Mixed, 1},
        {Empty, 22}, {Full, 2}, {Mixed, 1}, {Empty, 68}, {Mixed, 2},
        {Empty, 10}, {Mixed, 12}, {Empty, 1}, {Mixed, 3}, {Empty, 8},
        {Mixed, 5}, {Empty, 24}, {Mixed, 2}, {Empty, 57}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Mixed, 5}, {Empty, 970}, {Mixed, 3},
        {Empty, 4}, {Mixed, 7}, {Empty, 697}, {Mixed, 1}, {Empty, 38},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Mixed, 2}, {Empty, 61},
        {Full, 1}, {Mixed, 1}, {Empty, 95}, {Full, 1}, {Empty, 684},
        {Full, 1}, {Empty, 813}, {Mixed, 31}, {Empty, 137}, {Full, 1},
        {Mixed, 1}, {Empty, 63}, {Mixed, 4}, {Empty, 30835}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x7f7fffff, 0x55555555, 0xaa555555, 0x555554aa,
        0x2b555555, 0xb1dbced6, 0x11aed2d5, 0x4aaaa490, 0x55d25555,
        0x55555555, 0x6c055555, 0x0000557a, 0x80450000, 0xfffed740,
        0x00000ffb, 0x551c8000, 0xe6905555, 0x0000ffff, 0x55555555,
        0x55555401, 0x55555555, 0x55552aab, 0x55555555, 0x55555555,
        0xfffe5555, 0x007fffff, 0x000020bf, 0x003fffff, 0xffff0000,
        0xe7ffffff, 0x55555555, 0x55555555, 0x55555555, 0x55555555,
        0x40155555, 0x55555555, 0x55555555, 0x55555555, 0x3f00ff00,
        0xff00ff00, 0xaa003f00, 0x0000ff00, 0x0f000000, 0x0f000f00,
        0x0f001f00, 0x3e273884, 0xc00f3d50, 0x00000020, 0x0000ffff,
        0x00000008, 0xffc00000, 0x0000ffff, 0x00007fff, 0xc025ea9d,
        0x55555555, 0x55555555, 0x55555555, 0x00042805, 0x55555555,
        0x00001555, 0x05555555, 0x55545554, 0x55555555, 0x6a005555,
        0x55452855, 0x555f7d55, 0x000002f4, 0x00200000, 0x07fffffe,
        0x000000ff, 0xffff0000, 0x000fffff, 0x0007ffff, 0x03ffffff,
        0xfff00000, 0x00003fff, 0xffffff00, 0xd0000003, 0x003fde64,
        0xffff0000, 0x000003ff, 0x1fdfe7b0, 0x7b000000, 0x0001fc5f,
        0xfffff000, 0x0000003f, 0x03ffffff, 0xfff00000, 0x00003fff,
        0xffffff00, 0xf0000003, 0x003fffff, 0xffff0000, 0x000003ff,
        0xffffff00, 0x00000001, 0x07fffffc, 0xf0000000, 0x001fffff,
        0xffc00000, 0x00007fff, 0xffff0000, 0x000001ff, 0x00000400,
        0x00000003, 0xffff0000, 0xffff03ff, 0xffff03ff, 0x000003ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 59, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 110, 0};

        static BinaryPropertyObject property_object{Upper, std::move(codepoint_set)};
    }
PropertyObject * get_UPPER_PropertyObject() {  return & UPPER_ns::property_object; }
    namespace XIDC_ns {
        /** Code Point Ranges for XIDC
        [0030, 0039], [0041, 005a], [005f, 005f], [0061, 007a],
        [00aa, 00aa], [00b5, 00b5], [00b7, 00b7], [00ba, 00ba],
        [00c0, 00d6], [00d8, 00f6], [00f8, 02c1], [02c6, 02d1],
        [02e0, 02e4], [02ec, 02ec], [02ee, 02ee], [0300, 0374],
        [0376, 0377], [037b, 037d], [037f, 037f], [0386, 038a],
        [038c, 038c], [038e, 03a1], [03a3, 03f5], [03f7, 0481],
        [0483, 0487], [048a, 052f], [0531, 0556], [0559, 0559],
        [0560, 0588], [0591, 05bd], [05bf, 05bf], [05c1, 05c2],
        [05c4, 05c5], [05c7, 05c7], [05d0, 05ea], [05ef, 05f2],
        [0610, 061a], [0620, 0669], [066e, 06d3], [06d5, 06dc],
        [06df, 06e8], [06ea, 06fc], [06ff, 06ff], [0710, 074a],
        [074d, 07b1], [07c0, 07f5], [07fa, 07fa], [07fd, 07fd],
        [0800, 082d], [0840, 085b], [0860, 086a], [08a0, 08b4],
        [08b6, 08c7], [08d3, 08e1], [08e3, 0963], [0966, 096f],
        [0971, 0983], [0985, 098c], [098f, 0990], [0993, 09a8],
        [09aa, 09b0], [09b2, 09b2], [09b6, 09b9], [09bc, 09c4],
        [09c7, 09c8], [09cb, 09ce], [09d7, 09d7], [09dc, 09dd],
        [09df, 09e3], [09e6, 09f1], [09fc, 09fc], [09fe, 09fe],
        [0a01, 0a03], [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28],
        [0a2a, 0a30], [0a32, 0a33], [0a35, 0a36], [0a38, 0a39],
        [0a3c, 0a3c], [0a3e, 0a42], [0a47, 0a48], [0a4b, 0a4d],
        [0a51, 0a51], [0a59, 0a5c], [0a5e, 0a5e], [0a66, 0a75],
        [0a81, 0a83], [0a85, 0a8d], [0a8f, 0a91], [0a93, 0aa8],
        [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9], [0abc, 0ac5],
        [0ac7, 0ac9], [0acb, 0acd], [0ad0, 0ad0], [0ae0, 0ae3],
        [0ae6, 0aef], [0af9, 0aff], [0b01, 0b03], [0b05, 0b0c],
        [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30], [0b32, 0b33],
        [0b35, 0b39], [0b3c, 0b44], [0b47, 0b48], [0b4b, 0b4d],
        [0b55, 0b57], [0b5c, 0b5d], [0b5f, 0b63], [0b66, 0b6f],
        [0b71, 0b71], [0b82, 0b83], [0b85, 0b8a], [0b8e, 0b90],
        [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c], [0b9e, 0b9f],
        [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9], [0bbe, 0bc2],
        [0bc6, 0bc8], [0bca, 0bcd], [0bd0, 0bd0], [0bd7, 0bd7],
        [0be6, 0bef], [0c00, 0c0c], [0c0e, 0c10], [0c12, 0c28],
        [0c2a, 0c39], [0c3d, 0c44], [0c46, 0c48], [0c4a, 0c4d],
        [0c55, 0c56], [0c58, 0c5a], [0c60, 0c63], [0c66, 0c6f],
        [0c80, 0c83], [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8],
        [0caa, 0cb3], [0cb5, 0cb9], [0cbc, 0cc4], [0cc6, 0cc8],
        [0cca, 0ccd], [0cd5, 0cd6], [0cde, 0cde], [0ce0, 0ce3],
        [0ce6, 0cef], [0cf1, 0cf2], [0d00, 0d0c], [0d0e, 0d10],
        [0d12, 0d44], [0d46, 0d48], [0d4a, 0d4e], [0d54, 0d57],
        [0d5f, 0d63], [0d66, 0d6f], [0d7a, 0d7f], [0d81, 0d83],
        [0d85, 0d96], [0d9a, 0db1], [0db3, 0dbb], [0dbd, 0dbd],
        [0dc0, 0dc6], [0dca, 0dca], [0dcf, 0dd4], [0dd6, 0dd6],
        [0dd8, 0ddf], [0de6, 0def], [0df2, 0df3], [0e01, 0e3a],
        [0e40, 0e4e], [0e50, 0e59], [0e81, 0e82], [0e84, 0e84],
        [0e86, 0e8a], [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0ebd],
        [0ec0, 0ec4], [0ec6, 0ec6], [0ec8, 0ecd], [0ed0, 0ed9],
        [0edc, 0edf], [0f00, 0f00], [0f18, 0f19], [0f20, 0f29],
        [0f35, 0f35], [0f37, 0f37], [0f39, 0f39], [0f3e, 0f47],
        [0f49, 0f6c], [0f71, 0f84], [0f86, 0f97], [0f99, 0fbc],
        [0fc6, 0fc6], [1000, 1049], [1050, 109d], [10a0, 10c5],
        [10c7, 10c7], [10cd, 10cd], [10d0, 10fa], [10fc, 1248],
        [124a, 124d], [1250, 1256], [1258, 1258], [125a, 125d],
        [1260, 1288], [128a, 128d], [1290, 12b0], [12b2, 12b5],
        [12b8, 12be], [12c0, 12c0], [12c2, 12c5], [12c8, 12d6],
        [12d8, 1310], [1312, 1315], [1318, 135a], [135d, 135f],
        [1369, 1371], [1380, 138f], [13a0, 13f5], [13f8, 13fd],
        [1401, 166c], [166f, 167f], [1681, 169a], [16a0, 16ea],
        [16ee, 16f8], [1700, 170c], [170e, 1714], [1720, 1734],
        [1740, 1753], [1760, 176c], [176e, 1770], [1772, 1773],
        [1780, 17d3], [17d7, 17d7], [17dc, 17dd], [17e0, 17e9],
        [180b, 180d], [1810, 1819], [1820, 1878], [1880, 18aa],
        [18b0, 18f5], [1900, 191e], [1920, 192b], [1930, 193b],
        [1946, 196d], [1970, 1974], [1980, 19ab], [19b0, 19c9],
        [19d0, 19da], [1a00, 1a1b], [1a20, 1a5e], [1a60, 1a7c],
        [1a7f, 1a89], [1a90, 1a99], [1aa7, 1aa7], [1ab0, 1abd],
        [1abf, 1ac0], [1b00, 1b4b], [1b50, 1b59], [1b6b, 1b73],
        [1b80, 1bf3], [1c00, 1c37], [1c40, 1c49], [1c4d, 1c7d],
        [1c80, 1c88], [1c90, 1cba], [1cbd, 1cbf], [1cd0, 1cd2],
        [1cd4, 1cfa], [1d00, 1df9], [1dfb, 1f15], [1f18, 1f1d],
        [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57], [1f59, 1f59],
        [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d], [1f80, 1fb4],
        [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4], [1fc6, 1fcc],
        [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec], [1ff2, 1ff4],
        [1ff6, 1ffc], [203f, 2040], [2054, 2054], [2071, 2071],
        [207f, 207f], [2090, 209c], [20d0, 20dc], [20e1, 20e1],
        [20e5, 20f0], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2118, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 2139], [213c, 213f], [2145, 2149],
        [214e, 214e], [2160, 2188], [2c00, 2c2e], [2c30, 2c5e],
        [2c60, 2ce4], [2ceb, 2cf3], [2d00, 2d25], [2d27, 2d27],
        [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d6f], [2d7f, 2d96],
        [2da0, 2da6], [2da8, 2dae], [2db0, 2db6], [2db8, 2dbe],
        [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6], [2dd8, 2dde],
        [2de0, 2dff], [3005, 3007], [3021, 302f], [3031, 3035],
        [3038, 303c], [3041, 3096], [3099, 309a], [309d, 309f],
        [30a1, 30fa], [30fc, 30ff], [3105, 312f], [3131, 318e],
        [31a0, 31bf], [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc],
        [a000, a48c], [a4d0, a4fd], [a500, a60c], [a610, a62b],
        [a640, a66f], [a674, a67d], [a67f, a6f1], [a717, a71f],
        [a722, a788], [a78b, a7bf], [a7c2, a7ca], [a7f5, a827],
        [a82c, a82c], [a840, a873], [a880, a8c5], [a8d0, a8d9],
        [a8e0, a8f7], [a8fb, a8fb], [a8fd, a92d], [a930, a953],
        [a960, a97c], [a980, a9c0], [a9cf, a9d9], [a9e0, a9fe],
        [aa00, aa36], [aa40, aa4d], [aa50, aa59], [aa60, aa76],
        [aa7a, aac2], [aadb, aadd], [aae0, aaef], [aaf2, aaf6],
        [ab01, ab06], [ab09, ab0e], [ab11, ab16], [ab20, ab26],
        [ab28, ab2e], [ab30, ab5a], [ab5c, ab69], [ab70, abea],
        [abec, abed], [abf0, abf9], [ac00, d7a3], [d7b0, d7c6],
        [d7cb, d7fb], [f900, fa6d], [fa70, fad9], [fb00, fb06],
        [fb13, fb17], [fb1d, fb28], [fb2a, fb36], [fb38, fb3c],
        [fb3e, fb3e], [fb40, fb41], [fb43, fb44], [fb46, fbb1],
        [fbd3, fc5d], [fc64, fd3d], [fd50, fd8f], [fd92, fdc7],
        [fdf0, fdf9], [fe00, fe0f], [fe20, fe2f], [fe33, fe34],
        [fe4d, fe4f], [fe71, fe71], [fe73, fe73], [fe77, fe77],
        [fe79, fe79], [fe7b, fe7b], [fe7d, fe7d], [fe7f, fefc],
        [ff10, ff19], [ff21, ff3a], [ff3f, ff3f], [ff41, ff5a],
        [ff66, ffbe], [ffc2, ffc7], [ffca, ffcf], [ffd2, ffd7],
        [ffda, ffdc], [10000, 1000b], [1000d, 10026], [10028, 1003a],
        [1003c, 1003d], [1003f, 1004d], [10050, 1005d], [10080, 100fa],
        [10140, 10174], [101fd, 101fd], [10280, 1029c], [102a0, 102d0],
        [102e0, 102e0], [10300, 1031f], [1032d, 1034a], [10350, 1037a],
        [10380, 1039d], [103a0, 103c3], [103c8, 103cf], [103d1, 103d5],
        [10400, 1049d], [104a0, 104a9], [104b0, 104d3], [104d8, 104fb],
        [10500, 10527], [10530, 10563], [10600, 10736], [10740, 10755],
        [10760, 10767], [10800, 10805], [10808, 10808], [1080a, 10835],
        [10837, 10838], [1083c, 1083c], [1083f, 10855], [10860, 10876],
        [10880, 1089e], [108e0, 108f2], [108f4, 108f5], [10900, 10915],
        [10920, 10939], [10980, 109b7], [109be, 109bf], [10a00, 10a03],
        [10a05, 10a06], [10a0c, 10a13], [10a15, 10a17], [10a19, 10a35],
        [10a38, 10a3a], [10a3f, 10a3f], [10a60, 10a7c], [10a80, 10a9c],
        [10ac0, 10ac7], [10ac9, 10ae6], [10b00, 10b35], [10b40, 10b55],
        [10b60, 10b72], [10b80, 10b91], [10c00, 10c48], [10c80, 10cb2],
        [10cc0, 10cf2], [10d00, 10d27], [10d30, 10d39], [10e80, 10ea9],
        [10eab, 10eac], [10eb0, 10eb1], [10f00, 10f1c], [10f27, 10f27],
        [10f30, 10f50], [10fb0, 10fc4], [10fe0, 10ff6], [11000, 11046],
        [11066, 1106f], [1107f, 110ba], [110d0, 110e8], [110f0, 110f9],
        [11100, 11134], [11136, 1113f], [11144, 11147], [11150, 11173],
        [11176, 11176], [11180, 111c4], [111c9, 111cc], [111ce, 111da],
        [111dc, 111dc], [11200, 11211], [11213, 11237], [1123e, 1123e],
        [11280, 11286], [11288, 11288], [1128a, 1128d], [1128f, 1129d],
        [1129f, 112a8], [112b0, 112ea], [112f0, 112f9], [11300, 11303],
        [11305, 1130c], [1130f, 11310], [11313, 11328], [1132a, 11330],
        [11332, 11333], [11335, 11339], [1133b, 11344], [11347, 11348],
        [1134b, 1134d], [11350, 11350], [11357, 11357], [1135d, 11363],
        [11366, 1136c], [11370, 11374], [11400, 1144a], [11450, 11459],
        [1145e, 11461], [11480, 114c5], [114c7, 114c7], [114d0, 114d9],
        [11580, 115b5], [115b8, 115c0], [115d8, 115dd], [11600, 11640],
        [11644, 11644], [11650, 11659], [11680, 116b8], [116c0, 116c9],
        [11700, 1171a], [1171d, 1172b], [11730, 11739], [11800, 1183a],
        [118a0, 118e9], [118ff, 11906], [11909, 11909], [1190c, 11913],
        [11915, 11916], [11918, 11935], [11937, 11938], [1193b, 11943],
        [11950, 11959], [119a0, 119a7], [119aa, 119d7], [119da, 119e1],
        [119e3, 119e4], [11a00, 11a3e], [11a47, 11a47], [11a50, 11a99],
        [11a9d, 11a9d], [11ac0, 11af8], [11c00, 11c08], [11c0a, 11c36],
        [11c38, 11c40], [11c50, 11c59], [11c72, 11c8f], [11c92, 11ca7],
        [11ca9, 11cb6], [11d00, 11d06], [11d08, 11d09], [11d0b, 11d36],
        [11d3a, 11d3a], [11d3c, 11d3d], [11d3f, 11d47], [11d50, 11d59],
        [11d60, 11d65], [11d67, 11d68], [11d6a, 11d8e], [11d90, 11d91],
        [11d93, 11d98], [11da0, 11da9], [11ee0, 11ef6], [11fb0, 11fb0],
        [12000, 12399], [12400, 1246e], [12480, 12543], [13000, 1342e],
        [14400, 14646], [16800, 16a38], [16a40, 16a5e], [16a60, 16a69],
        [16ad0, 16aed], [16af0, 16af4], [16b00, 16b36], [16b40, 16b43],
        [16b50, 16b59], [16b63, 16b77], [16b7d, 16b8f], [16e40, 16e7f],
        [16f00, 16f4a], [16f4f, 16f87], [16f8f, 16f9f], [16fe0, 16fe1],
        [16fe3, 16fe4], [16ff0, 16ff1], [17000, 187f7], [18800, 18cd5],
        [18d00, 18d08], [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167],
        [1b170, 1b2fb], [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88],
        [1bc90, 1bc99], [1bc9d, 1bc9e], [1d165, 1d169], [1d16d, 1d172],
        [1d17b, 1d182], [1d185, 1d18b], [1d1aa, 1d1ad], [1d242, 1d244],
        [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f], [1d4a2, 1d4a2],
        [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9], [1d4bb, 1d4bb],
        [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a], [1d50d, 1d514],
        [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e], [1d540, 1d544],
        [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5], [1d6a8, 1d6c0],
        [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714], [1d716, 1d734],
        [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788], [1d78a, 1d7a8],
        [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1d7ce, 1d7ff], [1da00, 1da36],
        [1da3b, 1da6c], [1da75, 1da75], [1da84, 1da84], [1da9b, 1da9f],
        [1daa1, 1daaf], [1e000, 1e006], [1e008, 1e018], [1e01b, 1e021],
        [1e023, 1e024], [1e026, 1e02a], [1e100, 1e12c], [1e130, 1e13d],
        [1e140, 1e149], [1e14e, 1e14e], [1e2c0, 1e2f9], [1e800, 1e8c4],
        [1e8d0, 1e8d6], [1e900, 1e94b], [1e950, 1e959], [1ee00, 1ee03],
        [1ee05, 1ee1f], [1ee21, 1ee22], [1ee24, 1ee24], [1ee27, 1ee27],
        [1ee29, 1ee32], [1ee34, 1ee37], [1ee39, 1ee39], [1ee3b, 1ee3b],
        [1ee42, 1ee42], [1ee47, 1ee47], [1ee49, 1ee49], [1ee4b, 1ee4b],
        [1ee4d, 1ee4f], [1ee51, 1ee52], [1ee54, 1ee54], [1ee57, 1ee57],
        [1ee59, 1ee59], [1ee5b, 1ee5b], [1ee5d, 1ee5d], [1ee5f, 1ee5f],
        [1ee61, 1ee62], [1ee64, 1ee64], [1ee67, 1ee6a], [1ee6c, 1ee72],
        [1ee74, 1ee77], [1ee79, 1ee7c], [1ee7e, 1ee7e], [1ee80, 1ee89],
        [1ee8b, 1ee9b], [1eea1, 1eea3], [1eea5, 1eea9], [1eeab, 1eebb],
        [1fbf0, 1fbf9], [20000, 2a6dd], [2a700, 2b734], [2b740, 2b81d],
        [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d], [30000, 3134a],
        [e0100, e01ef]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Full, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 4},
        {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Full, 2},
        {Mixed, 1}, {Full, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 3}, {Full, 3}, {Mixed, 30}, {Full, 1},
        {Mixed, 9}, {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 7},
        {Empty, 1}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 10}, {Mixed, 1}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 2},
        {Full, 18}, {Mixed, 2}, {Full, 2}, {Mixed, 5}, {Full, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 5}, {Empty, 1}, {Full, 2}, {Mixed, 2}, {Full, 3},
        {Mixed, 1}, {Full, 1}, {Mixed, 7}, {Full, 7}, {Mixed, 1}, {Full, 8},
        {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Empty, 1}, {Mixed, 4}, {Empty, 1}, {Mixed, 5}, {Full, 1},
        {Mixed, 1}, {Empty, 83}, {Full, 1}, {Mixed, 2}, {Full, 4},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Empty, 16}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2}, {Full, 655},
        {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1}, {Mixed, 2},
        {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 3}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 6},
        {Full, 3}, {Mixed, 1}, {Full, 349}, {Mixed, 3}, {Empty, 264},
        {Full, 11}, {Mixed, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Mixed, 3}, {Full, 2}, {Mixed, 2}, {Full, 3}, {Mixed, 2}, {Full, 5},
        {Mixed, 2}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 6}, {Full, 3},
        {Mixed, 5}, {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 3},
        {Empty, 1}, {Full, 3}, {Mixed, 1}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 3}, {Mixed, 1}, {Empty, 4}, {Mixed, 1},
        {Full, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4},
        {Mixed, 5}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 10}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 3},
        {Full, 2}, {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 5}, {Empty, 4}, {Full, 2},
        {Mixed, 2}, {Full, 2}, {Mixed, 1}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 2}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 2}, {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Empty, 8},
        {Mixed, 6}, {Empty, 2}, {Mixed, 6}, {Empty, 9}, {Mixed, 1},
        {Empty, 5}, {Mixed, 1}, {Empty, 2}, {Full, 28}, {Mixed, 1},
        {Empty, 3}, {Full, 3}, {Mixed, 1}, {Full, 6}, {Mixed, 1},
        {Empty, 85}, {Full, 33}, {Mixed, 1}, {Empty, 126}, {Full, 18},
        {Mixed, 1}, {Empty, 269}, {Full, 17}, {Mixed, 3}, {Empty, 2},
        {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 21}, {Full, 2},
        {Empty, 4}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 2}, {Mixed, 1}, {Full, 191}, {Mixed, 1}, {Full, 38},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 279}, {Full, 8},
        {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Full, 11}, {Mixed, 1},
        {Empty, 72}, {Full, 3}, {Mixed, 2}, {Empty, 166}, {Mixed, 3},
        {Empty, 4}, {Mixed, 1}, {Empty, 13}, {Full, 2}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 10},
        {Mixed, 10}, {Full, 1}, {Empty, 16}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Empty, 42}, {Mixed, 2}, {Empty, 6},
        {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1}, {Mixed, 1},
        {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 37}, {Mixed, 6}, {Empty, 105}, {Mixed, 1},
        {Empty, 32}, {Full, 1334}, {Mixed, 1}, {Empty, 1}, {Full, 129},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Full, 180}, {Mixed, 1},
        {Full, 233}, {Mixed, 1}, {Empty, 96}, {Full, 16}, {Mixed, 1},
        {Empty, 47}, {Full, 154}, {Mixed, 1}, {Empty, 22381}, {Full, 7},
        {Mixed, 1}, {Empty, 6128}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x03ff0000, 0x87fffffe, 0x07fffffe, 0x04a00400, 0xff7fffff,
        0xff7fffff, 0x0003ffc3, 0x0000501f, 0xb8dfffff, 0xffffd7c0,
        0xfffffffb, 0xffbfffff, 0xfffffcfb, 0xfffeffff, 0x027fffff,
        0xfffe01ff, 0xbfffffff, 0xffff00b6, 0x000787ff, 0x07ff0000,
        0xffffc3ff, 0x9fefffff, 0x9ffffdff, 0xffff0000, 0xffffe7ff,
        0x0003ffff, 0x243fffff, 0x00003fff, 0x0fffffff, 0x000007ff,
        0xffdfffff, 0xfff800ff, 0xfffffffb, 0xfffeffcf, 0xfff99fef,
        0xf3c5fdff, 0xb080799f, 0x5003ffcf, 0xfff987ee, 0xd36dfdff,
        0x5e023987, 0x003fffc0, 0xfffbbfee, 0xf3edfdff, 0x00013bbf,
        0xfe00ffcf, 0xfff99fee, 0xf3edfdff, 0xb0e0399f, 0x0002ffcf,
        0xd63dc7ec, 0xc3ffc718, 0x00813dc7, 0x0000ffc0, 0xfffddfff,
        0xe3fffdff, 0x07603ddf, 0x0000ffcf, 0xfffddfef, 0xf3effdff,
        0x40603ddf, 0x0006ffcf, 0xfffddfff, 0x80f07ddf, 0xfc00ffcf,
        0xfc7fffee, 0x2ffbffff, 0xff5f847f, 0x000cffc0, 0xfffffffe,
        0x07ffffff, 0x03ff7fff, 0xfffff7d6, 0x3fffffaf, 0xf3ff3f5f,
        0x03000001, 0xc2a003ff, 0xfffffeff, 0xfffe1fff, 0xfeffffdf,
        0x1fffffff, 0x00000040, 0xffff03ff, 0x3fffffff, 0xffff20bf,
        0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff, 0xff7fff3d,
        0xff3dffff, 0xe7ffffff, 0x0003fe00, 0x0000ffff, 0x3f3fffff,
        0xfffffffe, 0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x001fdfff,
        0x001fffff, 0x000fffff, 0x000ddfff, 0x308fffff, 0x000003ff,
        0x03ff3800, 0x01ffffff, 0xffff07ff, 0x003fffff, 0x7fffffff,
        0x0fff0fff, 0xffffffc0, 0x001f3fff, 0xffff0fff, 0x07ff03ff,
        0x0fffffff, 0x7fffffff, 0x9fffffff, 0x03ff03ff, 0xbfff0080,
        0x00000001, 0x03ff0fff, 0x000ff800, 0x000fffff, 0x00ffffff,
        0xffffe3ff, 0x3fffffff, 0xffff01ff, 0xe7ffffff, 0xfff70000,
        0x07ffffff, 0xfbffffff, 0x3f3fffff, 0xaaff3f3f, 0x3fffffff,
        0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80000000, 0x00100001,
        0x80020000, 0x1fff0000, 0x1fff0000, 0x0001ffe2, 0x3f2ffc84,
        0xf3fffd50, 0x000043e0, 0x000001ff, 0xffff7fff, 0x7fffffff,
        0x000ff81f, 0xffff20bf, 0x800080ff, 0x007fffff, 0x7f7f7f7f,
        0x7f7f7f7f, 0x000000e0, 0x1f3efffe, 0xfffffffe, 0xe67fffff,
        0xfffffffe, 0xf7ffffff, 0xffffffe0, 0xfffeffff, 0x00007fff,
        0xffff0000, 0x1fffffff, 0x00001fff, 0xffff0000, 0x3fffffff,
        0xffff1fff, 0x00000fff, 0xbff0ffff, 0x0003ffff, 0xff800000,
        0xfffffffc, 0xfffff9ff, 0x000007fc, 0xffe00000, 0x000010ff,
        0x000fffff, 0x03ff003f, 0xe8ffffff, 0xffff3fff, 0x000fffff,
        0x1fffffff, 0x03ff8001, 0x7fffffff, 0x007fffff, 0x03ff3fff,
        0xfc7fffff, 0x38000007, 0x007cffff, 0x007e7e7e, 0xffff7f7f,
        0xf7ffffff, 0xffff03ff, 0x03ff37ff, 0xffff000f, 0xfffff87f,
        0x0fffffff, 0xffff3fff, 0x03ffffff, 0xe0f8007f, 0x5f7ffdff,
        0xffffffdb, 0x0003ffff, 0xfff80000, 0x3fffffff, 0xfffffff0,
        0x3fffffff, 0xffff0000, 0xfffcffff, 0x000000ff, 0x03ff0000,
        0x0000ffff, 0x0018ffff, 0x0000e000, 0xaa8a0000, 0x1fffffff,
        0x03ff0000, 0x87fffffe, 0x07fffffe, 0xffffffc0, 0x7fffffff,
        0x1cfcfcfc, 0xffffefff, 0xb7ffff7f, 0x3fff3fff, 0x07ffffff,
        0x001fffff, 0x20000000, 0x1fffffff, 0x0001ffff, 0x00000001,
        0xffffe000, 0xffff07ff, 0x07ffffff, 0x3fffffff, 0x003eff0f,
        0x3fffffff, 0xffff03ff, 0xff0fffff, 0x0fffffff, 0xffff00ff,
        0x0000000f, 0x007fffff, 0x003fffff, 0x000000ff, 0xfffffd3f,
        0x91bfffff, 0x003fffff, 0x007fffff, 0x7fffffff, 0x0037ffff,
        0x003fffff, 0x03ffffff, 0xc0ffffff, 0xfeeff06f, 0x873fffff,
        0x1fffffff, 0x1fffffff, 0xfffffeff, 0x0000007f, 0x003fffff,
        0x003fffff, 0x0007ffff, 0x0003ffff, 0x000001ff, 0x0007ffff,
        0x0007ffff, 0x03ff00ff, 0x00031bff, 0x1fffffff, 0xffff0080,
        0x0001ffff, 0xffff0000, 0x0000001f, 0x007fffff, 0x0000007f,
        0x8000ffc0, 0x07ffffff, 0xffff0000, 0x03ff01ff, 0xffdfffff,
        0xffff00f0, 0x004fffff, 0x17ffde1f, 0xfffbffff, 0x40ffffff,
        0xbfffbd7f, 0xffff01ff, 0x03ff07ff, 0xfff99fef, 0xfbedfdff,
        0xe081399f, 0x001f1fcf, 0xc3ff07ff, 0x00000003, 0x03ff00bf,
        0xff3fffff, 0x3f000001, 0x03ff0011, 0x01ffffff, 0x000003ff,
        0xe7ffffff, 0x03ff0fff, 0x07ffffff, 0x800003ff, 0xff6ff27f,
        0xf9bfffff, 0x03ff000f, 0xfffffcff, 0xfcffffff, 0x0000001b,
        0x7fffffff, 0xffff0080, 0x23ffffff, 0x01ffffff, 0xfffffdff,
        0xff7fffff, 0x03ff0001, 0xfffc0000, 0xfffcffff, 0x007ffeff,
        0xfffffb7f, 0xb47fffff, 0x03ff00ff, 0xfffffdbf, 0x01fb7fff,
        0x000003ff, 0x007fffff, 0x00010000, 0x03ffffff, 0x00007fff,
        0x0000000f, 0x00007fff, 0x0000007f, 0x01ffffff, 0x7fffffff,
        0x000003ff, 0xffff0000, 0x001f3fff, 0x007fffff, 0x03ff000f,
        0xe0fffff8, 0x0000ffff, 0xffff87ff, 0xffff80ff, 0x0003001b,
        0x00ffffff, 0x003fffff, 0x000001ff, 0x7fffffff, 0x00070000,
        0xffff00f0, 0x0fffffff, 0x1fff07ff, 0x63ff01ff, 0xf807e3e0,
        0x00000fe7, 0x00003c00, 0x0000001c, 0xffdfffff, 0xdfffffff,
        0xebffde64, 0xffffffef, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,
        0xffffff3f, 0xf7fffffd, 0xf7ffffff, 0xffdfffff, 0xffdfffff,
        0xffff7fff, 0xffff7fff, 0xfffffdff, 0xfffffdff, 0xffffcff7,
        0xf87fffff, 0x00201fff, 0xf8000010, 0x0000fffe, 0xf9ffff7f,
        0x000007db, 0x3fff1fff, 0x000043ff, 0x03ffffff, 0x007f001f,
        0x03ff0fff, 0xffffffef, 0x0af7fe96, 0xaa96ea84, 0x5ef7f796,
        0x0ffffbff, 0x0ffffbee, 0x03ff0000, 0x3fffffff, 0x001fffff,
        0x3fffffff, 0xffff0003, 0x00000001, 0x3fffffff, 0x000007ff,
        0x0000ffff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 391, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 406, 0};

        static BinaryPropertyObject property_object{XIDC, std::move(codepoint_set)};
    }
PropertyObject * get_XIDC_PropertyObject() {  return & XIDC_ns::property_object; }
    namespace XIDS_ns {
        /** Code Point Ranges for XIDS
        [0041, 005a], [0061, 007a], [00aa, 00aa], [00b5, 00b5],
        [00ba, 00ba], [00c0, 00d6], [00d8, 00f6], [00f8, 02c1],
        [02c6, 02d1], [02e0, 02e4], [02ec, 02ec], [02ee, 02ee],
        [0370, 0374], [0376, 0377], [037b, 037d], [037f, 037f],
        [0386, 0386], [0388, 038a], [038c, 038c], [038e, 03a1],
        [03a3, 03f5], [03f7, 0481], [048a, 052f], [0531, 0556],
        [0559, 0559], [0560, 0588], [05d0, 05ea], [05ef, 05f2],
        [0620, 064a], [066e, 066f], [0671, 06d3], [06d5, 06d5],
        [06e5, 06e6], [06ee, 06ef], [06fa, 06fc], [06ff, 06ff],
        [0710, 0710], [0712, 072f], [074d, 07a5], [07b1, 07b1],
        [07ca, 07ea], [07f4, 07f5], [07fa, 07fa], [0800, 0815],
        [081a, 081a], [0824, 0824], [0828, 0828], [0840, 0858],
        [0860, 086a], [08a0, 08b4], [08b6, 08c7], [0904, 0939],
        [093d, 093d], [0950, 0950], [0958, 0961], [0971, 0980],
        [0985, 098c], [098f, 0990], [0993, 09a8], [09aa, 09b0],
        [09b2, 09b2], [09b6, 09b9], [09bd, 09bd], [09ce, 09ce],
        [09dc, 09dd], [09df, 09e1], [09f0, 09f1], [09fc, 09fc],
        [0a05, 0a0a], [0a0f, 0a10], [0a13, 0a28], [0a2a, 0a30],
        [0a32, 0a33], [0a35, 0a36], [0a38, 0a39], [0a59, 0a5c],
        [0a5e, 0a5e], [0a72, 0a74], [0a85, 0a8d], [0a8f, 0a91],
        [0a93, 0aa8], [0aaa, 0ab0], [0ab2, 0ab3], [0ab5, 0ab9],
        [0abd, 0abd], [0ad0, 0ad0], [0ae0, 0ae1], [0af9, 0af9],
        [0b05, 0b0c], [0b0f, 0b10], [0b13, 0b28], [0b2a, 0b30],
        [0b32, 0b33], [0b35, 0b39], [0b3d, 0b3d], [0b5c, 0b5d],
        [0b5f, 0b61], [0b71, 0b71], [0b83, 0b83], [0b85, 0b8a],
        [0b8e, 0b90], [0b92, 0b95], [0b99, 0b9a], [0b9c, 0b9c],
        [0b9e, 0b9f], [0ba3, 0ba4], [0ba8, 0baa], [0bae, 0bb9],
        [0bd0, 0bd0], [0c05, 0c0c], [0c0e, 0c10], [0c12, 0c28],
        [0c2a, 0c39], [0c3d, 0c3d], [0c58, 0c5a], [0c60, 0c61],
        [0c80, 0c80], [0c85, 0c8c], [0c8e, 0c90], [0c92, 0ca8],
        [0caa, 0cb3], [0cb5, 0cb9], [0cbd, 0cbd], [0cde, 0cde],
        [0ce0, 0ce1], [0cf1, 0cf2], [0d04, 0d0c], [0d0e, 0d10],
        [0d12, 0d3a], [0d3d, 0d3d], [0d4e, 0d4e], [0d54, 0d56],
        [0d5f, 0d61], [0d7a, 0d7f], [0d85, 0d96], [0d9a, 0db1],
        [0db3, 0dbb], [0dbd, 0dbd], [0dc0, 0dc6], [0e01, 0e30],
        [0e32, 0e32], [0e40, 0e46], [0e81, 0e82], [0e84, 0e84],
        [0e86, 0e8a], [0e8c, 0ea3], [0ea5, 0ea5], [0ea7, 0eb0],
        [0eb2, 0eb2], [0ebd, 0ebd], [0ec0, 0ec4], [0ec6, 0ec6],
        [0edc, 0edf], [0f00, 0f00], [0f40, 0f47], [0f49, 0f6c],
        [0f88, 0f8c], [1000, 102a], [103f, 103f], [1050, 1055],
        [105a, 105d], [1061, 1061], [1065, 1066], [106e, 1070],
        [1075, 1081], [108e, 108e], [10a0, 10c5], [10c7, 10c7],
        [10cd, 10cd], [10d0, 10fa], [10fc, 1248], [124a, 124d],
        [1250, 1256], [1258, 1258], [125a, 125d], [1260, 1288],
        [128a, 128d], [1290, 12b0], [12b2, 12b5], [12b8, 12be],
        [12c0, 12c0], [12c2, 12c5], [12c8, 12d6], [12d8, 1310],
        [1312, 1315], [1318, 135a], [1380, 138f], [13a0, 13f5],
        [13f8, 13fd], [1401, 166c], [166f, 167f], [1681, 169a],
        [16a0, 16ea], [16ee, 16f8], [1700, 170c], [170e, 1711],
        [1720, 1731], [1740, 1751], [1760, 176c], [176e, 1770],
        [1780, 17b3], [17d7, 17d7], [17dc, 17dc], [1820, 1878],
        [1880, 18a8], [18aa, 18aa], [18b0, 18f5], [1900, 191e],
        [1950, 196d], [1970, 1974], [1980, 19ab], [19b0, 19c9],
        [1a00, 1a16], [1a20, 1a54], [1aa7, 1aa7], [1b05, 1b33],
        [1b45, 1b4b], [1b83, 1ba0], [1bae, 1baf], [1bba, 1be5],
        [1c00, 1c23], [1c4d, 1c4f], [1c5a, 1c7d], [1c80, 1c88],
        [1c90, 1cba], [1cbd, 1cbf], [1ce9, 1cec], [1cee, 1cf3],
        [1cf5, 1cf6], [1cfa, 1cfa], [1d00, 1dbf], [1e00, 1f15],
        [1f18, 1f1d], [1f20, 1f45], [1f48, 1f4d], [1f50, 1f57],
        [1f59, 1f59], [1f5b, 1f5b], [1f5d, 1f5d], [1f5f, 1f7d],
        [1f80, 1fb4], [1fb6, 1fbc], [1fbe, 1fbe], [1fc2, 1fc4],
        [1fc6, 1fcc], [1fd0, 1fd3], [1fd6, 1fdb], [1fe0, 1fec],
        [1ff2, 1ff4], [1ff6, 1ffc], [2071, 2071], [207f, 207f],
        [2090, 209c], [2102, 2102], [2107, 2107], [210a, 2113],
        [2115, 2115], [2118, 211d], [2124, 2124], [2126, 2126],
        [2128, 2128], [212a, 2139], [213c, 213f], [2145, 2149],
        [214e, 214e], [2160, 2188], [2c00, 2c2e], [2c30, 2c5e],
        [2c60, 2ce4], [2ceb, 2cee], [2cf2, 2cf3], [2d00, 2d25],
        [2d27, 2d27], [2d2d, 2d2d], [2d30, 2d67], [2d6f, 2d6f],
        [2d80, 2d96], [2da0, 2da6], [2da8, 2dae], [2db0, 2db6],
        [2db8, 2dbe], [2dc0, 2dc6], [2dc8, 2dce], [2dd0, 2dd6],
        [2dd8, 2dde], [3005, 3007], [3021, 3029], [3031, 3035],
        [3038, 303c], [3041, 3096], [309d, 309f], [30a1, 30fa],
        [30fc, 30ff], [3105, 312f], [3131, 318e], [31a0, 31bf],
        [31f0, 31ff], [3400, 4dbf], [4e00, 9ffc], [a000, a48c],
        [a4d0, a4fd], [a500, a60c], [a610, a61f], [a62a, a62b],
        [a640, a66e], [a67f, a69d], [a6a0, a6ef], [a717, a71f],
        [a722, a788], [a78b, a7bf], [a7c2, a7ca], [a7f5, a801],
        [a803, a805], [a807, a80a], [a80c, a822], [a840, a873],
        [a882, a8b3], [a8f2, a8f7], [a8fb, a8fb], [a8fd, a8fe],
        [a90a, a925], [a930, a946], [a960, a97c], [a984, a9b2],
        [a9cf, a9cf], [a9e0, a9e4], [a9e6, a9ef], [a9fa, a9fe],
        [aa00, aa28], [aa40, aa42], [aa44, aa4b], [aa60, aa76],
        [aa7a, aa7a], [aa7e, aaaf], [aab1, aab1], [aab5, aab6],
        [aab9, aabd], [aac0, aac0], [aac2, aac2], [aadb, aadd],
        [aae0, aaea], [aaf2, aaf4], [ab01, ab06], [ab09, ab0e],
        [ab11, ab16], [ab20, ab26], [ab28, ab2e], [ab30, ab5a],
        [ab5c, ab69], [ab70, abe2], [ac00, d7a3], [d7b0, d7c6],
        [d7cb, d7fb], [f900, fa6d], [fa70, fad9], [fb00, fb06],
        [fb13, fb17], [fb1d, fb1d], [fb1f, fb28], [fb2a, fb36],
        [fb38, fb3c], [fb3e, fb3e], [fb40, fb41], [fb43, fb44],
        [fb46, fbb1], [fbd3, fc5d], [fc64, fd3d], [fd50, fd8f],
        [fd92, fdc7], [fdf0, fdf9], [fe71, fe71], [fe73, fe73],
        [fe77, fe77], [fe79, fe79], [fe7b, fe7b], [fe7d, fe7d],
        [fe7f, fefc], [ff21, ff3a], [ff41, ff5a], [ff66, ff9d],
        [ffa0, ffbe], [ffc2, ffc7], [ffca, ffcf], [ffd2, ffd7],
        [ffda, ffdc], [10000, 1000b], [1000d, 10026], [10028, 1003a],
        [1003c, 1003d], [1003f, 1004d], [10050, 1005d], [10080, 100fa],
        [10140, 10174], [10280, 1029c], [102a0, 102d0], [10300, 1031f],
        [1032d, 1034a], [10350, 10375], [10380, 1039d], [103a0, 103c3],
        [103c8, 103cf], [103d1, 103d5], [10400, 1049d], [104b0, 104d3],
        [104d8, 104fb], [10500, 10527], [10530, 10563], [10600, 10736],
        [10740, 10755], [10760, 10767], [10800, 10805], [10808, 10808],
        [1080a, 10835], [10837, 10838], [1083c, 1083c], [1083f, 10855],
        [10860, 10876], [10880, 1089e], [108e0, 108f2], [108f4, 108f5],
        [10900, 10915], [10920, 10939], [10980, 109b7], [109be, 109bf],
        [10a00, 10a00], [10a10, 10a13], [10a15, 10a17], [10a19, 10a35],
        [10a60, 10a7c], [10a80, 10a9c], [10ac0, 10ac7], [10ac9, 10ae4],
        [10b00, 10b35], [10b40, 10b55], [10b60, 10b72], [10b80, 10b91],
        [10c00, 10c48], [10c80, 10cb2], [10cc0, 10cf2], [10d00, 10d23],
        [10e80, 10ea9], [10eb0, 10eb1], [10f00, 10f1c], [10f27, 10f27],
        [10f30, 10f45], [10fb0, 10fc4], [10fe0, 10ff6], [11003, 11037],
        [11083, 110af], [110d0, 110e8], [11103, 11126], [11144, 11144],
        [11147, 11147], [11150, 11172], [11176, 11176], [11183, 111b2],
        [111c1, 111c4], [111da, 111da], [111dc, 111dc], [11200, 11211],
        [11213, 1122b], [11280, 11286], [11288, 11288], [1128a, 1128d],
        [1128f, 1129d], [1129f, 112a8], [112b0, 112de], [11305, 1130c],
        [1130f, 11310], [11313, 11328], [1132a, 11330], [11332, 11333],
        [11335, 11339], [1133d, 1133d], [11350, 11350], [1135d, 11361],
        [11400, 11434], [11447, 1144a], [1145f, 11461], [11480, 114af],
        [114c4, 114c5], [114c7, 114c7], [11580, 115ae], [115d8, 115db],
        [11600, 1162f], [11644, 11644], [11680, 116aa], [116b8, 116b8],
        [11700, 1171a], [11800, 1182b], [118a0, 118df], [118ff, 11906],
        [11909, 11909], [1190c, 11913], [11915, 11916], [11918, 1192f],
        [1193f, 1193f], [11941, 11941], [119a0, 119a7], [119aa, 119d0],
        [119e1, 119e1], [119e3, 119e3], [11a00, 11a00], [11a0b, 11a32],
        [11a3a, 11a3a], [11a50, 11a50], [11a5c, 11a89], [11a9d, 11a9d],
        [11ac0, 11af8], [11c00, 11c08], [11c0a, 11c2e], [11c40, 11c40],
        [11c72, 11c8f], [11d00, 11d06], [11d08, 11d09], [11d0b, 11d30],
        [11d46, 11d46], [11d60, 11d65], [11d67, 11d68], [11d6a, 11d89],
        [11d98, 11d98], [11ee0, 11ef2], [11fb0, 11fb0], [12000, 12399],
        [12400, 1246e], [12480, 12543], [13000, 1342e], [14400, 14646],
        [16800, 16a38], [16a40, 16a5e], [16ad0, 16aed], [16b00, 16b2f],
        [16b40, 16b43], [16b63, 16b77], [16b7d, 16b8f], [16e40, 16e7f],
        [16f00, 16f4a], [16f50, 16f50], [16f93, 16f9f], [16fe0, 16fe1],
        [16fe3, 16fe3], [17000, 187f7], [18800, 18cd5], [18d00, 18d08],
        [1b000, 1b11e], [1b150, 1b152], [1b164, 1b167], [1b170, 1b2fb],
        [1bc00, 1bc6a], [1bc70, 1bc7c], [1bc80, 1bc88], [1bc90, 1bc99],
        [1d400, 1d454], [1d456, 1d49c], [1d49e, 1d49f], [1d4a2, 1d4a2],
        [1d4a5, 1d4a6], [1d4a9, 1d4ac], [1d4ae, 1d4b9], [1d4bb, 1d4bb],
        [1d4bd, 1d4c3], [1d4c5, 1d505], [1d507, 1d50a], [1d50d, 1d514],
        [1d516, 1d51c], [1d51e, 1d539], [1d53b, 1d53e], [1d540, 1d544],
        [1d546, 1d546], [1d54a, 1d550], [1d552, 1d6a5], [1d6a8, 1d6c0],
        [1d6c2, 1d6da], [1d6dc, 1d6fa], [1d6fc, 1d714], [1d716, 1d734],
        [1d736, 1d74e], [1d750, 1d76e], [1d770, 1d788], [1d78a, 1d7a8],
        [1d7aa, 1d7c2], [1d7c4, 1d7cb], [1e100, 1e12c], [1e137, 1e13d],
        [1e14e, 1e14e], [1e2c0, 1e2eb], [1e800, 1e8c4], [1e900, 1e943],
        [1e94b, 1e94b], [1ee00, 1ee03], [1ee05, 1ee1f], [1ee21, 1ee22],
        [1ee24, 1ee24], [1ee27, 1ee27], [1ee29, 1ee32], [1ee34, 1ee37],
        [1ee39, 1ee39], [1ee3b, 1ee3b], [1ee42, 1ee42], [1ee47, 1ee47],
        [1ee49, 1ee49], [1ee4b, 1ee4b], [1ee4d, 1ee4f], [1ee51, 1ee52],
        [1ee54, 1ee54], [1ee57, 1ee57], [1ee59, 1ee59], [1ee5b, 1ee5b],
        [1ee5d, 1ee5d], [1ee5f, 1ee5f], [1ee61, 1ee62], [1ee64, 1ee64],
        [1ee67, 1ee6a], [1ee6c, 1ee72], [1ee74, 1ee77], [1ee79, 1ee7c],
        [1ee7e, 1ee7e], [1ee80, 1ee89], [1ee8b, 1ee9b], [1eea1, 1eea3],
        [1eea5, 1eea9], [1eeab, 1eebb], [20000, 2a6dd], [2a700, 2b734],
        [2b740, 2b81d], [2b820, 2cea1], [2ceb0, 2ebe0], [2f800, 2fa1d],
        [30000, 3134a]**/


        namespace {
        const static UnicodeSet::run_t __codepoint_set_runs[] = {
        {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 3}, {Full, 14},
        {Mixed, 2}, {Empty, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1},
        {Full, 4}, {Mixed, 1}, {Full, 4}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 2},
        {Full, 2}, {Mixed, 5}, {Full, 2}, {Mixed, 7}, {Empty, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 23}, {Empty, 1}, {Mixed, 15},
        {Empty, 1}, {Mixed, 3}, {Empty, 1}, {Mixed, 3}, {Empty, 1},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Empty, 3}, {Full, 1},
        {Mixed, 4}, {Full, 1}, {Mixed, 2}, {Full, 10}, {Mixed, 1},
        {Full, 1}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 18},
        {Mixed, 2}, {Full, 2}, {Mixed, 5}, {Full, 1}, {Mixed, 2},
        {Empty, 2}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 2},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 1}, {Mixed, 2},
        {Full, 1}, {Mixed, 1}, {Full, 1}, {Mixed, 5}, {Empty, 1},
        {Mixed, 1}, {Full, 6}, {Empty, 2}, {Full, 8}, {Mixed, 1}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Empty, 3}, {Mixed, 2},
        {Empty, 3}, {Mixed, 3}, {Full, 1}, {Mixed, 1}, {Empty, 83},
        {Full, 1}, {Mixed, 2}, {Full, 4}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 4}, {Empty, 17}, {Mixed, 3}, {Full, 1},
        {Mixed, 2}, {Full, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Empty, 1}, {Mixed, 1}, {Empty, 16}, {Full, 206}, {Empty, 2},
        {Full, 655}, {Mixed, 1}, {Full, 36}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Full, 8}, {Mixed, 2}, {Full, 1}, {Mixed, 2}, {Full, 2},
        {Mixed, 3}, {Full, 2}, {Mixed, 1}, {Full, 1}, {Mixed, 4}, {Full, 1},
        {Mixed, 3}, {Empty, 1}, {Mixed, 9}, {Full, 1}, {Mixed, 3},
        {Full, 1}, {Mixed, 7}, {Full, 3}, {Mixed, 1}, {Full, 349},
        {Mixed, 3}, {Empty, 264}, {Full, 11}, {Mixed, 1}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Mixed, 3}, {Full, 2}, {Mixed, 2},
        {Full, 3}, {Mixed, 2}, {Full, 5}, {Mixed, 2}, {Full, 1}, {Mixed, 1},
        {Full, 1}, {Mixed, 2}, {Empty, 3}, {Mixed, 1}, {Full, 3},
        {Mixed, 1}, {Empty, 1}, {Mixed, 6}, {Empty, 1}, {Mixed, 3},
        {Empty, 1}, {Full, 3}, {Mixed, 1}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 8}, {Mixed, 1}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 1}, {Mixed, 4}, {Full, 1}, {Mixed, 1},
        {Empty, 1}, {Full, 4}, {Mixed, 4}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Empty, 4}, {Full, 9}, {Mixed, 3}, {Empty, 4},
        {Mixed, 5}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 1}, {Mixed, 2},
        {Empty, 1}, {Mixed, 2}, {Full, 1}, {Mixed, 4}, {Empty, 3},
        {Full, 2}, {Mixed, 1}, {Empty, 1}, {Full, 1}, {Mixed, 1}, {Full, 1},
        {Mixed, 1}, {Full, 1}, {Mixed, 1}, {Empty, 10}, {Full, 1},
        {Mixed, 1}, {Empty, 2}, {Mixed, 3}, {Empty, 2}, {Mixed, 5},
        {Empty, 2}, {Mixed, 11}, {Empty, 1}, {Mixed, 2}, {Empty, 2},
        {Mixed, 3}, {Empty, 1}, {Mixed, 4}, {Empty, 4}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 2}, {Empty, 5}, {Full, 1},
        {Mixed, 2}, {Empty, 1}, {Full, 1}, {Mixed, 2}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1}, {Empty, 7},
        {Full, 1}, {Mixed, 1}, {Empty, 3}, {Full, 2}, {Mixed, 4},
        {Empty, 2}, {Mixed, 6}, {Full, 1}, {Mixed, 1}, {Empty, 1},
        {Full, 1}, {Mixed, 1}, {Empty, 8}, {Mixed, 5}, {Empty, 3},
        {Mixed, 5}, {Empty, 10}, {Mixed, 1}, {Empty, 5}, {Mixed, 1},
        {Empty, 2}, {Full, 28}, {Mixed, 1}, {Empty, 3}, {Full, 3},
        {Mixed, 1}, {Full, 6}, {Mixed, 1}, {Empty, 85}, {Full, 33},
        {Mixed, 1}, {Empty, 126}, {Full, 18}, {Mixed, 1}, {Empty, 269},
        {Full, 17}, {Mixed, 2}, {Empty, 3}, {Mixed, 2}, {Full, 1},
        {Mixed, 4}, {Empty, 21}, {Full, 2}, {Empty, 4}, {Full, 2},
        {Mixed, 1}, {Empty, 1}, {Mixed, 1}, {Empty, 2}, {Mixed, 1},
        {Full, 191}, {Mixed, 1}, {Full, 38}, {Mixed, 1}, {Empty, 1},
        {Mixed, 1}, {Empty, 279}, {Full, 8}, {Mixed, 1}, {Empty, 1},
        {Mixed, 2}, {Full, 11}, {Mixed, 1}, {Empty, 72}, {Full, 3},
        {Mixed, 2}, {Empty, 187}, {Full, 2}, {Mixed, 1}, {Full, 1},
        {Mixed, 3}, {Full, 1}, {Mixed, 3}, {Full, 10}, {Mixed, 10},
        {Empty, 73}, {Full, 1}, {Mixed, 2}, {Empty, 11}, {Full, 1},
        {Mixed, 1}, {Empty, 40}, {Full, 6}, {Mixed, 1}, {Empty, 1},
        {Full, 2}, {Mixed, 1}, {Empty, 37}, {Mixed, 6}, {Empty, 138},
        {Full, 1334}, {Mixed, 1}, {Empty, 1}, {Full, 129}, {Mixed, 1},
        {Full, 6}, {Mixed, 1}, {Full, 180}, {Mixed, 1}, {Full, 233},
        {Mixed, 1}, {Empty, 96}, {Full, 16}, {Mixed, 1}, {Empty, 47},
        {Full, 154}, {Mixed, 1}, {Empty, 28517}};
        const static UnicodeSet::bitquad_t  __codepoint_set_quads[] = {
        0x07fffffe, 0x07fffffe, 0x04200400, 0xff7fffff, 0xff7fffff,
        0x0003ffc3, 0x0000501f, 0xb8df0000, 0xffffd740, 0xfffffffb,
        0xffbfffff, 0xfffffc03, 0xfffeffff, 0x027fffff, 0x000001ff,
        0xffff0000, 0x000787ff, 0x000007ff, 0xfffec000, 0x002fffff,
        0x9c00c060, 0xfffd0000, 0x0000ffff, 0xffffe000, 0x0002003f,
        0xfffffc00, 0x043007ff, 0x043fffff, 0x00000110, 0x01ffffff,
        0x000007ff, 0xffdfffff, 0x000000ff, 0xfffffff0, 0x23ffffff,
        0xff010000, 0xfffe0003, 0xfff99fe1, 0x23c5fdff, 0xb0004000,
        0x10030003, 0xfff987e0, 0x036dfdff, 0x5e000000, 0x001c0000,
        0xfffbbfe0, 0x23edfdff, 0x00010000, 0x02000003, 0xfff99fe0,
        0x23edfdff, 0xb0000000, 0x00020003, 0xd63dc7e8, 0x03ffc718,
        0x00010000, 0xfffddfe0, 0x23fffdff, 0x07000000, 0x00000003,
        0xfffddfe1, 0x23effdff, 0x40000000, 0x00060003, 0xfffddff0,
        0x27ffffff, 0x80704000, 0xfc000003, 0xfc7fffe0, 0x2ffbffff,
        0x0000007f, 0xfffffffe, 0x0005ffff, 0x0000007f, 0xfffff7d6,
        0x2005ffaf, 0xf000005f, 0x00000001, 0xfffffeff, 0x00001fff,
        0x00001f00, 0x800007ff, 0x3c3f0000, 0xffe1c062, 0x00004003,
        0xffff20bf, 0xf7ffffff, 0x3d7f3dff, 0xffff3dff, 0x7f3dffff,
        0xff7fff3d, 0xff3dffff, 0x07ffffff, 0x0000ffff, 0x3f3fffff,
        0xfffffffe, 0xffff9fff, 0x07fffffe, 0x01ffc7ff, 0x0003dfff,
        0x0003ffff, 0x0003ffff, 0x0001dfff, 0x000fffff, 0x10800000,
        0x01ffffff, 0xffff05ff, 0x003fffff, 0x7fffffff, 0xffff0000,
        0x001f3fff, 0xffff0fff, 0x000003ff, 0x007fffff, 0x001fffff,
        0x00000080, 0xffffffe0, 0x000fffff, 0x00000fe0, 0xfffffff8,
        0xfc00c001, 0x0000003f, 0x0000000f, 0xfc00e000, 0x3fffffff,
        0xffff01ff, 0xe7ffffff, 0x046fde00, 0x3f3fffff, 0xaaff3f3f,
        0x3fffffff, 0x5fdfffff, 0x0fcf1fdc, 0x1fdc1fff, 0x80020000,
        0x1fff0000, 0x3f2ffc84, 0xf3fffd50, 0x000043e0, 0x000001ff,
        0xffff7fff, 0x7fffffff, 0x000c781f, 0xffff20bf, 0x000080ff,
        0x007fffff, 0x7f7f7f7f, 0x7f7f7f7f, 0x000000e0, 0x1f3e03fe,
        0xfffffffe, 0xe07fffff, 0xfffffffe, 0xf7ffffff, 0xffffffe0,
        0xfffeffff, 0x00007fff, 0xffff0000, 0x1fffffff, 0x00001fff,
        0xffff0000, 0x3fffffff, 0xffff1fff, 0x00000c00, 0x80007fff,
        0x3fffffff, 0x0000ffff, 0xff800000, 0xfffffffc, 0xfffff9ff,
        0x000007fc, 0xffe00000, 0xfffff7bb, 0x00000007, 0x000fffff,
        0xfffffffc, 0x000fffff, 0x68fc0000, 0xfffffc00, 0xffff003f,
        0x0000007f, 0x1fffffff, 0xfffffff0, 0x0007ffff, 0x00008000,
        0x7c00ffdf, 0x000001ff, 0x00000ff7, 0xc47fffff, 0x3e62ffff,
        0x38000005, 0x001c07ff, 0x007e7e7e, 0xffff7f7f, 0xf7ffffff,
        0xffff03ff, 0x00000007, 0xffff000f, 0xfffff87f, 0x0fffffff,
        0xffff3fff, 0x03ffffff, 0xa0f8007f, 0x5f7ffdff, 0xffffffdb,
        0x0003ffff, 0xfff80000, 0x3fffffff, 0xfffffff0, 0x3fffffff,
        0xffff0000, 0xfffcffff, 0x000000ff, 0x03ff0000, 0xaa8a0000,
        0x1fffffff, 0x07fffffe, 0x07fffffe, 0xffffffc0, 0x3fffffff,
        0x7fffffff, 0x1cfcfcfc, 0xffffefff, 0xb7ffff7f, 0x3fff3fff,
        0x07ffffff, 0x001fffff, 0x1fffffff, 0x0001ffff, 0xffffe000,
        0xffff07ff, 0x003fffff, 0x3fffffff, 0x003eff0f, 0x3fffffff,
        0xffff0000, 0xff0fffff, 0x0fffffff, 0xffff00ff, 0x0000000f,
        0x007fffff, 0x003fffff, 0x000000ff, 0xfffffd3f, 0x91bfffff,
        0x003fffff, 0x007fffff, 0x7fffffff, 0x0037ffff, 0x003fffff,
        0x03ffffff, 0xc0ffffff, 0xfeef0001, 0x003fffff, 0x1fffffff,
        0x1fffffff, 0xfffffeff, 0x0000001f, 0x003fffff, 0x003fffff,
        0x0007ffff, 0x0003ffff, 0x000001ff, 0x0007ffff, 0x0007ffff,
        0x0000000f, 0x000303ff, 0x1fffffff, 0xffff0080, 0x0000003f,
        0xffff0000, 0x0000001f, 0x007fffff, 0xfffffff8, 0x00ffffff,
        0xfffffff8, 0x0000ffff, 0xffff0000, 0x000001ff, 0xfffffff8,
        0x0000007f, 0xffff0090, 0x0047ffff, 0xfffffff8, 0x0007ffff,
        0x1400001e, 0xfffbffff, 0x00000fff, 0xbfffbd7f, 0xffff01ff,
        0x7fffffff, 0xfff99fe0, 0x23edfdff, 0xe0010000, 0x00000003,
        0x001fffff, 0x80000780, 0x00000003, 0x0000ffff, 0x000000b0,
        0x00007fff, 0x0f000000, 0x0000ffff, 0x00000010, 0x010007ff,
        0x07ffffff, 0x00000fff, 0x80000000, 0xff6ff27f, 0x8000ffff,
        0x00000002, 0xfffffcff, 0x0001ffff, 0x0000000a, 0xfffff801,
        0x0407ffff, 0xf0010000, 0x200003ff, 0x01ffffff, 0xfffffdff,
        0x00007fff, 0x00000001, 0xfffc0000, 0x0000ffff, 0xfffffb7f,
        0x0001ffff, 0x00000040, 0xfffffdbf, 0x010003ff, 0x0007ffff,
        0x00010000, 0x03ffffff, 0x00007fff, 0x0000000f, 0x00007fff,
        0x0000007f, 0x01ffffff, 0x7fffffff, 0xffff0000, 0x00003fff,
        0x0000ffff, 0x0000000f, 0xe0fffff8, 0x0000ffff, 0x000107ff,
        0xfff80000, 0x0000000b, 0x00ffffff, 0x003fffff, 0x000001ff,
        0x7fffffff, 0x00070000, 0xffff00f0, 0x0fffffff, 0x1fff07ff,
        0x03ff01ff, 0xffdfffff, 0xdfffffff, 0xebffde64, 0xffffffef,
        0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffff3f, 0xf7fffffd,
        0xf7ffffff, 0xffdfffff, 0xffdfffff, 0xffff7fff, 0xffff7fff,
        0xfffffdff, 0xfffffdff, 0x00000ff7, 0x3f801fff, 0x00004000,
        0x00000fff, 0x0000001f, 0x0000080f, 0xffffffef, 0x0af7fe96,
        0xaa96ea84, 0x5ef7f796, 0x0ffffbff, 0x0ffffbee, 0x3fffffff,
        0x001fffff, 0x3fffffff, 0xffff0003, 0x00000001, 0x3fffffff,
        0x000007ff};
        }

        const static UnicodeSet codepoint_set{const_cast<UnicodeSet::run_t *>(__codepoint_set_runs), 369, 0, const_cast<UnicodeSet::bitquad_t *>(__codepoint_set_quads), 391, 0};

        static BinaryPropertyObject property_object{XIDS, std::move(codepoint_set)};
    }
PropertyObject * get_XIDS_PropertyObject() {  return & XIDS_ns::property_object; }
}

